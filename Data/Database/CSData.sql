/*
Navicat MySQL Data Transfer

Source Server         : test
Source Server Version : 50721
Source Host           : localhost:3306
Source Database       : mydata

Target Server Type    : MYSQL
Target Server Version : 50721
File Encoding         : 65001

Date: 2018-12-04 20:44:24
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for case_study
-- ----------------------------
DROP TABLE IF EXISTS `case_study`;
CREATE TABLE `case_study` (
  `keynum` int(11) NOT NULL,
  `methodName` varchar(255) DEFAULT NULL,
  `methodOfClass` varchar(255) DEFAULT NULL,
  `projectName` varchar(255) DEFAULT NULL,
  `SIZE` double DEFAULT NULL,
  `LCOM1` double DEFAULT NULL,
  `LCOM2` double DEFAULT NULL,
  `LCOM3` double DEFAULT NULL,
  `LCOM4` double DEFAULT NULL,
  `COH` double DEFAULT NULL,
  `CC` double DEFAULT NULL,
  `Label` double DEFAULT NULL,
  `pLabel_size` double DEFAULT NULL,
  `pLabel_lcom1` double DEFAULT NULL,
  `pLabel_lcom2` double DEFAULT NULL,
  `pLabel_lcom3` double DEFAULT NULL,
  `pLabel_lcom4` double DEFAULT NULL,
  `pLabel_coh` double DEFAULT NULL,
  `pLabel_cc` double DEFAULT NULL,
  `Label_jdorant` double DEFAULT NULL,
  `Label_jextract` double DEFAULT NULL,
  `code` longtext,
  `DR` double DEFAULT NULL,
  `NOAV` double DEFAULT NULL,
  `WMA` double DEFAULT NULL,
  PRIMARY KEY (`keynum`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of case_study
-- ----------------------------
INSERT INTO `case_study` VALUES ('1', 'main(String[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\Test.java', 'jsmooth', '9', '24', '12', '-1000', '3', '0.3333', '0.2238', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '/** \n * @param args the command line arguments\n */\npublic static void main(String[] args) throws Exception {\n  String[] d=new String[2];\n  d[0]=\"test\";\n  d[1]=\"test2\";\n  JSmoothModelBean model=new JSmoothModelBean();\n  model.setJarLocation(\"MyJarLocation\");\n  model.setClassPath(d);\n  JSmoothModelPersistency.save(new File(\"c:/result.xml\"),model);\n}\n', '0.5', '3', '1');
INSERT INTO `case_study` VALUES ('13', 'compile(File,SkeletonBean,File,JSmoothModelBean,File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\ExeCompiler.java', 'jsmooth', '49', '1089', '1002', '-1000', '8', '0.0593', '0.0336', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public boolean compile(File skelroot,SkeletonBean skel,File basedir,JSmoothModelBean data,File out) throws Exception {\n  try {\n    fireStepChange(0,\"Starting compilation\");\n    File pattern=new File(skelroot,skel.getExecutableName());\n    if (pattern.exists() == false) {\n      m_errors.add(\"Error: Can\'t find any skeleton at \" + skelroot);\n      fireFailedChange();\n      return false;\n    }\n    fireStepChange(10,\"Scanning skeleton...\");\n    PEFile pe=new PEFile(pattern);\n    pe.open();\n    PEResourceDirectory resdir=pe.getResourceDirectory();\n    boolean resb=false;\n    if (data.getEmbeddedJar() == true) {\n      if (data.getJarLocation() == null) {\n        m_errors.add(\"Error: Jar is not specified!\");\n        fireFailedChange();\n        return false;\n      }\n      fireStepChange(40,\"Loading Jar...\");\n      File jarloc=concFile(basedir,new File(data.getJarLocation()));\n      if (jarloc.exists() == false) {\n        m_errors.add(\"Error: Can\'t find jar at \" + jarloc);\n        fireFailedChange();\n        return false;\n      }\n      ByteBuffer jardata=load(jarloc);\n      fireStepChange(60,\"Adding Jar to Resources...\");\n      resb=resdir.replaceResource(skel.getResourceCategory(),skel.getResourceJarId(),1033,jardata);\n      if (resb == false) {\n        m_errors.add(\"Error: Can\'t replace jar resource! It is probably missing from the skeleton.\");\n        fireFailedChange();\n        return false;\n      }\n    }\n    fireStepChange(70,\"Adding Properties to Resources...\");\n    String props=PropertiesBuilder.makeProperties(basedir,data);\n    ByteBuffer propdata=convert(props);\n    resb=resdir.replaceResource(skel.getResourceCategory(),skel.getResourcePropsId(),1033,propdata);\n    if (data.getIconLocation() != null) {\n      fireStepChange(80,\"Loading icon...\");\n      String iconpath;\n      if (new java.io.File(data.getIconLocation()).isAbsolute())       iconpath=data.getIconLocation();\n else       iconpath=new java.io.File(basedir,data.getIconLocation()).getAbsolutePath();\n      Image img=getScaledImage(iconpath,32,32);\n      Hashtable set=calculateColorCount(img);\n      if (img != null) {\n        net.charabia.jsmoothgen.pe.res.ResIcon resicon=new net.charabia.jsmoothgen.pe.res.ResIcon(img);\n        pe.replaceDefaultIcon(resicon);\n      }\n    }\n    fireStepChange(90,\"Saving exe...\");\n    pe.dumpTo(out);\n    fireCompleteChange();\n    return true;\n  }\n catch (  Exception exc) {\n    m_errors.add(\"Error: \" + exc.getMessage());\n    exc.printStackTrace();\n    fireFailedChange();\n    return false;\n  }\n}\n', '0.4', '18', '10');
INSERT INTO `case_study` VALUES ('14', 'loadImages(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\ExeCompiler.java', 'jsmooth', '13', '63', '48', '-1000', '4', '0.1731', '0.0877', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public Image[] loadImages(String path){\n  File f=new File(path);\n  if (path.toUpperCase().endsWith(\".ICO\")) {\n    try {\n      java.awt.Image[] images=net.charabia.util.codec.IcoCodec.loadImages(f);\n      if ((images != null) && (images.length > 0)) {\n        return images;\n      }\n    }\n catch (    java.io.IOException exc) {\n      exc.printStackTrace();\n    }\n  }\n  javax.swing.ImageIcon icon=new javax.swing.ImageIcon(path,\"default icon\");\n  java.awt.Image[] imgs=new java.awt.Image[1];\n  imgs[0]=icon.getImage();\n  return imgs;\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('15', 'checkImageLoaded(Image)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\ExeCompiler.java', 'jsmooth', '6', '12', '9', '-1000', '4', '0.25', '0.0952', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void checkImageLoaded(Image img){\n  MediaTracker mtrack=new MediaTracker(new Canvas());\n  mtrack.addImage(img,1);\n  try {\n    mtrack.waitForAll();\n  }\n catch (  InterruptedException e) {\n  }\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('16', 'calculateColorCount(Image)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\ExeCompiler.java', 'jsmooth', '23', '230', '207', '-1000', '9', '0.0897', '0.0347', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private Hashtable calculateColorCount(Image img){\n  int width=img.getWidth(null);\n  int height=img.getHeight(null);\n  int[] pixels=new int[width * height];\n  PixelGrabber grabber=new PixelGrabber(img,0,0,width,height,pixels,0,width);\n  try {\n    grabber.grabPixels();\n  }\n catch (  InterruptedException e) {\n    System.err.println(\"interrupted waiting for pixels!\");\n  }\n  Hashtable result=new Hashtable();\n  int colorindex=0;\n  for (int i=0; i < pixels.length; i++) {\n    int pix=pixels[i];\n    if (((pix >> 24) & 0xFF) > 0) {\n      pix&=0x00FFFFFF;\n      Integer pixi=new Integer(pix);\n      Object o=result.get(pixi);\n      if (o == null) {\n        result.put(pixi,new Integer(colorindex++));\n      }\n    }\n  }\n  return result;\n}\n', '0', '12', '5');
INSERT INTO `case_study` VALUES ('21', 'convert(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\ExeCompiler.java', 'jsmooth', '9', '19', '2', '-1000', '3', '0.2889', '0.2405', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private ByteBuffer convert(String data){\n  ByteBuffer result=ByteBuffer.allocate(data.length() + 1);\n  result.position(0);\n  for (int i=0; i < data.length(); i++) {\n    result.put((byte)data.charAt(i));\n  }\n  result.put((byte)0);\n  result.position(0);\n  return result;\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('86', 'normalizePaths(java.io.File,boolean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\JSmoothModelBean.java', 'jsmooth', '18', '98', '43', '-1000', '3', '0.1898', '0.1327', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public String[] normalizePaths(java.io.File filebase,boolean toRelativePath){\n  Vector result=new Vector();\n  m_iconLocation=checkRelativePath(filebase,m_iconLocation,result,\"Icon location\",toRelativePath);\n  m_jarLocation=checkRelativePath(filebase,m_jarLocation,result,\"Jar location\",toRelativePath);\n  m_bundledJVM=checkRelativePath(filebase,m_bundledJVM,result,\"Bundle JVM location\",toRelativePath);\n  m_executableName=checkRelativePath(filebase,m_executableName,result,\"Executable location\",toRelativePath);\n  if (m_executableName != null) {\n    File exebase=new File(m_executableName);\n    if (exebase.isAbsolute() == false)     exebase=new File(filebase,exebase.toString()).getParentFile();\n    if ((m_currentDirectory != null) && (m_currentDirectory.indexOf(\"${\") >= 0))     m_currentDirectory=checkRelativePath(exebase,m_currentDirectory,result,\"Current directory\",toRelativePath);\n  }\n  if (m_classPath != null) {\n    for (int i=0; i < m_classPath.length; i++) {\n      m_classPath[i]=checkRelativePath(filebase,m_classPath[i],result,\"Classpath entry (\" + i + \")\",toRelativePath);\n    }\n  }\n  if (result.size() == 0)   return null;\n  String[] res=new String[result.size()];\n  result.toArray(res);\n  return res;\n}\n', '0', '6', '8');
INSERT INTO `case_study` VALUES ('87', 'checkRelativePath(java.io.File,String,java.util.Vector,String,boolean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\JSmoothModelBean.java', 'jsmooth', '14', '63', '35', '-1000', '4', '0.1643', '0.161', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private String checkRelativePath(java.io.File root,String value,java.util.Vector errors,String name,boolean toRelativePath){\n  if (value == null)   return value;\n  if (toRelativePath) {\n    File nf=JSmoothModelPersistency.makePathRelativeIfPossible(root,new File(value));\n    if (nf.isAbsolute()) {\n      errors.add(name);\n    }\n    return nf.toString();\n  }\n else {\n    File nf=new File(value);\n    if (nf.isAbsolute() == false) {\n      nf=new File(root,value);\n      nf=nf.getAbsoluteFile();\n      try {\n        nf=nf.getCanonicalFile();\n        nf=nf.getAbsoluteFile();\n      }\n catch (      IOException iox) {\n      }\n    }\n    return nf.toString();\n  }\n}\n', '1', '8', '6');
INSERT INTO `case_study` VALUES ('88', 'load(File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\JSmoothModelPersistency.java', 'jsmooth', '29', '363', '320', '-1000', '9', '0.1069', '0.0673', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static JSmoothModelBean load(File fin) throws IOException {\n  FileReader fr=new FileReader(fin);\n  try {\n    JSmoothModelBean jobj=new JSmoothModelBean();\n    String INVALID=\"INVALID\";\n    jobj.setSkeletonName(INVALID);\n    JOXBeanReader jbr=new JOXBeanReader(fr);\n    jbr.readObject(jobj);\n    jbr.close();\n    fr.close();\n    if (jobj.getSkeletonName() == INVALID) {\n      throw new Exception(\"Not a JOX File\");\n    }\n    if ((jobj.getJarLocation() != null) && (jobj.getJarLocation().length() > 0)) {\n      jobj.setEmbeddedJar(true);\n    }\n    return jobj;\n  }\n catch (  Exception exc) {\n    fr.close();\n    try {\n      FileInputStream fis=new FileInputStream(fin);\n      XMLDecoder dec=new XMLDecoder(fis);\n      JSmoothModelBean xobj=(JSmoothModelBean)dec.readObject();\n      fis.close();\n      if ((xobj.getJarLocation() != null) && (xobj.getJarLocation().length() > 0))       xobj.setEmbeddedJar(true);\n      return xobj;\n    }\n catch (    Exception exc2) {\n      exc2.printStackTrace();\n      throw new IOException(exc2.toString());\n    }\n  }\n}\n', '0.2', '10', '8');
INSERT INTO `case_study` VALUES ('89', 'save(File,JSmoothModelBean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\JSmoothModelPersistency.java', 'jsmooth', '11', '47', '39', '-1000', '5', '0.1818', '0.0769', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public static void save(File fout,JSmoothModelBean obj) throws IOException {\n  try {\n    String jarloc=obj.getJarLocation();\n    if (obj.getEmbeddedJar() == false)     obj.setJarLocation(null);\n    FileWriter fw=new FileWriter(fout);\n    JOXBeanWriter jbw=new JOXBeanWriter(fw);\n    jbw.writeObject(\"jsmoothproject\",obj);\n    jbw.close();\n    fw.close();\n    obj.setJarLocation(jarloc);\n  }\n catch (  Exception ex) {\n    throw new IOException(ex.toString());\n  }\n finally {\n  }\n}\n', '0.3333333333333333', '6', '3');
INSERT INTO `case_study` VALUES ('90', 'makePathRelativeIfPossible(File,File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\JSmoothModelPersistency.java', 'jsmooth', '39', '597', '453', '-1000', '4', '0.106', '0.0962', '0', '0', '0', '1', '0', '0', '1', '1', '1', '1', 'static public File makePathRelativeIfPossible(File root,File f){\n  if (f.toString().indexOf(\"${\") >= 0)   return f;\n  File orgfile=f;\n  try {\n    if (f.isAbsolute() == false) {\n      f=new File(root,f.toString());\n    }\n    f=f.getCanonicalFile();\n    f=f.getAbsoluteFile();\n    root=root.getCanonicalFile();\n    root=root.getAbsoluteFile();\n  }\n catch (  IOException iox) {\n    iox.printStackTrace();\n    System.out.println(\"Failed, returning \" + orgfile);\n    return orgfile;\n  }\n  Vector rootvec=new Vector();\n  Vector targetvec=new Vector();\n  File cur;\n  cur=root;\n  while (cur != null) {\n    String n=cur.getName();\n    if (n.equals(\"\"))     n=cur.getAbsolutePath();\n    rootvec.add(0,n);\n    cur=cur.getParentFile();\n  }\n  cur=f;\n  while (cur != null) {\n    String n=cur.getName();\n    if (n.equals(\"\"))     n=cur.getAbsolutePath();\n    targetvec.add(0,n);\n    cur=cur.getParentFile();\n  }\n  int cursor=0;\n  while ((cursor < rootvec.size()) && (cursor < targetvec.size())) {\n    if (rootvec.elementAt(cursor).equals(targetvec.elementAt(cursor)) == false)     break;\n    cursor++;\n  }\n  if (cursor == 0)   return f;\n  if ((cursor == rootvec.size()) && (cursor == targetvec.size()))   return new File(\".\");\n  StringBuffer buffer=new StringBuffer();\n  for (int i=cursor; i < rootvec.size(); i++) {\n    buffer.append(\"../\");\n  }\n  for (int i=cursor; i < targetvec.size(); i++) {\n    buffer.append(targetvec.elementAt(i).toString());\n    buffer.append(\"/\");\n  }\n  return new File(buffer.toString());\n}\n', '0', '13', '16');
INSERT INTO `case_study` VALUES ('91', 'main(String[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\JSmoothModelPersistency.java', 'jsmooth', '15', '89', '73', '-1000', '5', '0.15', '0.0673', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'static public void main(String[] args){\n  File root=new File(\"z:/a/b/c/d\");\n  File t1=new File(\"z:/a/b/e/f\");\n  File t2=new File(\"c:/t/r\");\n  File t3=new File(\"z:/a/b/c/d/i/m\");\n  File t4=new File(\"z:/a/b/c/d\");\n  System.out.println(\"Rel root, t1: \" + makePathRelativeIfPossible(root,t1));\n  System.out.println(\"Rel root, t2: \" + makePathRelativeIfPossible(root,t2));\n  System.out.println(\"Rel root, t3: \" + makePathRelativeIfPossible(root,t3));\n  System.out.println(\"Rel root, t4: \" + makePathRelativeIfPossible(root,t4));\n  File f1=new File(\"f:\\\\a\\\\b\");\n  File f2=new File(\"f:\\\\a\\\\c\");\n  File f3=new File(f1,f2.toString());\n  System.out.println(\"f3 = \" + f3.toString());\n}\n', '0', '9', '1');
INSERT INTO `case_study` VALUES ('98', 'makeProperties(File,JSmoothModelBean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\PropertiesBuilder.java', 'jsmooth', '50', '837', '449', '-1000', '8', '0.1169', '0.1548', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', '/** \n * Creates a text containing all the relevant properties of a\n * JSmoothModelBean object. The properties are output in the form\n * \"key=value\".\n * <p>\n * Note that all the paths are converted to be made relative to\n * the basedir parameter provided. All the paths converted are\n * expected to be relative to the targetted executable binary\n * (before the conversion is applied, that is).\n */\nstatic public String makeProperties(File basedir,JSmoothModelBean obj){\n  StringBuffer out=new StringBuffer();\n  addPair(\"arguments\",obj.getArguments(),out);\n  addPair(\"mainclassname\",obj.getMainClassName(),out);\n  addPair(\"jvmsearch\",makePathConc(obj.getJVMSearchPath()),out);\n  addPair(\"minversion\",obj.getMinimumVersion(),out);\n  addPair(\"maxversion\",obj.getMaximumVersion(),out);\n  addPair(\"currentdir\",obj.getCurrentDirectory(),out);\n  if (obj.getEmbeddedJar() && (obj.getJarLocation().trim().length() > 0)) {\n    addPair(\"embedjar\",\"true\",out);\n  }\n else {\n    addPair(\"embedjar\",\"false\",out);\n  }\n  if (obj.getMaximumMemoryHeap() > 1) {\n    addPair(\"maxheap\",Integer.toString(obj.getMaximumMemoryHeap()),out);\n  }\n  if (obj.getInitialMemoryHeap() > 1) {\n    addPair(\"initialheap\",Integer.toString(obj.getInitialMemoryHeap()),out);\n  }\n  File curdir=new File(obj.getExecutableName()).getParentFile();\n  if (curdir == null)   curdir=basedir.getAbsoluteFile();\n  if (curdir.isAbsolute() == false) {\n    curdir=new File(basedir,curdir.toString());\n  }\n  if (obj.getCurrentDirectory() != null) {\n    File newcurdir=new File(obj.getCurrentDirectory());\n    if (!\"${EXECUTABLEPATH}\".equalsIgnoreCase(obj.getCurrentDirectory())) {\n      if (newcurdir.isAbsolute() == false) {\n        curdir=new File(curdir,newcurdir.toString());\n      }\n else       curdir=newcurdir;\n    }\n  }\n  if (obj.getBundledJVMPath() != null)   addPair(\"bundledvm\",getRenormalizedPathIfNeeded(obj.getBundledJVMPath(),basedir,curdir),out);\n  if (obj.getClassPath() != null) {\n    String[] relcp=new String[obj.getClassPath().length];\n    for (int i=0; i < relcp.length; i++) {\n      relcp[i]=getRenormalizedPathIfNeeded(obj.getClassPath()[i],basedir,curdir);\n    }\n    addPair(\"classpath\",makePathConc(relcp),out);\n  }\n  if (obj.getSkeletonProperties() != null) {\n    for (int i=0; i < obj.getSkeletonProperties().length; i++) {\n      JSmoothModelBean.Property prop=obj.getSkeletonProperties()[i];\n      if (prop.getKey() != null) {\n        String val=prop.getValue();\n        if (val == null)         val=\"\";\n        addPair(\"skel_\" + prop.getKey(),val,out);\n      }\n    }\n  }\n  JavaPropertyPair[] javapairs=obj.getJavaProperties();\n  if (javapairs != null) {\n    addPair(\"javapropertiescount\",new Integer(javapairs.length).toString(),out);\n    for (int i=0; i < javapairs.length; i++) {\n      addPair(\"javaproperty_name_\" + i,javapairs[i].getName(),out);\n      addPair(\"javaproperty_value_\" + i,javapairs[i].getValue(),out);\n    }\n  }\n  return out.toString();\n}\n', '0.15789473684210525', '14', '19');
INSERT INTO `case_study` VALUES ('100', 'escapeString(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\PropertiesBuilder.java', 'jsmooth', '10', '29', '13', '-1000', '2', '0.3333', '0.3636', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'static public String escapeString(String str){\n  if (str == null)   return \"\";\n  StringBuffer out=new StringBuffer();\n  for (int i=0; i < str.length(); i++) {\n    char c=str.charAt(i);\nswitch (c) {\ncase \'\\n\':\n      out.append(\"\\\\n\");\n    break;\ncase \'\\t\':\n  out.append(\"\\\\t\");\nbreak;\ncase \'\\r\':\nout.append(\"\\\\r\");\nbreak;\ncase \'\\\\\':\nout.append(\"\\\\\\\\\");\nbreak;\ndefault :\nout.append(c);\n}\n}\nreturn out.toString();\n}\n', '0', '4', '7');
INSERT INTO `case_study` VALUES ('101', 'addPair(String,String,StringBuffer)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\PropertiesBuilder.java', 'jsmooth', '6', '9', '3', '-1000', '3', '0.3333', '0.2381', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'static private void addPair(String name,String value,StringBuffer out){\n  out.append(escapeString(name));\n  out.append(\"=\");\n  out.append(escapeString(value));\n  out.append(\"\\n\");\n}\n', '0', '3', '1');
INSERT INTO `case_study` VALUES ('102', 'makePathConc(String[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\PropertiesBuilder.java', 'jsmooth', '7', '13', '5', '-1000', '3', '0.4762', '0.2333', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'static public String makePathConc(String[] elements){\n  StringBuffer buf=new StringBuffer();\n  if (elements != null)   for (int i=0; i < elements.length; i++) {\n    buf.append(elements[i]);\n    if ((i + 1) < elements.length)     buf.append(\";\");\n  }\n  return buf.toString();\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('105', 'open()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEFile.java', 'jsmooth', '30', '404', '373', '-1000', '11', '0.0652', '0.0217', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void open() throws FileNotFoundException, IOException {\n  m_in=new FileInputStream(m_file);\n  m_channel=m_in.getChannel();\n  m_oldmsheader=new PEOldMSHeader(this);\n  m_oldmsheader.read();\n  long headoffset=m_oldmsheader.e_lfanew;\n  m_header=new PEHeader(this,headoffset);\n  m_header.read();\n  int seccount=m_header.NumberOfSections;\n  long offset=headoffset + (m_header.NumberOfRvaAndSizes * 8) + 24+ 96;\n  for (int i=0; i < seccount; i++) {\n    PESection sect=new PESection(this,offset);\n    sect.read();\n    m_sections.add(sect);\n    offset+=40;\n  }\n  ByteBuffer resbuf=null;\n  long resourceoffset=m_header.ResourceDirectory_VA;\n  for (int i=0; i < seccount; i++) {\n    PESection sect=(PESection)m_sections.get(i);\n    if (sect.VirtualAddress == resourceoffset) {\n      PEResourceDirectory prd=new PEResourceDirectory(this,sect);\n      resbuf=prd.buildResource(sect.VirtualAddress);\n      break;\n    }\n  }\n}\n', '0.5', '10', '4');
INSERT INTO `case_study` VALUES ('107', 'main(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEFile.java', 'jsmooth', '70', '2387', '2359', '-1000', '53', '0.0341', '0.0109', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public static void main(String args[]) throws IOException, CloneNotSupportedException, Exception {\n  PEFile pe=new PEFile(new File(\"F:/Documents and Settings/Rodrigo/Mes documents/projects/jsmooth/skeletons/simplewrap/JWrap.exe\"));\n  pe.open();\n  File fout=new File(\"F:/Documents and Settings/Rodrigo/Mes documents/projects/jsmooth/skeletons/simplewrap/gen-application.jar\");\n  FileInputStream fis=new FileInputStream(fout);\n  ByteBuffer data=ByteBuffer.allocate((int)fout.length());\n  data.order(ByteOrder.LITTLE_ENDIAN);\n  FileChannel fischan=fis.getChannel();\n  fischan.read(data);\n  data.position(0);\n  fis.close();\n  PEResourceDirectory resdir=pe.getResourceDirectory();\n  java.awt.Image img=java.awt.Toolkit.getDefaultToolkit().getImage(\"c:\\\\gnome-color-browser2.png\");\n  java.awt.MediaTracker mt=new java.awt.MediaTracker(new javax.swing.JLabel(\"toto\"));\n  mt.addImage(img,1);\n  try {\n    mt.waitForAll();\n  }\n catch (  Exception exc) {\n    exc.printStackTrace();\n  }\n  ResIcon newicon=new ResIcon(img);\n  pe.replaceDefaultIcon(newicon);\n  File out=new File(\"F:/Documents and Settings/Rodrigo/Mes documents/projects/jsmooth/skeletons/simplewrap/COPIE.exe\");\n  pe.dumpTo(out);\n}\n', '1', '12', '2');
INSERT INTO `case_study` VALUES ('109', 'dumpTo(File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEFile.java', 'jsmooth', '101', '4374', '3698', '-1000', '19', '0.0458', '0.0449', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public void dumpTo(File destination) throws IOException, CloneNotSupportedException {\n  int outputcount=0;\n  FileOutputStream fos=new FileOutputStream(destination);\n  FileChannel out=fos.getChannel();\n  PEOldMSHeader oldmsheader=(PEOldMSHeader)this.m_oldmsheader.clone();\n  PEHeader peheader=(PEHeader)m_header.clone();\n  Vector sections=new Vector();\n  for (int i=0; i < m_sections.size(); i++) {\n    PESection sect=(PESection)m_sections.get(i);\n    PESection cs=(PESection)sect.clone();\n    sections.add(cs);\n  }\n  long newexeoffset=oldmsheader.e_lfanew;\n  ByteBuffer msheadbuffer=oldmsheader.get();\n  outputcount=out.write(msheadbuffer);\n  this.m_channel.position(64);\n  out.transferFrom(this.m_channel,64,newexeoffset - 64);\n  ByteBuffer headbuffer=peheader.get();\n  out.position(newexeoffset);\n  outputcount=out.write(headbuffer);\n  long offset=oldmsheader.e_lfanew + (m_header.NumberOfRvaAndSizes * 8) + 24+ 96;\n  out.position(offset);\n  for (int i=0; i < sections.size(); i++) {\n    PESection sect=(PESection)sections.get(i);\n    ByteBuffer buf=sect.get();\n    outputcount=out.write(buf);\n  }\n  offset=1024;\n  long virtualAddress=offset;\n  if ((virtualAddress % peheader.SectionAlignment) > 0)   virtualAddress+=peheader.SectionAlignment - (virtualAddress % peheader.SectionAlignment);\n  long resourceoffset=m_header.ResourceDirectory_VA;\n  for (int i=0; i < sections.size(); i++) {\n    PESection sect=(PESection)sections.get(i);\n    if (resourceoffset == sect.VirtualAddress) {\n      out.position(offset);\n      long sectoffset=offset;\n      PEResourceDirectory prd=this.getResourceDirectory();\n      ByteBuffer resbuf=prd.buildResource(sect.VirtualAddress);\n      resbuf.position(0);\n      out.write(resbuf);\n      offset+=resbuf.capacity();\n      long rem=offset % this.m_header.FileAlignment;\n      if (rem != 0)       offset+=this.m_header.FileAlignment - rem;\n      if (out.size() + 1 < offset) {\n        ByteBuffer padder=ByteBuffer.allocate(1);\n        out.write(padder,offset - 1);\n      }\n      long virtualSize=resbuf.capacity();\n      if ((virtualSize % peheader.FileAlignment) > 0)       virtualSize+=peheader.SectionAlignment - (virtualSize % peheader.SectionAlignment);\n      sect.PointerToRawData=sectoffset;\n      sect.SizeOfRawData=resbuf.capacity();\n      if ((sect.SizeOfRawData % this.m_header.FileAlignment) > 0)       sect.SizeOfRawData+=(this.m_header.FileAlignment - (sect.SizeOfRawData % this.m_header.FileAlignment));\n      sect.VirtualAddress=virtualAddress;\n      sect.VirtualSize=virtualSize;\n      virtualAddress+=virtualSize;\n    }\n else     if (sect.PointerToRawData > 0) {\n      out.position(offset);\n      this.m_channel.position(sect.PointerToRawData);\n      long sectoffset=offset;\n      out.position(offset + sect.SizeOfRawData);\n      ByteBuffer padder=ByteBuffer.allocate(1);\n      out.write(padder,offset + sect.SizeOfRawData - 1);\n      long outted=out.transferFrom(this.m_channel,offset,sect.SizeOfRawData);\n      offset+=sect.SizeOfRawData;\n      long rem=offset % this.m_header.FileAlignment;\n      if (rem != 0) {\n        offset+=this.m_header.FileAlignment - rem;\n      }\n      sect.PointerToRawData=sectoffset;\n      sect.VirtualAddress=virtualAddress;\n      virtualAddress+=sect.VirtualSize;\n      if ((virtualAddress % peheader.SectionAlignment) > 0)       virtualAddress+=peheader.SectionAlignment - (virtualAddress % peheader.SectionAlignment);\n    }\n else {\n      long virtualSize=sect.VirtualSize;\n      if ((virtualSize % peheader.SectionAlignment) > 0)       virtualSize+=peheader.SectionAlignment - (virtualSize % peheader.SectionAlignment);\n      sect.VirtualAddress=virtualAddress;\n      virtualAddress+=virtualSize;\n    }\n  }\n  peheader.updateVAAndSize(m_sections,sections);\n  headbuffer=peheader.get();\n  out.position(newexeoffset);\n  outputcount=out.write(headbuffer);\n  offset=oldmsheader.e_lfanew + (m_header.NumberOfRvaAndSizes * 8) + 24+ 96;\n  out.position(offset);\n  for (int i=0; i < sections.size(); i++) {\n    PESection sect=(PESection)sections.get(i);\n    ByteBuffer buf=sect.get();\n    outputcount=out.write(buf);\n  }\n  fos.flush();\n  fos.close();\n}\n', '0.5', '54', '15');
INSERT INTO `case_study` VALUES ('110', 'replaceDefaultIcon(ResIcon)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEFile.java', 'jsmooth', '26', '279', '233', '-1000', '10', '0.1538', '0.09', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void replaceDefaultIcon(ResIcon icon) throws Exception {\n  PEResourceDirectory resdir=getResourceDirectory();\n  PEResourceDirectory.DataEntry entry=resdir.getData(\"#14\",null,null);\n  if (entry == null) {\n    throw new Exception(\"Can\'t find any icon group in the file!\");\n  }\n  entry.Data.position(0);\n  entry.Data.position(0);\n  ResIconDir rid=new ResIconDir(entry.Data);\n  int iconid=rid.getEntries()[0].dwImageOffset;\n  PEResourceDirectory.DataEntry iconentry=resdir.getData(\"#3\",\"#\" + iconid,null);\n  iconentry.Data.position(0);\n  rid.getEntries()[0].bWidth=(short)icon.Width;\n  rid.getEntries()[0].bHeight=(short)(icon.Height / 2);\n  rid.getEntries()[0].bColorCount=(short)(1 << icon.BitsPerPixel);\n  rid.getEntries()[0].wBitCount=icon.BitsPerPixel;\n  rid.getEntries()[0].dwBytesInRes=icon.getData().remaining();\n  iconentry.Data=icon.getData();\n  iconentry.Size=iconentry.Data.remaining();\n  entry.setData(rid.getData());\n}\n', '0.6666666666666666', '12', '2');
INSERT INTO `case_study` VALUES ('113', 'read()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEHeader.java', 'jsmooth', '77', '367', '0', '-1000', '4', '0.0265', '0.3132', '0', '1', '0', '0', '0', '0', '1', '0', '0', '1', 'public void read() throws IOException {\n  FileChannel ch=m_pe.getChannel();\n  ByteBuffer head=ByteBuffer.allocate(255);\n  head.order(ByteOrder.LITTLE_ENDIAN);\n  ch.position(m_baseoffset);\n  ch.read(head);\n  head.position(0);\n  int pemagic=head.getInt();\n  Machine=head.getShort();\n  NumberOfSections=head.getShort();\n  TimeDateStamp=head.getInt();\n  PointerToSymbolTable=head.getInt();\n  NumberOfSymbols=head.getInt();\n  SizeOfOptionalHeader=head.getShort();\n  Characteristics=head.getShort();\n  Magic=head.getShort();\n  MajorLinkerVersion=head.get();\n  MinorLinkerVersion=head.get();\n  SizeOfCode=head.getInt();\n  SizeOfInitializedData=head.getInt();\n  SizeOfUninitializedData=head.getInt();\n  AddressOfEntryPoint=head.getInt();\n  BaseOfCode=head.getInt();\n  BaseOfData=head.getInt();\n  ImageBase=head.getInt();\n  SectionAlignment=head.getInt();\n  FileAlignment=head.getInt();\n  MajorOperatingSystemVersion=head.getShort();\n  MinorOperatingSystemVersion=head.getShort();\n  MajorImageVersion=head.getShort();\n  MinorImageVersion=head.getShort();\n  MajorSubsystemVersion=head.getShort();\n  MinorSubsystemVersion=head.getShort();\n  Reserved1=head.getInt();\n  SizeOfImage=head.getInt();\n  SizeOfHeaders=head.getInt();\n  CheckSum=head.getInt();\n  Subsystem=head.getShort();\n  DllCharacteristics=head.getShort();\n  SizeOfStackReserve=head.getInt();\n  SizeOfStackCommit=head.getInt();\n  SizeOfHeapReserve=head.getInt();\n  SizeOfHeapCommit=head.getInt();\n  LoaderFlags=head.getInt();\n  NumberOfRvaAndSizes=head.getInt();\n  ExportDirectory_VA=head.getInt();\n  ExportDirectory_Size=head.getInt();\n  ImportDirectory_VA=head.getInt();\n  ImportDirectory_Size=head.getInt();\n  ResourceDirectory_VA=head.getInt();\n  ResourceDirectory_Size=head.getInt();\n  ExceptionDirectory_VA=head.getInt();\n  ExceptionDirectory_Size=head.getInt();\n  SecurityDirectory_VA=head.getInt();\n  SecurityDirectory_Size=head.getInt();\n  BaseRelocationTable_VA=head.getInt();\n  BaseRelocationTable_Size=head.getInt();\n  DebugDirectory_VA=head.getInt();\n  DebugDirectory_Size=head.getInt();\n  ArchitectureSpecificData_VA=head.getInt();\n  ArchitectureSpecificData_Size=head.getInt();\n  RVAofGP_VA=head.getInt();\n  RVAofGP_Size=head.getInt();\n  TLSDirectory_VA=head.getInt();\n  TLSDirectory_Size=head.getInt();\n  LoadConfigurationDirectory_VA=head.getInt();\n  LoadConfigurationDirectory_Size=head.getInt();\n  BoundImportDirectoryinheaders_VA=head.getInt();\n  BoundImportDirectoryinheaders_Size=head.getInt();\n  ImportAddressTable_VA=head.getInt();\n  ImportAddressTable_Size=head.getInt();\n  DelayLoadImportDescriptors_VA=head.getInt();\n  DelayLoadImportDescriptors_Size=head.getInt();\n  COMRuntimedescriptor_VA=head.getInt();\n  COMRuntimedescriptor_Size=head.getInt();\n}\n', '1', '3', '1');
INSERT INTO `case_study` VALUES ('114', 'dump(PrintStream)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEHeader.java', 'jsmooth', '70', '137', '0', '-1000', '3', '0.029', '0.3339', '0', '1', '0', '0', '0', '0', '1', '0', '0', '1', 'public void dump(PrintStream out){\n  out.println(\"HEADER:\");\n  out.println(\"int  Machine=\" + Machine + \" //  4\");\n  out.println(\"int  NumberOfSections=\" + NumberOfSections + \"     //  6\");\n  out.println(\"long   TimeDateStamp=\" + TimeDateStamp + \" //  8\");\n  out.println(\"long   PointerToSymbolTable=\" + PointerToSymbolTable + \"     //  C\");\n  out.println(\"long   NumberOfSymbols=\" + NumberOfSymbols + \" // 10\");\n  out.println(\"int  SizeOfOptionalHeader=\" + SizeOfOptionalHeader + \"     // 14\");\n  out.println(\"int  Characteristics=\" + Characteristics + \" // 16\");\n  out.println(\"int    Magic=\" + Magic + \"     // 18\");\n  out.println(\"short   MajorLinkerVersion=\" + MajorLinkerVersion + \"     // 1a\");\n  out.println(\"short   MinorLinkerVersion=\" + MinorLinkerVersion + \" // 1b\");\n  out.println(\"long   SizeOfCode=\" + SizeOfCode + \"     // 1c\");\n  out.println(\"long   SizeOfInitializedData=\" + SizeOfInitializedData + \" // 20\");\n  out.println(\"long   SizeOfUninitializedData=\" + SizeOfUninitializedData + \"     // 24\");\n  out.println(\"long   AddressOfEntryPoint=\" + AddressOfEntryPoint + \" // 28\");\n  out.println(\"long   BaseOfCode=\" + BaseOfCode + \"     // 2c\");\n  out.println(\"long   BaseOfData=\" + BaseOfData + \"    //    // NT additional fields. // 30\");\n  out.println(\"long   ImageBase=\" + ImageBase + \"     // 34\");\n  out.println(\"long   SectionAlignment=\" + SectionAlignment + \" // 38\");\n  out.println(\"long   FileAlignment=\" + FileAlignment + \"     // 3c\");\n  out.println(\"int    MajorOperatingSystemVersion=\" + MajorOperatingSystemVersion + \" // 40\");\n  out.println(\"int    MinorOperatingSystemVersion=\" + MinorOperatingSystemVersion + \"     // 42\");\n  out.println(\"int    MajorImageVersion=\" + MajorImageVersion + \" // 44\");\n  out.println(\"int    MinorImageVersion=\" + MinorImageVersion + \"     // 46\");\n  out.println(\"int    MajorSubsystemVersion=\" + MajorSubsystemVersion + \" // 48\");\n  out.println(\"int    MinorSubsystemVersion=\" + MinorSubsystemVersion + \"     // 4a\");\n  out.println(\"long   Reserved1=\" + Reserved1 + \"     // 4c\");\n  out.println(\"long   SizeOfImage=\" + SizeOfImage + \" // 50\");\n  out.println(\"long   SizeOfHeaders=\" + SizeOfHeaders + \"     // 54\");\n  out.println(\"long   CheckSum=\" + CheckSum + \"     // 58\");\n  out.println(\"int    Subsystem=\" + Subsystem + \" // 5c\");\n  out.println(\"int    DllCharacteristics=\" + DllCharacteristics + \"     // 5e\");\n  out.println(\"long   SizeOfStackReserve=\" + SizeOfStackReserve + \" // 60\");\n  out.println(\"long   SizeOfStackCommit=\" + SizeOfStackCommit + \"     // 64\");\n  out.println(\"long   SizeOfHeapReserve=\" + SizeOfHeapReserve + \" // 68\");\n  out.println(\"long   SizeOfHeapCommit=\" + SizeOfHeapCommit + \"     // 6c\");\n  out.println(\"long   LoaderFlags=\" + LoaderFlags + \" // 70\");\n  out.println(\"long   NumberOfRvaAndSizes=\" + NumberOfRvaAndSizes + \" // 74\");\n  out.println(\"long ExportDirectory_VA=\" + ExportDirectory_VA + \" // 78\");\n  out.println(\"long ExportDirectory_Size=\" + ExportDirectory_Size + \" // 7c\");\n  out.println(\"long ImportDirectory_VA=\" + ImportDirectory_VA + \" // 80\");\n  out.println(\"long ImportDirectory_Size=\" + ImportDirectory_Size + \" // 84\");\n  out.println(\"long ResourceDirectory_VA=\" + ResourceDirectory_VA + \" // 88\");\n  out.println(\"long ResourceDirectory_Size=\" + ResourceDirectory_Size + \" // 8c\");\n  out.println(\"long ExceptionDirectory_VA=\" + ExceptionDirectory_VA + \" // 90\");\n  out.println(\"long ExceptionDirectory_Size=\" + ExceptionDirectory_Size + \" // 94\");\n  out.println(\"long SecurityDirectory_VA=\" + SecurityDirectory_VA + \" // 98\");\n  out.println(\"long SecurityDirectory_Size=\" + SecurityDirectory_Size + \" // 9c\");\n  out.println(\"long BaseRelocationTable_VA=\" + BaseRelocationTable_VA + \" // a0\");\n  out.println(\"long BaseRelocationTable_Size=\" + BaseRelocationTable_Size + \" // a4\");\n  out.println(\"long DebugDirectory_VA=\" + DebugDirectory_VA + \" // a8\");\n  out.println(\"long DebugDirectory_Size=\" + DebugDirectory_Size + \" // ac\");\n  out.println(\"long ArchitectureSpecificData_VA=\" + ArchitectureSpecificData_VA + \" // b0\");\n  out.println(\"long ArchitectureSpecificData_Size=\" + ArchitectureSpecificData_Size + \" // b4\");\n  out.println(\"long RVAofGP_VA=\" + RVAofGP_VA + \" // b8\");\n  out.println(\"long RVAofGP_Size=\" + RVAofGP_Size + \" // bc\");\n  out.println(\"long TLSDirectory_VA=\" + TLSDirectory_VA + \" // c0\");\n  out.println(\"long TLSDirectory_Size=\" + TLSDirectory_Size + \" // c4\");\n  out.println(\"long LoadConfigurationDirectory_VA=\" + LoadConfigurationDirectory_VA + \" // c8\");\n  out.println(\"long LoadConfigurationDirectory_Size=\" + LoadConfigurationDirectory_Size + \" // cc\");\n  out.println(\"long BoundImportDirectoryinheaders_VA=\" + BoundImportDirectoryinheaders_VA + \" // d0\");\n  out.println(\"long BoundImportDirectoryinheaders_Size=\" + BoundImportDirectoryinheaders_Size + \" // d4\");\n  out.println(\"long ImportAddressTable_VA=\" + ImportAddressTable_VA + \" // d8\");\n  out.println(\"long ImportAddressTable_Size=\" + ImportAddressTable_Size + \" // dc\");\n  out.println(\"long DelayLoadImportDescriptors_VA=\" + DelayLoadImportDescriptors_VA + \" // e0\");\n  out.println(\"long DelayLoadImportDescriptors_Size=\" + DelayLoadImportDescriptors_Size + \" // e4\");\n  out.println(\"long COMRuntimedescriptor_VA=\" + COMRuntimedescriptor_VA + \" // e8\");\n  out.println(\"long COMRuntimedescriptor_Size=\" + COMRuntimedescriptor_Size + \" // ec\");\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('116', 'updateVAAndSize(Vector,Vector)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEHeader.java', 'jsmooth', '49', '501', '0', '-1000', '7', '0.0655', '0.2355', '0', '1', '0', '0', '0', '1', '1', '0', '1', '1', 'public void updateVAAndSize(Vector oldsections,Vector newsections){\n  long codebase=findNewVA(this.BaseOfCode,oldsections,newsections);\n  long codesize=findNewSize(this.BaseOfCode,oldsections,newsections);\n  this.BaseOfCode=codebase;\n  this.SizeOfCode=codesize;\n  this.AddressOfEntryPoint=findNewVA(this.AddressOfEntryPoint,oldsections,newsections);\n  long database=findNewVA(this.BaseOfData,oldsections,newsections);\n  long datasize=findNewSize(this.BaseOfData,oldsections,newsections);\n  this.BaseOfData=database;\n  long imagesize=0;\n  for (int i=0; i < newsections.size(); i++) {\n    PESection sect=(PESection)newsections.get(i);\n    long curmax=sect.VirtualAddress + sect.VirtualSize;\n    if (curmax > imagesize)     imagesize=curmax;\n  }\n  this.SizeOfImage=imagesize;\n  ExportDirectory_Size=findNewSize(ExportDirectory_VA,oldsections,newsections);\n  ExportDirectory_VA=findNewVA(ExportDirectory_VA,oldsections,newsections);\n  ImportDirectory_Size=findNewSize(ImportDirectory_VA,oldsections,newsections);\n  ImportDirectory_VA=findNewVA(ImportDirectory_VA,oldsections,newsections);\n  ResourceDirectory_Size=findNewSize(ResourceDirectory_VA,oldsections,newsections);\n  ResourceDirectory_VA=findNewVA(ResourceDirectory_VA,oldsections,newsections);\n  ExceptionDirectory_Size=findNewSize(ExceptionDirectory_VA,oldsections,newsections);\n  ExceptionDirectory_VA=findNewVA(ExceptionDirectory_VA,oldsections,newsections);\n  SecurityDirectory_Size=findNewSize(SecurityDirectory_VA,oldsections,newsections);\n  SecurityDirectory_VA=findNewVA(SecurityDirectory_VA,oldsections,newsections);\n  BaseRelocationTable_Size=findNewSize(BaseRelocationTable_VA,oldsections,newsections);\n  BaseRelocationTable_VA=findNewVA(BaseRelocationTable_VA,oldsections,newsections);\n  DebugDirectory_Size=findNewSize(DebugDirectory_VA,oldsections,newsections);\n  DebugDirectory_VA=findNewVA(DebugDirectory_VA,oldsections,newsections);\n  ArchitectureSpecificData_Size=findNewSize(ArchitectureSpecificData_VA,oldsections,newsections);\n  ArchitectureSpecificData_VA=findNewVA(ArchitectureSpecificData_VA,oldsections,newsections);\n  RVAofGP_Size=findNewSize(RVAofGP_VA,oldsections,newsections);\n  RVAofGP_VA=findNewVA(RVAofGP_VA,oldsections,newsections);\n  TLSDirectory_Size=findNewSize(TLSDirectory_VA,oldsections,newsections);\n  TLSDirectory_VA=findNewVA(TLSDirectory_VA,oldsections,newsections);\n  LoadConfigurationDirectory_Size=findNewSize(LoadConfigurationDirectory_VA,oldsections,newsections);\n  LoadConfigurationDirectory_VA=findNewVA(LoadConfigurationDirectory_VA,oldsections,newsections);\n  BoundImportDirectoryinheaders_Size=findNewSize(BoundImportDirectoryinheaders_VA,oldsections,newsections);\n  BoundImportDirectoryinheaders_VA=findNewVA(BoundImportDirectoryinheaders_VA,oldsections,newsections);\n  ImportAddressTable_Size=findNewSize(ImportAddressTable_VA,oldsections,newsections);\n  ImportAddressTable_VA=findNewVA(ImportAddressTable_VA,oldsections,newsections);\n  DelayLoadImportDescriptors_Size=findNewSize(DelayLoadImportDescriptors_VA,oldsections,newsections);\n  DelayLoadImportDescriptors_VA=findNewVA(DelayLoadImportDescriptors_VA,oldsections,newsections);\n  COMRuntimedescriptor_Size=findNewSize(COMRuntimedescriptor_VA,oldsections,newsections);\n  COMRuntimedescriptor_VA=findNewVA(COMRuntimedescriptor_VA,oldsections,newsections);\n}\n', '0', '20', '3');
INSERT INTO `case_study` VALUES ('117', 'findNewVA(long,Vector,Vector)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEHeader.java', 'jsmooth', '13', '64', '50', '-1000', '5', '0.1923', '0.0715', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private long findNewVA(long current,Vector oldsections,Vector newsections){\n  for (int i=0; i < oldsections.size(); i++) {\n    PESection sect=(PESection)oldsections.get(i);\n    if (sect.VirtualAddress == current) {\n      PESection newsect=(PESection)newsections.get(i);\n      return newsect.VirtualAddress;\n    }\n else     if ((current > sect.VirtualAddress) && (current < (sect.VirtualAddress + sect.VirtualSize))) {\n      long diff=current - sect.VirtualAddress;\n      PESection newsect=(PESection)newsections.get(i);\n      return newsect.VirtualAddress + diff;\n    }\n  }\n  return 0;\n}\n', '0', '8', '5');
INSERT INTO `case_study` VALUES ('118', 'findNewSize(long,Vector,Vector)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEHeader.java', 'jsmooth', '8', '23', '18', '-1000', '4', '0.2292', '0.068', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private long findNewSize(long current,Vector oldsections,Vector newsections){\n  for (int i=0; i < oldsections.size(); i++) {\n    PESection sect=(PESection)oldsections.get(i);\n    if (sect.VirtualAddress == current) {\n      PESection newsect=(PESection)newsections.get(i);\n      return newsect.VirtualSize;\n    }\n  }\n  return 0;\n}\n', '0', '6', '3');
INSERT INTO `case_study` VALUES ('121', 'read()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEOldMSHeader.java', 'jsmooth', '28', '99', '0', '-1000', '3', '0.0714', '0.2569', '0', '0', '0', '0', '0', '0', '1', '0', '0', '1', 'public void read() throws IOException {\n  FileChannel ch=m_pe.getChannel();\n  ByteBuffer mz=ByteBuffer.allocate(64);\n  mz.order(ByteOrder.LITTLE_ENDIAN);\n  ch.read(mz,0);\n  mz.position(0);\n  byte m=mz.get();\n  byte z=mz.get();\n  if ((m == 77) && (z == 90)) {\n  }\n  e_cblp=mz.getShort();\n  e_cp=mz.getShort();\n  e_crlc=mz.getShort();\n  e_cparhdr=mz.getShort();\n  e_minalloc=mz.getShort();\n  e_maxalloc=mz.getShort();\n  e_ss=mz.getShort();\n  e_sp=mz.getShort();\n  e_csum=mz.getShort();\n  e_ip=mz.getShort();\n  e_cs=mz.getShort();\n  e_lfarlc=mz.getShort();\n  e_ovno=mz.getShort();\n  for (int i=0; i < 4; i++)   e_res[i]=mz.getShort();\n  e_oemid=mz.getShort();\n  e_oeminfo=mz.getShort();\n  for (int i=0; i < 10; i++)   e_res2[i]=mz.getShort();\n  e_lfanew=mz.getInt();\n}\n', '1', '6', '5');
INSERT INTO `case_study` VALUES ('122', 'dump(PrintStream)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEOldMSHeader.java', 'jsmooth', '19', '35', '0', '-1000', '3', '0.1022', '0.2824', '0', '0', '0', '0', '0', '0', '1', '0', '0', '1', 'public void dump(PrintStream out){\n  out.println(\"MSHeader:\");\n  out.println(\"e_cblp: \" + e_cblp + \" // Bytes on last page of file //  2\");\n  out.println(\"e_cp: \" + e_cp + \" // Pages in file //  4\");\n  out.println(\"e_crlc: \" + e_crlc + \" // Relocations //  6\");\n  out.println(\"e_cparhdr: \" + e_cparhdr + \" // Size of header in paragraphs //  8\");\n  out.println(\"e_minalloc: \" + e_minalloc + \" // Minimum extra paragraphs needed //  A\");\n  out.println(\"e_maxalloc: \" + e_maxalloc + \" // Maximum extra paragraphs needed //  C\");\n  out.println(\"e_ss: \" + e_ss + \" // Initial (relative) SS value //  E\");\n  out.println(\"e_sp: \" + e_sp + \" // Initial SP value // 10\");\n  out.println(\"e_csum: \" + e_csum + \" // Checksum // 12\");\n  out.println(\"e_ip: \" + e_ip + \" // Initial IP value // 14\");\n  out.println(\"e_cs: \" + e_cs + \" // Initial (relative) CS value // 16\");\n  out.println(\"e_lfarlc: \" + e_lfarlc + \" // File address of relocation table // 18\");\n  out.println(\"e_ovno: \" + e_ovno + \" // Overlay number // 1A\");\n  out.println(\"e_oemid: \" + e_oemid + \" // OEM identifier (for e_oeminfo) // 24\");\n  out.println(\"e_oeminfo: \" + e_oeminfo + \" // OEM information; e_oemid specific // 26\");\n  out.println(\"e_lfanew: \" + e_lfanew + \" // File address of new exe header // 3C\");\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('127', 'dump(PrintStream,int)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEResourceDirectory.java', 'jsmooth', '9', '14', '0', '-1000', '2', '0.2333', '0.2523', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public void dump(PrintStream out){\n  m_root.dump(out,0);\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('156', 'buildResource(long)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEResourceDirectory.java', 'jsmooth', '7', '9', '0', '-1000', '2', '0.3143', '0.2714', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public ByteBuffer buildResource(long virtualBaseOffset){\n  int resourceSize=m_root.diskSize();\n  ByteBuffer resbuf=ByteBuffer.allocate(resourceSize);\n  resbuf.order(ByteOrder.LITTLE_ENDIAN);\n  resbuf.position(0);\n  m_root.buildBuffer(resbuf,virtualBaseOffset);\n  return resbuf;\n}\n', '0.5', '3', '1');
INSERT INTO `case_study` VALUES ('158', 'replaceResource(String,int,int,ByteBuffer)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEResourceDirectory.java', 'jsmooth', '10', '31', '17', '-1000', '4', '0.1909', '0.103', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public boolean replaceResource(String catId,int resourceId,int langId,ByteBuffer data){\n  ResourceEntry catEntry=m_root.getResourceEntry(catId);\n  if ((catEntry != null) && (catEntry.Directory != null)) {\n    ResourceEntry identEntry=catEntry.Directory.getResourceEntry(resourceId);\n    if ((identEntry != null) && (identEntry.Directory != null)) {\n      ResourceEntry langEntry=identEntry.Directory.getResourceEntry(langId);\n      if ((langEntry != null) && (langEntry.Data != null)) {\n        DataEntry dataslot=langEntry.Data;\n        dataslot.setData(data);\n        return true;\n      }\n    }\n  }\n  return false;\n}\n', '1', '8', '7');
INSERT INTO `case_study` VALUES ('159', 'addNewResource(String,String,String,ByteBuffer)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PEResourceDirectory.java', 'jsmooth', '13', '61', '44', '-1000', '3', '0.1429', '0.0636', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void addNewResource(String catId,String resourceId,String languageId,ByteBuffer data){\n  DataEntry dataEntry=new DataEntry(data);\n  ResourceEntry languageEntry=buildResourceEntry(languageId,dataEntry);\n  ImageResourceDirectory languageDir=new ImageResourceDirectory();\n  languageDir.TimeDateStamp=0x3F2CCF64;\n  languageDir.addEntry(languageEntry);\n  ResourceEntry identEntry=buildResourceEntry(resourceId,languageDir);\n  ImageResourceDirectory identDir=new ImageResourceDirectory();\n  identDir.TimeDateStamp=0x3F2CCF64;\n  identDir.addEntry(identEntry);\n  ResourceEntry catEntry=buildResourceEntry(catId,identDir);\n  m_root.addEntry(catEntry);\n}\n', '0.6666666666666666', '10', '1');
INSERT INTO `case_study` VALUES ('166', 'read()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PESection.java', 'jsmooth', '19', '76', '0', '-1000', '3', '0.1022', '0.2059', '0', '0', '0', '0', '0', '0', '1', '0', '0', '1', 'public void read() throws IOException {\n  FileChannel ch=m_pe.getChannel();\n  ByteBuffer head=ByteBuffer.allocate(40);\n  head.order(ByteOrder.LITTLE_ENDIAN);\n  ch.position(m_baseoffset);\n  ch.read(head);\n  head.position(0);\n  ANSI_Name=new byte[8];\n  for (int i=0; i < 8; i++)   ANSI_Name[i]=head.get();\n  VirtualSize=head.getInt();\n  VirtualAddress=head.getInt();\n  SizeOfRawData=head.getInt();\n  PointerToRawData=head.getInt();\n  PointerToRelocations=head.getInt();\n  PointerToLinenumbers=head.getInt();\n  NumberOfRelocations=head.getShort();\n  NumberOfLinenumbers=head.getShort();\n  Characteristics=head.getInt();\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('167', 'dump(PrintStream)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\PESection.java', 'jsmooth', '14', '13', '0', '-1000', '2', '0.1429', '0.3489', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public void dump(PrintStream out){\n  out.println(\"SECTION:\");\n  out.print(\"  Name= \");\n  for (int i=0; i < 8; i++)   out.print((char)ANSI_Name[i]);\n  out.println(\"\");\n  out.println(\"  VirtualSize= \" + VirtualSize + \"  // 	The size of the section when it is mapped to memory. Must be a multiple of 4096. (8)(DWORD)\");\n  out.println(\"  VirtualAddress= \" + VirtualAddress + \"   // 	An rva to where it should be mapped in memory. (12)(DWORD)\");\n  out.println(\"  SizeOfRawData= \" + SizeOfRawData + \"   // 	The size of the section in the PE file. Must be a multiple of 512 (16)(DWORD)\");\n  out.println(\"  PointerToRawData= \" + PointerToRawData + \"   // 	A file based offset which points to the location of this sections data (20)(DWORD)\");\n  out.println(\"  PointerToRelocations= \" + PointerToRelocations + \"   // 	In EXE\'s this field is meaningless, and is set 0 (24)(DWORD)\");\n  out.println(\"  PointerToLinenumbers= \" + PointerToLinenumbers + \"   // 	This is the file-based offset of the line number table. This field is only used for debug purposes, and is usualy set to 0 (28)(DWORD)\");\n  out.println(\"  NumberOfRelocations= \" + NumberOfRelocations + \"   // 	In EXE\'s this field is meaningless, and is set 0 (32)(WORD)\");\n  out.println(\"  NumberOfLinenumbers= \" + NumberOfLinenumbers + \"   // 	The number of line numbers in the line number table for this section. This field is only used for debug purposes, and is usualy set to 0 (34)(WORD)\");\n  out.println(\"  Characteristics= \" + Characteristics + \"   // 	The kind of data stored in this section ie. Code, Data, Import data, Relocation data (36)(DWORD)\");\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('170', 'SkeletonBean(SkeletonBean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonBean.java', 'jsmooth', '12', '28', '0', '-1000', '3', '0.1742', '0.1792', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public SkeletonBean(SkeletonBean sb){\n  m_executableName=sb.m_executableName;\n  m_shortName=sb.m_shortName;\n  m_description=sb.m_description;\n  m_resourceCategory=sb.m_resourceCategory;\n  m_resourceJarId=sb.m_resourceJarId;\n  m_resourcePropsId=sb.m_resourcePropsId;\n  m_skelproperties=new SkeletonProperty[sb.m_skelproperties.length];\n  for (int i=0; i < m_skelproperties.length; i++) {\n    m_skelproperties[i]=new SkeletonProperty(sb.m_skelproperties[i]);\n  }\n  m_debug=sb.m_debug;\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('191', 'initComponents()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonEditor.java', 'jsmooth', '37', '663', '660', '-1000', '3', '0.0293', '0.003', '0', '0', '1', '1', '0', '0', '1', '1', '0', '1', '/** \n * This method is called from within the constructor to\n * initialize the form.\n * WARNING: Do NOT modify this code. The content of this method is\n * always regenerated by the Form Editor.\n */\nprivate void initComponents(){\n  java.awt.GridBagConstraints gridBagConstraints;\n  m_fileChooser=new javax.swing.JFileChooser();\n  m_popupMenu=new javax.swing.JPopupMenu();\n  m_menuAddItem=new javax.swing.JMenuItem();\n  m_menuRemoveItem=new javax.swing.JMenuItem();\n  jSeparator3=new javax.swing.JSeparator();\n  m_menuItemUp=new javax.swing.JMenuItem();\n  jPanel1=new javax.swing.JPanel();\n  jLabel5=new javax.swing.JLabel();\n  m_exeName=new javax.swing.JTextField();\n  m_labelName=new javax.swing.JLabel();\n  m_name=new javax.swing.JTextField();\n  jLabel1=new javax.swing.JLabel();\n  jScrollPane1=new javax.swing.JScrollPane();\n  m_description=new javax.swing.JEditorPane();\n  jLabel2=new javax.swing.JLabel();\n  m_categoryName=new javax.swing.JTextField();\n  jLabel3=new javax.swing.JLabel();\n  m_jarId=new javax.swing.JTextField();\n  jLabel4=new javax.swing.JLabel();\n  m_propsId=new javax.swing.JTextField();\n  m_cbDebug=new javax.swing.JCheckBox();\n  m_tablescrollpane=new javax.swing.JScrollPane();\n  m_propTable=new javax.swing.JTable();\n  jMenuBar1=new javax.swing.JMenuBar();\n  jMenu1=new javax.swing.JMenu();\n  m_menuNew=new javax.swing.JMenuItem();\n  m_menuLoadKBML=new javax.swing.JMenuItem();\n  m_menuLoad=new javax.swing.JMenuItem();\n  jSeparator1=new javax.swing.JSeparator();\n  m_menuSaveKbml=new javax.swing.JMenuItem();\n  m_menuSave=new javax.swing.JMenuItem();\n  jSeparator2=new javax.swing.JSeparator();\n  m_menuExit=new javax.swing.JMenuItem();\n  m_fileChooser.setCurrentDirectory(new java.io.File(\"c:\\\\\"));\n  m_fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter(){\n    public boolean accept(    File f){\n      if (f.toString().endsWith(\".skel\"))       return true;\n      if (f.isDirectory())       return true;\n      return false;\n    }\n    public String getDescription(){\n      return \"JSmooth Skeletons (*.skel)\";\n    }\n  }\n);\n  m_fileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);\n  m_menuAddItem.setText(\"Add item\");\n  m_menuAddItem.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      menuAddItemActionPerformed(evt);\n    }\n  }\n);\n  m_popupMenu.add(m_menuAddItem);\n  m_menuRemoveItem.setText(\"RemoveItems\");\n  m_menuRemoveItem.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      menuRemoveItemActionPerformed(evt);\n    }\n  }\n);\n  m_popupMenu.add(m_menuRemoveItem);\n  m_popupMenu.add(jSeparator3);\n  m_menuItemUp.setText(\"Item Up\");\n  m_menuItemUp.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      menuItemUpActionPerformed(evt);\n    }\n  }\n);\n  m_popupMenu.add(m_menuItemUp);\n  getContentPane().setLayout(new java.awt.GridBagLayout());\n  setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n  setTitle(\"JSmooth Skeleton Editor\");\n  addWindowListener(new java.awt.event.WindowAdapter(){\n    public void windowClosing(    java.awt.event.WindowEvent evt){\n      exitForm(evt);\n    }\n  }\n);\n  jPanel1.setLayout(new java.awt.GridBagLayout());\n  jPanel1.setBorder(new javax.swing.border.EtchedBorder());\n  jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);\n  jLabel5.setText(\"Executable Name\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.insets=new java.awt.Insets(0,0,0,5);\n  jPanel1.add(jLabel5,gridBagConstraints);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.5;\n  jPanel1.add(m_exeName,gridBagConstraints);\n  m_labelName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);\n  m_labelName.setText(\"Short Name\");\n  m_labelName.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridy=1;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.insets=new java.awt.Insets(0,0,0,5);\n  jPanel1.add(m_labelName,gridBagConstraints);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridy=1;\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.5;\n  jPanel1.add(m_name,gridBagConstraints);\n  jLabel1.setText(\"Description\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.anchor=java.awt.GridBagConstraints.WEST;\n  jPanel1.add(jLabel1,gridBagConstraints);\n  jScrollPane1.setViewportView(m_description);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.5;\n  gridBagConstraints.weighty=0.5;\n  jPanel1.add(jScrollPane1,gridBagConstraints);\n  jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);\n  jLabel2.setText(\"Category Name\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.insets=new java.awt.Insets(0,0,0,5);\n  jPanel1.add(jLabel2,gridBagConstraints);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.5;\n  jPanel1.add(m_categoryName,gridBagConstraints);\n  jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);\n  jLabel3.setText(\"Resource Id for JAR\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.insets=new java.awt.Insets(0,0,0,5);\n  jPanel1.add(jLabel3,gridBagConstraints);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  jPanel1.add(m_jarId,gridBagConstraints);\n  jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);\n  jLabel4.setText(\"Resource Id for Properties\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.insets=new java.awt.Insets(0,0,0,5);\n  jPanel1.add(jLabel4,gridBagConstraints);\n  m_propsId.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      m_propsIdActionPerformed(evt);\n    }\n  }\n);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  jPanel1.add(m_propsId,gridBagConstraints);\n  m_cbDebug.setText(\"Mark this wrapper for debugging only\");\n  m_cbDebug.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  jPanel1.add(m_cbDebug,gridBagConstraints);\n  m_tablescrollpane.addMouseListener(new java.awt.event.MouseAdapter(){\n    public void mousePressed(    java.awt.event.MouseEvent evt){\n      tablescrollpaneMousePressed(evt);\n    }\n    public void mouseReleased(    java.awt.event.MouseEvent evt){\n      tablescrollpaneMouseReleased(evt);\n    }\n  }\n);\n  m_propTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{{null,null,null,null,null},{null,null,null,null,null},{null,null,null,null,null},{null,null,null,null,null}},new String[]{\"Id\",\"Label\",\"Description\",\"Type\",\"Value\"}));\n  m_propTable.addMouseListener(new java.awt.event.MouseAdapter(){\n    public void mouseClicked(    java.awt.event.MouseEvent evt){\n      propTableMouseClicked(evt);\n    }\n    public void mousePressed(    java.awt.event.MouseEvent evt){\n      propTableMousePressed(evt);\n    }\n    public void mouseReleased(    java.awt.event.MouseEvent evt){\n      propTableMouseReleased(evt);\n    }\n  }\n);\n  m_tablescrollpane.setViewportView(m_propTable);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=1.0;\n  gridBagConstraints.weighty=1.0;\n  jPanel1.add(m_tablescrollpane,gridBagConstraints);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridx=1;\n  gridBagConstraints.gridy=1;\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.gridheight=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.9;\n  gridBagConstraints.weighty=0.9;\n  getContentPane().add(jPanel1,gridBagConstraints);\n  jMenu1.setText(\"System\");\n  m_menuNew.setText(\"New\");\n  m_menuNew.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      menuNewActionPerformed(evt);\n    }\n  }\n);\n  jMenu1.add(m_menuNew);\n  m_menuLoadKBML.setText(\"Load\");\n  m_menuLoadKBML.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      menuLoadKBMLActionPerformed(evt);\n    }\n  }\n);\n  jMenu1.add(m_menuLoadKBML);\n  m_menuLoad.setText(\"Load (deprecated)\");\n  m_menuLoad.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      menuLoadActionPerformed(evt);\n    }\n  }\n);\n  jMenu1.add(m_menuLoad);\n  jMenu1.add(jSeparator1);\n  m_menuSaveKbml.setText(\"Save\");\n  m_menuSaveKbml.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      saveKbmlActionPerformed(evt);\n    }\n  }\n);\n  jMenu1.add(m_menuSaveKbml);\n  m_menuSave.setText(\"Save (deprecated)\");\n  m_menuSave.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      menuSaveActionPerformed(evt);\n    }\n  }\n);\n  jMenu1.add(m_menuSave);\n  jMenu1.add(jSeparator2);\n  m_menuExit.setText(\"Exit\");\n  jMenu1.add(m_menuExit);\n  jMenuBar1.add(jMenu1);\n  setJMenuBar(jMenuBar1);\n  java.awt.Dimension screenSize=java.awt.Toolkit.getDefaultToolkit().getScreenSize();\n  setBounds((screenSize.width - 400) / 2,(screenSize.height - 254) / 2,400,254);\n}\n', '0', '18', '1');
INSERT INTO `case_study` VALUES ('209', 'menuLoadKBMLActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonEditor.java', 'jsmooth', '7', '15', '9', '-1000', '2', '0.2619', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void menuLoadKBMLActionPerformed(java.awt.event.ActionEvent evt){\n  if (m_fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {\n    File f=m_fileChooser.getSelectedFile();\n    System.out.println(\"loading \" + m_fileChooser.getSelectedFile().toString());\n    try {\n      SkeletonBean skel=SkeletonPersistency.loadWithJox(f);\n      setSkeleton(skel);\n    }\n catch (    IOException iox) {\n      iox.printStackTrace();\n    }\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('210', 'saveKbmlActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonEditor.java', 'jsmooth', '9', '23', '10', '-1000', '2', '0.2593', '0.1759', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void saveKbmlActionPerformed(java.awt.event.ActionEvent evt){\n  if (m_fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {\n    File f=m_fileChooser.getSelectedFile();\n    if (f.toString().endsWith(\".skel\") == false) {\n      f=new File(f.getAbsolutePath() + \".skel\");\n    }\n    System.out.println(\"loading \" + m_fileChooser.getSelectedFile().toString());\n    try {\n      SkeletonBean skel=getSkeleton();\n      SkeletonPersistency.saveWithJox(f,skel);\n    }\n catch (    IOException iox) {\n      iox.printStackTrace();\n    }\n  }\n}\n', '1', '4', '4');
INSERT INTO `case_study` VALUES ('220', 'menuSaveActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonEditor.java', 'jsmooth', '9', '23', '10', '-1000', '2', '0.2593', '0.1759', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void menuSaveActionPerformed(java.awt.event.ActionEvent evt){\n  if (m_fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {\n    File f=m_fileChooser.getSelectedFile();\n    if (f.toString().endsWith(\".skel\") == false) {\n      f=new File(f.getAbsolutePath() + \".skel\");\n    }\n    System.out.println(\"loading \" + m_fileChooser.getSelectedFile().toString());\n    try {\n      SkeletonBean skel=getSkeleton();\n      SkeletonPersistency.save(f,skel);\n    }\n catch (    IOException iox) {\n      iox.printStackTrace();\n    }\n  }\n}\n', '1', '4', '4');
INSERT INTO `case_study` VALUES ('221', 'menuLoadActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonEditor.java', 'jsmooth', '7', '15', '9', '-1000', '2', '0.2619', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void menuLoadActionPerformed(java.awt.event.ActionEvent evt){\n  if (m_fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {\n    File f=m_fileChooser.getSelectedFile();\n    System.out.println(\"loading \" + m_fileChooser.getSelectedFile().toString());\n    try {\n      SkeletonBean skel=SkeletonPersistency.load(f);\n      setSkeleton(skel);\n    }\n catch (    IOException iox) {\n      iox.printStackTrace();\n    }\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('226', 'showPopupMenu(java.awt.event.MouseEvent,JComponent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonEditor.java', 'jsmooth', '6', '12', '9', '-1000', '3', '0.25', '0.1071', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void showPopupMenu(java.awt.event.MouseEvent evt,JComponent comp){\n  int r=m_propTable.rowAtPoint(new Point(evt.getX(),evt.getY()));\n  if (r != -1) {\n    m_propTable.setRowSelectionInterval(r,r);\n  }\n  m_popupMenu.show(comp,evt.getX(),evt.getY());\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('227', 'main(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonEditor.java', 'jsmooth', '36', '630', '630', '-1000', '4', '0.0278', '0', '0', '0', '0', '1', '0', '0', '1', '1', '0', '0', '/** \n * @param args the command line arguments\n */\npublic static void main(String args[]){\n  new SkeletonEditor().setVisible(true);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('229', 'SkeletonList(File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonList.java', 'jsmooth', '9', '32', '28', '-1000', '3', '0.1852', '0.0556', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates a new instance of SkeletonList \n */\npublic SkeletonList(File directoryToScan){\n  File[] subdirs=directoryToScan.listFiles();\n  SkelSuffixFilter filter=new SkelSuffixFilter();\n  for (int i=0; i < subdirs.length; i++) {\n    if (subdirs[i].isDirectory()) {\n      File[] skeldescs=subdirs[i].listFiles((java.io.FileFilter)filter);\n      for (int si=0; si < skeldescs.length; si++) {\n        addSkeletonDirectory(subdirs[i],skeldescs[si]);\n      }\n    }\n  }\n}\n', '1', '6', '4');
INSERT INTO `case_study` VALUES ('230', 'addSkeletonDirectory(File,File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonList.java', 'jsmooth', '10', '35', '25', '-1000', '6', '0.15', '0.0821', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void addSkeletonDirectory(File dir,File desc){\n  try {\n    SkeletonBean skel=SkeletonPersistency.loadWithJox(desc);\n    if ((skel != null) && (skel.getShortName() != null)) {\n      m_skelsToDirs.put(skel,dir);\n      if (skel.isDebug() == false)       m_nameToNoDebugSkel.put(skel.getShortName(),skel);\n else       m_nameToDebugSkel.put(skel.getShortName(),skel);\n      m_nameToSkel.put(skel.getShortName(),skel);\n    }\n  }\n catch (  Exception exc) {\n  }\n}\n', '0.6666666666666666', '4', '5');
INSERT INTO `case_study` VALUES ('239', 'load(File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonPersistency.java', 'jsmooth', '10', '37', '29', '-1000', '4', '0.22', '0.0947', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static SkeletonBean load(File fin) throws IOException {\n  FileInputStream fis=new FileInputStream(fin);\n  try {\n    XMLDecoder dec=new XMLDecoder(fis);\n    dec.setOwner(SkeletonPersistency.class);\n    SkeletonBean obj=(SkeletonBean)dec.readObject();\n    fis.close();\n    return obj;\n  }\n catch (  Exception exc) {\n    throw new IOException(exc.toString());\n  }\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('240', 'loadWithJox(File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonPersistency.java', 'jsmooth', '15', '95', '85', '-1000', '8', '0.16', '0.063', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public static SkeletonBean loadWithJox(File fin) throws IOException {\n  Object bean=null;\n  try {\n    FileReader fr=new FileReader(fin);\n    JOXBeanReader jbr=new JOXBeanReader(fr);\n    bean=jbr.readObject(SkeletonBean.class);\n    jbr.close();\n    fr.close();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  return (SkeletonBean)bean;\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('241', 'save(File,SkeletonBean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonPersistency.java', 'jsmooth', '10', '38', '31', '-1000', '5', '0.2', '0.0873', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void save(File fout,SkeletonBean obj) throws IOException {\n  FileOutputStream fos=new FileOutputStream(fout);\n  try {\n    XMLEncoder enc=new XMLEncoder(fos);\n    enc.writeObject(obj);\n    enc.close();\n  }\n catch (  Exception ex) {\n    throw new IOException(ex.toString());\n  }\n finally {\n    fos.close();\n  }\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('242', 'saveWithJox(File,SkeletonBean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonPersistency.java', 'jsmooth', '8', '21', '14', '-1000', '3', '0.25', '0.131', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static void saveWithJox(File fout,SkeletonBean obj) throws IOException {\n  try {\n    FileWriter fw=new FileWriter(fout);\n    JOXBeanWriter jbw=new JOXBeanWriter(fw);\n    jbw.writeObject(\"jsmoothskeleton\",obj);\n    jbw.close();\n    fw.close();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('244', 'SkeletonProperty(SkeletonProperty)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonProperty.java', 'jsmooth', '7', '11', '1', '-1000', '3', '0.2381', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public SkeletonProperty(SkeletonProperty sp){\n  m_idName=sp.m_idName;\n  m_shortName=sp.m_shortName;\n  m_description=sp.m_description;\n  m_type=sp.m_type;\n  m_value=sp.m_value;\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('270', 'initComponents()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonPropertyEditor.java', 'jsmooth', '8', '25', '22', '-1000', '2', '0.175', '0.1071', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method is called from within the constructor to\n * initialize the form.\n * WARNING: Do NOT modify this code. The content of this method is\n * always regenerated by the Form Editor.\n */\nprivate void initComponents(){\n  m_popupMenu=new javax.swing.JPopupMenu();\n  m_menuAddItem=new javax.swing.JMenuItem();\n  m_menuRemoveItem=new javax.swing.JMenuItem();\n  jScrollPane1=new javax.swing.JScrollPane();\n  m_table=new javax.swing.JTable();\n  m_menuAddItem.setText(\"Add item\");\n  m_menuAddItem.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      m_menuAddItemActionPerformed(evt);\n    }\n  }\n);\n  m_popupMenu.add(m_menuAddItem);\n  m_menuRemoveItem.setText(\"RemoveItems\");\n  m_menuRemoveItem.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      m_menuRemoveItemActionPerformed(evt);\n    }\n  }\n);\n  m_popupMenu.add(m_menuRemoveItem);\n  setLayout(new java.awt.BorderLayout());\n  jScrollPane1.setBorder(null);\n  m_table.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{{null,null,null,null},{null,null,null,null},{null,null,null,null},{null,null,null,null}},new String[]{\"Title 1\",\"Title 2\",\"Title 3\",\"Title 4\"}));\n  m_table.setTableHeader(null);\n  m_table.addMouseListener(new java.awt.event.MouseAdapter(){\n    public void mouseClicked(    java.awt.event.MouseEvent evt){\n      tableMousePressed(evt);\n    }\n    public void mousePressed(    java.awt.event.MouseEvent evt){\n      tableMousePressed(evt);\n    }\n    public void mouseReleased(    java.awt.event.MouseEvent evt){\n      tableMousePressed(evt);\n    }\n  }\n);\n  jScrollPane1.setViewportView(m_table);\n  add(jScrollPane1,java.awt.BorderLayout.CENTER);\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('279', 'showPopupMenu(java.awt.event.MouseEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonPropertyEditor.java', 'jsmooth', '11', '52', '49', '-1000', '4', '0.1157', '0.0278', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'public void showPopupMenu(java.awt.event.MouseEvent evt){\n  int r=m_table.rowAtPoint(new Point(evt.getX(),evt.getY()));\n  if (r != -1) {\n    m_table.setRowSelectionInterval(r,r);\n  }\n  m_popupMenu.show(this,evt.getX(),evt.getY());\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('292', 'swapItems(int,int)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\skeleton\\SkeletonPropertyTableModel.java', 'jsmooth', '7', '6', '0', '-1000', '2', '0.4286', '0.2714', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public void swapItems(int offset1,int offset2){\n  if ((offset1 >= 0) && (offset1 < m_props.size()) && (offset2 >= 0)&& (offset2 < m_props.size())) {\n    Object o1=m_props.get(offset1);\n    Object o2=m_props.get(offset2);\n    m_props.set(offset1,o2);\n    m_props.set(offset2,o1);\n  }\n  fireTableRowsUpdated(Math.min(offset1,offset2),Math.max(offset1,offset2));\n}\n', '0', '4', '5');
INSERT INTO `case_study` VALUES ('299', 'loadImages(File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\codec\\IcoCodec.java', 'jsmooth', '31', '402', '339', '-1000', '10', '0.0783', '0.0458', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'static public BufferedImage[] loadImages(File f) throws IOException {\n  InputStream istream=new FileInputStream(f);\n  BufferedInputStream buffin=new BufferedInputStream(istream);\n  BinaryInputStream in=new BinaryInputStream(buffin);\n  try {\n    in.mark(32000);\n    IconDir dir=new IconDir(in);\n    IconEntry[] entries=new IconEntry[dir.idCount];\n    BufferedImage[] images=new BufferedImage[dir.idCount];\n    for (int i=0; i < dir.idCount; i++) {\n      entries[i]=new IconEntry(in);\n    }\n    IconEntry entry=entries[0];\n    for (int i=0; i < dir.idCount; i++) {\n      in.reset();\n      in.skip(entries[i].dwImageOffset);\n      IconHeader header=new IconHeader(in);\n      long toskip=header.Size - 40;\n      if (toskip > 0)       in.skip((int)toskip);\n      BufferedImage image=new BufferedImage((int)header.Width,(int)header.Height / 2,BufferedImage.TYPE_INT_ARGB);\nswitch (header.BitsPerPixel) {\ncase 4:\ncase 8:\n        loadPalettedImage(in,entries[i],header,image);\n      break;\ndefault :\n    throw new Exception(\"Unsupported ICO color depth: \" + header.BitsPerPixel);\n}\nimages[i]=image;\n}\nreturn images;\n}\n catch (Exception exc) {\nexc.printStackTrace();\n}\nreturn null;\n}\n', '0.8', '15', '7');
INSERT INTO `case_study` VALUES ('300', 'loadPalettedImage(BinaryInputStream,IconEntry,IconHeader,BufferedImage)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\codec\\IcoCodec.java', 'jsmooth', '41', '734', '648', '-1000', '10', '0.0722', '0.0332', '0', '0', '1', '1', '0', '1', '1', '1', '0', '0', 'static private void loadPalettedImage(BinaryInputStream in,IconEntry entry,IconHeader header,BufferedImage image) throws Exception {\n  int cols=(int)header.ColorsUsed;\n  if (cols == 0) {\n    if (entry.bColorCount != 0)     cols=entry.bColorCount;\n else     cols=1 << header.BitsPerPixel;\n  }\n  int[] redp=new int[cols];\n  int[] greenp=new int[cols];\n  int[] bluep=new int[cols];\n  for (int i=0; i < cols; i++) {\n    bluep[i]=in.readUByte();\n    greenp[i]=in.readUByte();\n    redp[i]=in.readUByte();\n    in.readUByte();\n  }\n  int xorbytes=(((int)header.Height / 2) * (int)header.Width);\n  int readbytes=0;\n  for (int y=(int)(header.Height / 2) - 1; y >= 0; y--) {\n    for (int x=0; x < header.Width; x++) {\nswitch (header.BitsPerPixel) {\ncase 4:\n{\n          int pix=in.readUByte();\n          readbytes++;\n          int col1=(pix >> 4) & 0x0F;\n          int col2=pix & 0x0F;\n          image.setRGB(x,y,(0xFF << 24) | (redp[col1] << 16) | (greenp[col1] << 8)| bluep[col1]);\n          image.setRGB(++x,y,(0xFF << 24) | (redp[col2] << 16) | (greenp[col2] << 8)| bluep[col2]);\n        }\n      break;\ncase 8:\n{\n      int col1=in.readUByte();\n      readbytes++;\n      image.setRGB(x,y,(0xFF << 24) | (redp[col1] << 16) | (greenp[col1] << 8)| bluep[col1]);\n    }\n  break;\n}\n}\n}\nint height=(int)(header.Height / 2);\nint rowsize=(int)header.Width / 8;\nif ((rowsize % 4) > 0) {\nrowsize+=4 - (rowsize % 4);\n}\nint[] andbytes=new int[rowsize * height];\nfor (int i=0; i < andbytes.length; i++) andbytes[i]=in.readUByte();\nfor (int y=height - 1; y >= 0; y--) {\nfor (int x=0; x < header.Width; x++) {\nint offset=((height - (y + 1)) * rowsize) + (x / 8);\nif ((andbytes[offset] & (1 << (7 - x % 8))) != 0) {\nimage.setRGB(x,y,0);\n}\n}\n}\n}\n', '1', '24', '13');
INSERT INTO `case_study` VALUES ('301', 'main(String[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\codec\\IcoCodec.java', 'jsmooth', '10', '38', '31', '-1000', '6', '0.1667', '0.0913', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'static public void main(String[] args) throws Exception {\n  File f=new File(args[0]);\n  Image img=IcoCodec.loadImages(f)[0];\n  javax.swing.JFrame jf=new javax.swing.JFrame(\"Test\");\n  javax.swing.JButton button=new javax.swing.JButton(new javax.swing.ImageIcon(img));\n  jf.getContentPane().add(button);\n  jf.pack();\n  jf.setVisible(true);\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('302', 'quantizeImage(int,int)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\codec\\Quantize.java', 'jsmooth', '15', '95', '85', '-1000', '11', '0.0933', '0.0719', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '/** \n * Reduce the image to the given number of colors. The pixels are\n * reduced in place.\n * @return The new color palette.\n */\npublic static int[] quantizeImage(int pixels[][],int max_colors){\n  Cube cube=new Cube(pixels,max_colors);\n  cube.classification();\n  cube.reduction();\n  cube.assignment();\n  return cube.colormap;\n}\n', '0.25', '3', '1');
INSERT INTO `case_study` VALUES ('324', 'readIntBE()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\io\\BinaryInputStream.java', 'jsmooth', '7', '17', '13', '-1000', '3', '0.2857', '0.05', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public int readIntBE() throws IOException {\n  int a=read();\n  int b=read();\n  int c=read();\n  int d=read();\n  return ((a & 0xff) << 24) | ((b & 0xff) << 16) | ((c & 0xff) << 8)| (d & 0xff);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('325', 'readUIntBE()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\io\\BinaryInputStream.java', 'jsmooth', '7', '17', '13', '-1000', '3', '0.2857', '0.05', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public long readUIntBE() throws IOException {\n  int a=read();\n  int b=read();\n  int c=read();\n  int d=read();\n  return (long)((a & 0xff) << 24) | (long)((b & 0xff) << 16) | (long)((c & 0xff) << 8)| (long)(d & 0xff);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('326', 'readIntLE()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\io\\BinaryInputStream.java', 'jsmooth', '7', '17', '13', '-1000', '3', '0.2857', '0.05', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public int readIntLE() throws IOException {\n  int a=readByte();\n  int b=readByte();\n  int c=readByte();\n  int d=readByte();\n  return ((d & 0xff) << 24) | ((c & 0xff) << 16) | ((b & 0xff) << 8)| (a & 0xff);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('327', 'readUIntLE()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\util\\io\\BinaryInputStream.java', 'jsmooth', '7', '17', '13', '-1000', '3', '0.2857', '0.05', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public long readUIntLE() throws IOException {\n  int a=readByte();\n  int b=readByte();\n  int c=readByte();\n  int d=readByte();\n  return (long)((d & 0xff) << 24) | (long)((c & 0xff) << 16) | (long)((b & 0xff) << 8)| (long)(a & 0xff);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('329', 'main(String[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\cmdline\\CommandLine.java', 'jsmooth', '27', '316', '281', '-1000', '10', '0.085', '0.0458', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public static void main(String[] args){\n  if (args.length != 1) {\n    printUsage();\n    System.exit(10);\n  }\n  File prj=new File(args[0]);\n  if (prj.exists() == false) {\n    prj=new File(prj.toString() + \".jsmooth\");\n  }\n  if (prj.exists() == false) {\n    System.err.println(\"Error: project file <\" + args[0] + \"> not found\");\n    System.exit(10);\n  }\n  System.setProperty(\"java.awt.headless\",\"true\");\n  java.awt.Toolkit tk=java.awt.Toolkit.getDefaultToolkit();\n  String jsmoothbase=System.getProperty(\"jsmooth.basedir\");\n  try {\n    JSmoothModelBean model=JSmoothModelPersistency.load(prj);\n    File basedir=prj.getParentFile();\n    File skelbase=new File(\"skeletons\");\n    if (jsmoothbase != null) {\n      skelbase=new File(new File(jsmoothbase),\"skeletons\");\n    }\n    SkeletonList skelList=new SkeletonList(skelbase);\n    File out=new File(basedir,model.getExecutableName());\n    SkeletonBean skel=skelList.getSkeleton(model.getSkeletonName());\n    File skelroot=skelList.getDirectory(skel);\n    ExeCompiler compiler=new ExeCompiler();\n    compiler.compile(skelroot,skel,basedir,model,out);\n    System.exit(0);\n  }\n catch (  Exception exc) {\n    System.err.println(\"Incorrect project file!\");\n  }\n  System.exit(20);\n}\n', '0.5', '13', '6');
INSERT INTO `case_study` VALUES ('332', 'initComponents()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\AboutBox.java', 'jsmooth', '17', '136', '136', '-1000', '7', '0.0588', '0', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * This method is called from within the constructor to\n * initialize the form.\n * WARNING: Do NOT modify this code. The content of this method is\n * always regenerated by the Form Editor.\n */\nprivate void initComponents(){\n  java.awt.GridBagConstraints gridBagConstraints;\n  jPanel1=new javax.swing.JPanel();\n  jLabel3=new javax.swing.JLabel();\n  m_labelVersion=new javax.swing.JLabel();\n  jLabel5=new javax.swing.JLabel();\n  jLabel1=new javax.swing.JLabel();\n  jLabel2=new javax.swing.JLabel();\n  jScrollPane1=new javax.swing.JScrollPane();\n  m_licenceTextArea=new javax.swing.JTextArea();\n  jPanel2=new javax.swing.JPanel();\n  m_buttonOk=new javax.swing.JButton();\n  setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n  setTitle(\"About JSmooth\");\n  setModal(true);\n  setResizable(false);\n  addWindowListener(new java.awt.event.WindowAdapter(){\n    public void windowClosing(    java.awt.event.WindowEvent evt){\n      closeDialog(evt);\n    }\n  }\n);\n  jPanel1.setLayout(new java.awt.GridBagLayout());\n  jPanel1.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5,5,5,5)),new javax.swing.border.EtchedBorder()));\n  jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n  jLabel3.setText(\"<html><big>JSmooth</big></html>\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridx=2;\n  gridBagConstraints.gridy=1;\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.5;\n  jPanel1.add(jLabel3,gridBagConstraints);\n  m_labelVersion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n  m_labelVersion.setText(\"Unknown Version\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridy=2;\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.5;\n  jPanel1.add(m_labelVersion,gridBagConstraints);\n  jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n  jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/gnome-application-x-jar.png\")));\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=0.1;\n  jPanel1.add(jLabel5,gridBagConstraints);\n  jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n  jLabel1.setText(\"<html><b>Author</b></html>\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.insets=new java.awt.Insets(5,0,0,0);\n  jPanel1.add(jLabel1,gridBagConstraints);\n  jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n  jLabel2.setText(\"Rodrigo Reyes <reyes@charabia.net>\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  jPanel1.add(jLabel2,gridBagConstraints);\n  m_licenceTextArea.setEditable(false);\n  m_licenceTextArea.setLineWrap(true);\n  m_licenceTextArea.setText(\"This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\\n\\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\\n\\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\");\n  m_licenceTextArea.setWrapStyleWord(true);\n  jScrollPane1.setViewportView(m_licenceTextArea);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.gridheight=3;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.insets=new java.awt.Insets(10,10,10,10);\n  gridBagConstraints.weightx=1.0;\n  gridBagConstraints.weighty=1.0;\n  jPanel1.add(jScrollPane1,gridBagConstraints);\n  getContentPane().add(jPanel1,java.awt.BorderLayout.CENTER);\n  m_buttonOk.setText(\"OK\");\n  m_buttonOk.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonOkActionPerformed(evt);\n    }\n  }\n);\n  jPanel2.add(m_buttonOk);\n  getContentPane().add(jPanel2,java.awt.BorderLayout.SOUTH);\n  java.awt.Dimension screenSize=java.awt.Toolkit.getDefaultToolkit().getScreenSize();\n  setBounds((screenSize.width - 450) / 2,(screenSize.height - 350) / 2,450,350);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('337', 'main(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\AboutBox.java', 'jsmooth', '13', '78', '78', '-1000', '3', '0.0769', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', '/** \n * @param args the command line arguments\n */\npublic static void main(String args[]){\n  new AboutBox(new javax.swing.JFrame(),true).setVisible(true);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('350', 'EditorPool()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\EditorPool.java', 'jsmooth', '18', '153', '153', '-1000', '3', '-1', '-1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public EditorPool(){\n  add(net.charabia.jsmoothgen.application.gui.editors.SkeletonChooser.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.SkeletonProperties.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.ExecutableName.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.ExecutableIcon.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.CurrentDirectory.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.MainClass.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.ApplicationArguments.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.EmbeddedJar.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.ClassPath.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.MinVersion.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.MaxVersion.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.JVMBundle.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.JVMSearchSequence.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.MaxMemoryHeap.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.InitialMemoryHeap.class);\n  add(net.charabia.jsmoothgen.application.gui.editors.JavaProperties.class);\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('353', 'Main()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\Main.java', 'jsmooth', '11', '51', '47', '-1000', '7', '0.1212', '0.0374', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'private Main(){\n  Splash splash=new Splash(this,\"/icons/splash.png\",false);\n  splash.setVersion(VERSION);\n  splash.show();\n  m_projectFileChooser.addChoosableFileFilter(new SimpleFileFilter(\"jsmooth\",\"JSmooth Project Files\"));\n  getContentPane().setLayout(new BorderLayout());\n  m_panel=new MasterPanel();\n  getContentPane().add(BorderLayout.CENTER,m_panel);\n  setupMenus();\n  setupToolBar();\n  addWindowListener(new java.awt.event.WindowAdapter(){\n    public void windowClosing(    java.awt.event.WindowEvent evt){\n      EXIT.actionPerformed(null);\n    }\n  }\n);\n  setTitle(\"Untitled\");\n  loadWindowSettings();\n  splash.dispose();\n}\n', '0.5', '2', '1');
INSERT INTO `case_study` VALUES ('359', 'MasterPanel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '17', '128', '120', '-1000', '6', '0.0798', '0.0351', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public MasterPanel(){\n  setLayout(new BorderLayout());\n  add(BorderLayout.WEST,m_scrollpane=new JScrollPane(m_leftBar));\n  JScrollPane scp=new JScrollPane(m_mainpanel);\n  m_mainpanelVBar=scp.getVerticalScrollBar();\n  add(BorderLayout.CENTER,scp);\n  scp.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n  m_mainpanel.setLayout(new RiverLayout());\n  addAction(\"Welcome\",\"/icons/stock_form-properties.png\",m_jsInfo);\n  addAction(\"Skeleton\",\"/icons/stock_new-template.png\",m_skelElements);\n  addAction(\"Executable\",\"/icons/stock_autopilot-24.png\",m_execElements);\n  addAction(\"Application\",\"/icons/stock_form-image-control.png\",m_appElements);\n  addAction(\"JVM Selection\",\"/icons/stock_search.png\",m_jvmSelElements);\n  addAction(\"JVM Configuration\",\"/icons/stock_form-properties.png\",m_jvmCfgElements);\n  setupPanel(m_jsInfo);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('361', 'addAction(String,String,Object[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '12', '62', '58', '-1000', '9', '0.119', '0.0272', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void addAction(final String name,String iconloc,final Object[] els){\n  final Action a=new AbstractAction(name,new ImageIcon(getClass().getResource(iconloc))){\n    public void actionPerformed(    ActionEvent e){\n      if (m_currentPanelName.equals(name))       return;\n      setupPanel(els);\n      m_currentPanelName=name;\n    }\n  }\n;\n  JToggleButton jtb=new JToggleButton(a);\n  m_leftGroup.add(jtb);\n  m_leftBar.add(jtb);\n}\n', '0', '6', '1');
INSERT INTO `case_study` VALUES ('365', 'detachAll()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '6', '8', '1', '-1000', '2', '0.3667', '0.2', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void detachAll(){\n  for (Iterator i=m_displayedElements.iterator(); i.hasNext(); ) {\n    Editor ed=(Editor)i.next();\n    if (ed instanceof JSmoothModelBean.Listener)     m_model.removeListener((JSmoothModelBean.Listener)ed);\n    if (ed instanceof JSmoothModelBean.SkeletonChangedListener)     m_model.removeSkeletonChangedListener((JSmoothModelBean.SkeletonChangedListener)ed);\n    ed.detach();\n  }\n}\n', '0.6666666666666666', '2', '4');
INSERT INTO `case_study` VALUES ('366', 'attachAll()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '9', '22', '8', '-1000', '2', '0.2698', '0.1574', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void attachAll(){\n  for (Iterator i=m_displayedElements.iterator(); i.hasNext(); ) {\n    Editor ed=(Editor)i.next();\n    File basedir=null;\n    if (m_modelLocation != null)     basedir=m_modelLocation.getParentFile();\n    ed.attach(m_model,basedir);\n    if (ed instanceof JSmoothModelBean.Listener)     m_model.addListener((JSmoothModelBean.Listener)ed);\n    if (ed instanceof JSmoothModelBean.SkeletonChangedListener)     m_model.addSkeletonChangedListener((JSmoothModelBean.SkeletonChangedListener)ed);\n    ed.dataChanged();\n  }\n}\n', '0.5', '3', '5');
INSERT INTO `case_study` VALUES ('368', 'newModel(JSmoothModelBean,java.io.File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public void newModel(JSmoothModelBean bean,java.io.File location){\n  detachAll();\n  m_model=bean;\n  m_modelLocation=location;\n  attachAll();\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('369', 'openFile(java.io.File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '8', '24', '20', '-1000', '5', '0.225', '0.0733', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public boolean openFile(java.io.File f){\n  m_modelLocation=f;\n  try {\n    JSmoothModelBean model=JSmoothModelPersistency.load(m_modelLocation);\n    newModel(model,f);\n    return true;\n  }\n catch (  java.io.IOException iox) {\n    iox.printStackTrace();\n    return false;\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('370', 'save()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '10', '41', '37', '-1000', '7', '0.1667', '0.0641', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public boolean save(){\n  if (m_modelLocation == null)   return false;\n  try {\n    fireUpdateModel();\n    m_model.normalizePaths(m_modelLocation.getParentFile(),true);\n    JSmoothModelPersistency.save(m_modelLocation,m_model);\n    return true;\n  }\n catch (  java.io.IOException iox) {\n    iox.printStackTrace();\n  }\n  return false;\n}\n', '1', '1', '3');
INSERT INTO `case_study` VALUES ('373', 'runexe()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '10', '41', '37', '-1000', '6', '0.1571', '0.047', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void runexe(){\n  fireUpdateModel();\n  try {\n    File basedir=m_modelLocation.getParentFile();\n    File f=new File(basedir,m_model.getExecutableName());\n    String[] cmd=new String[]{f.getAbsolutePath()};\n    CommandRunner.run(cmd,f.getParentFile());\n  }\n catch (  Exception exc) {\n    exc.printStackTrace();\n  }\n}\n', '1', '4', '2');
INSERT INTO `case_study` VALUES ('377', 'main(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\MasterPanel.java', 'jsmooth', '8', '22', '16', '-1000', '5', '0.2188', '0.1667', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void main(String args[]){\n  try {\n    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n  }\n catch (  Exception e) {\n  }\n  JFrame test=new JFrame(\"test\");\n  test.getContentPane().add(new MasterPanel());\n  test.pack();\n  test.setVisible(true);\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('382', 'Splash(Frame,String,boolean)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\Splash.java', 'jsmooth', '11', '47', '39', '-1000', '5', '0.1616', '0.0586', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public Splash(Frame parent,String imagefilename,boolean dialog){\n  if (dialog) {\n    m_window=new MyDialog(parent);\n  }\n else {\n    m_window=new MyWindow(parent);\n  }\n  javax.swing.ImageIcon icon=new javax.swing.ImageIcon(getClass().getResource(imagefilename));\n  m_splashImage=icon.getImage();\n  MediaTracker loader=new MediaTracker(m_window);\n  loader.addImage(m_splashImage,0);\n  try {\n    loader.waitForAll();\n  }\n catch (  Exception e) {\n  }\n}\n', '1', '6', '3');
INSERT INTO `case_study` VALUES ('383', 'show()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\Splash.java', 'jsmooth', '6', '11', '7', '-1000', '3', '0.2778', '0.0905', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void show(){\n  Dimension screendim=Toolkit.getDefaultToolkit().getScreenSize();\n  m_window.setSize(m_splashImage.getWidth(m_window),m_splashImage.getHeight(m_window));\n  m_window.setLocation((screendim.width - m_splashImage.getWidth(m_window)) / 2,(screendim.height - m_splashImage.getHeight(m_window)) / 2);\n  m_window.setVisible(true);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('393', 'run()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\CompileAction.java', 'jsmooth', '7', '11', '1', '-1000', '3', '0.7143', '0.5', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public boolean run(){\n  System.out.println(\"[DEBUG] Compiling, stand by...\");\n  JSmoothApplication app=getApplication();\n  if (!app.hasProjectFile()) {\n    app.consoleMessage(\"Cannot compile without a project file. Please save the project or load a new one, then try again.\");\n    return false;\n  }\n else {\n    app.saveProject();\n  }\n  return app.compileProject();\n}\n', '0.4', '1', '2');
INSERT INTO `case_study` VALUES ('395', 'createPageArea(Composite)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\ExecutablePage.java', 'jsmooth', '13', '56', '34', '-1000', '3', '0.1538', '0.1067', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public Control createPageArea(Composite parent){\n  Composite top=new Composite(parent,SWT.NONE);\n  top.setLayout(new GridLayout(3,false));\n  Label label=new Label(top,SWT.NONE);\n  label.setText(\"Executable name:\");\n  GridData grid=new GridData(GridData.FILL);\n  label.setLayoutData(grid);\n  exe=new Text(top,SWT.BORDER);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=250;\n  exe.setLayoutData(grid);\n  exe.addModifyListener(new ModifyListener(){\n    public void modifyText(    ModifyEvent e){\n      setModelExename(exe.getText());\n    }\n  }\n);\n  Button button=new Button(top,SWT.NONE);\n  button.setText(\"Browse...\");\n  button.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      FileDialog dialog=new FileDialog(getShell(),SWT.SAVE);\n      dialog.setText(\"Executable Name\");\n      String file=dialog.open();\n      if (file != null)       ExecutablePage.this.exe.setText(file);\n    }\n  }\n);\n  grid=new GridData(GridData.FILL);\n  grid.widthHint=100;\n  button.setLayoutData(grid);\n  label=new Label(top,SWT.NONE);\n  label.setText(\"Current directory:\");\n  grid=new GridData(GridData.FILL);\n  label.setLayoutData(grid);\n  dir=new Text(top,SWT.BORDER);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=250;\n  dir.setLayoutData(grid);\n  dir.addModifyListener(new ModifyListener(){\n    public void modifyText(    ModifyEvent e){\n      setModelCurrentdir(dir.getText());\n    }\n  }\n);\n  button=new Button(top,SWT.NONE);\n  button.setText(\"Browse...\");\n  button.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      DirectoryDialog dialog=new DirectoryDialog(getShell(),SWT.SAVE);\n      dialog.setText(\"Current Directory\");\n      String dir=dialog.open();\n      if (dir != null)       ExecutablePage.this.dir.setText(dir);\n    }\n  }\n);\n  grid=new GridData(GridData.FILL);\n  grid.widthHint=100;\n  button.setLayoutData(grid);\n  Group group=new Group(top,SWT.NONE);\n  GridLayout layout=new GridLayout();\n  group.setLayout(layout);\n  grid=new GridData(GridData.FILL | GridData.HORIZONTAL_ALIGN_CENTER);\n  grid.horizontalSpan=3;\n  group.setLayoutData(grid);\n  group.setText(\"Executable icon\");\n  icon=new Label(group,SWT.BORDER | SWT.FLAT);\n  grid=new GridData(GridData.FILL | GridData.HORIZONTAL_ALIGN_CENTER);\n  grid.widthHint=48;\n  grid.heightHint=48;\n  icon.setLayoutData(grid);\n  button=new Button(group,SWT.NONE);\n  button.setText(\"Browse...\");\n  button.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      FileDialog dialog=new FileDialog(getShell(),SWT.OPEN);\n      dialog.setText(\"Icon File\");\n      String file=dialog.open();\n      if (file == null)       return;\n      setModelIcon(setIcon(file) ? file : null);\n    }\n  }\n);\n  grid=new GridData(GridData.FILL);\n  grid.widthHint=100;\n  button.setLayoutData(grid);\n  return top;\n}\n', '1', '20', '1');
INSERT INTO `case_study` VALUES ('406', 'load()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\ExecutablePage.java', 'jsmooth', '9', '26', '16', '-1000', '3', '0.2222', '0.1057', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void load(){\n  JSmoothModelBean jsmodel=getApplication().getModelBean();\n  String exename=jsmodel.getExecutableName();\n  if (exename == null)   exename=\"\";\n  this.exe.setText(exename);\n  String iconfile=jsmodel.getIconLocation();\n  setIcon(iconfile);\n  String dirname=jsmodel.getCurrentDirectory();\n  if (dirname == null)   dirname=\"\";\n  this.dir.setText(dirname);\n}\n', '0.6', '6', '3');
INSERT INTO `case_study` VALUES ('410', 'createPageArea(Composite)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JavaAppPage.java', 'jsmooth', '25', '234', '168', '-1000', '3', '0.0978', '0.0918', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public Control createPageArea(Composite parent){\n  Composite top=new Composite(parent,SWT.NONE);\n  top.setLayout(new GridLayout());\n  Composite composite=new Composite(top,SWT.NONE);\n  GridLayout layout=new GridLayout(3,false);\n  layout.marginHeight=0;\n  layout.marginWidth=0;\n  composite.setLayout(layout);\n  composite.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  usejar=new Button(composite,SWT.CHECK);\n  usejar.setText(\"Use embedded JAR\");\n  usejar.addSelectionListener(LISTENER_USEJAR);\n  GridData grid=new GridData(GridData.FILL);\n  grid.horizontalSpan=3;\n  usejar.setLayoutData(grid);\n  Label label=new Label(composite,SWT.NONE);\n  label.setText(\"JAR location:\");\n  grid=new GridData(GridData.FILL);\n  label.setLayoutData(grid);\n  jar=new Text(composite,SWT.BORDER);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=250;\n  jar.setLayoutData(grid);\n  jar.addModifyListener(new ModifyListener(){\n    public void modifyText(    ModifyEvent e){\n      setModelJar(jar.getText());\n    }\n  }\n);\n  setjar=new Button(composite,SWT.NONE);\n  setjar.setText(\"Browse...\");\n  setjar.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      FileDialog dialog=new FileDialog(getShell(),SWT.SAVE);\n      dialog.setText(\"JAR Location\");\n      String file=dialog.open();\n      if (file != null)       jar.setText(file);\n      setModelJar(file);\n    }\n  }\n);\n  grid=new GridData(GridData.FILL);\n  grid.widthHint=100;\n  setjar.setLayoutData(grid);\n  label=new Label(composite,SWT.SEPARATOR | SWT.HORIZONTAL);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.horizontalSpan=3;\n  label.setLayoutData(grid);\n  label=new Label(composite,SWT.NONE);\n  label.setText(\"Main class:\");\n  grid=new GridData(GridData.FILL);\n  label.setLayoutData(grid);\n  mainclass=new Text(composite,SWT.BORDER);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=250;\n  mainclass.setLayoutData(grid);\n  mainclass.addModifyListener(new ModifyListener(){\n    public void modifyText(    ModifyEvent e){\n      setModelMainclass(mainclass.getText());\n    }\n  }\n);\n  new Label(composite,SWT.NONE);\n  label=new Label(composite,SWT.NONE);\n  label.setText(\"Arguments:\");\n  grid=new GridData(GridData.FILL);\n  label.setLayoutData(grid);\n  args=new Text(composite,SWT.BORDER);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=250;\n  args.setLayoutData(grid);\n  args.addModifyListener(new ModifyListener(){\n    public void modifyText(    ModifyEvent e){\n      setModelArguments(args.getText());\n    }\n  }\n);\n  new Label(composite,SWT.NONE);\n  Group group=new Group(top,SWT.NONE);\n  group.setText(\"Classpath\");\n  group.setLayout(new GridLayout());\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.horizontalSpan=3;\n  group.setLayoutData(grid);\n  group.setLayout(new GridLayout(2,false));\n  classpath=new List(group,SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL| SWT.MULTI);\n  grid=new GridData(GridData.FILL_BOTH);\n  grid.widthHint=250;\n  grid.heightHint=classpath.getItemHeight() * 10;\n  classpath.setLayoutData(grid);\n  classpath.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      updateRemoveButton();\n    }\n  }\n);\n  composite=new Composite(group,SWT.NONE);\n  composite.setLayoutData(new GridData(GridData.FILL_VERTICAL));\n  layout=new GridLayout();\n  layout.marginHeight=0;\n  layout.marginWidth=2;\n  composite.setLayout(layout);\n  addjar=new Button(composite,SWT.NONE);\n  addjar.setText(\"Add JAR File...\");\n  addjar.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      FileDialog dialog=new FileDialog(getShell(),SWT.OPEN | SWT.MULTI);\n      dialog.setText(\"JAR File\");\n      String choice=dialog.open();\n      if (choice != null) {\n        String path=dialog.getFilterPath();\n        String[] filenames=dialog.getFileNames();\n        ArrayList files=new ArrayList();\n        for (int i=0; i < filenames.length; i++) {\n          files.add(path + File.separator + filenames[i]);\n        }\n        addClasspathItems((String[])files.toArray(new String[0]));\n      }\n    }\n  }\n);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=130;\n  addjar.setLayoutData(grid);\n  addfolder=new Button(composite,SWT.NONE);\n  addfolder.setText(\"Add Class Folder...\");\n  addfolder.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      DirectoryDialog dialog=new DirectoryDialog(getShell(),SWT.SAVE);\n      dialog.setText(\"Class Folder\");\n      String folder=dialog.open();\n      if (folder != null)       addClasspathItems(new String[]{folder});\n    }\n  }\n);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=130;\n  addfolder.setLayoutData(grid);\n  remove=new Button(composite,SWT.NONE);\n  remove.setText(\"Remove\");\n  remove.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      removeItem();\n    }\n  }\n);\n  grid=new GridData(GridData.FILL_HORIZONTAL);\n  grid.widthHint=130;\n  remove.setLayoutData(grid);\n  updateRemoveButton();\n  updateUsejarWidgets();\n  return top;\n}\n', '1', '25', '1');
INSERT INTO `case_study` VALUES ('422', 'updateRemoveButton()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JavaAppPage.java', 'jsmooth', '9', '25', '14', '-1000', '3', '0.2667', '0.131', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void updateRemoveButton(){\n  int i=classpath.getItemCount();\n  boolean enable=true;\n  if (i == 0) {\n    enable=false;\n  }\n else {\n    int s=classpath.getSelectionCount();\n    if (s == 0)     enable=false;\n  }\n  remove.setEnabled(enable);\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('423', 'addClasspathItems(String[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JavaAppPage.java', 'jsmooth', '7', '14', '7', '-1000', '3', '0.3571', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void addClasspathItems(String[] items){\n  String[] olditems=classpath.getItems();\n  for (int i=0; i < items.length; i++) {\n    if (Arrays.binarySearch(olditems,items[i]) >= 0)     continue;\n    classpath.add(items[i]);\n  }\n  setModelClasspath(classpath.getItems());\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('429', 'load()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JavaAppPage.java', 'jsmooth', '15', '73', '41', '-1000', '4', '0.1778', '0.1106', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void load(){\n  JSmoothModelBean jsmodel=getApplication().getModelBean();\n  String[] classpath=jsmodel.getClassPath();\n  if (classpath == null)   classpath=new String[0];\n  this.classpath.setItems(classpath);\n  boolean usejar=jsmodel.getEmbeddedJar();\n  this.usejar.setSelection(usejar);\n  LISTENER_USEJAR.widgetSelected(null);\n  String mainclass=jsmodel.getMainClassName();\n  if (mainclass == null)   mainclass=\"\";\n  this.mainclass.setText(mainclass);\n  String jar=jsmodel.getJarLocation();\n  if (jar == null)   jar=\"\";\n  this.jar.setText(jar);\n  String args=jsmodel.getArguments();\n  if (args == null)   args=\"\";\n  this.args.setText(args);\n}\n', '0.42857142857142855', '11', '5');
INSERT INTO `case_study` VALUES ('434', 'newProject()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '24', '155', '34', '-1000', '7', '0.1125', '0.3361', '0', '0', '0', '0', '0', '1', '1', '0', '1', '1', 'public void newProject(){\n  jsmodel=new JSmoothModelBean();\n  jsmodel.setSkeletonName(getInitialSkeletonName());\n  setSkeletonProperties(getInititalSkeletonProperties());\n  jsmodel.setExecutableName(\"\");\n  jsmodel.setArguments(\"\");\n  jsmodel.setBundledJVMPath(\"\");\n  jsmodel.setClassPath(new String[0]);\n  jsmodel.setCurrentDirectory(\"\");\n  jsmodel.setIconLocation(\"\");\n  jsmodel.setJarLocation(\"\");\n  jsmodel.setJavaProperties(new JavaPropertyPair[0]);\n  jsmodel.setJVMSearchPath(new String[0]);\n  jsmodel.setMainClassName(\"\");\n  jsmodel.setMaximumVersion(\"\");\n  jsmodel.setMinimumVersion(\"\");\n  jsmodel.setNoJvmMessage(\"\");\n  jsmodel.setNoJvmURL(\"\");\n  projectfile=null;\n  compiler=new ExeCompiler();\n  compiler.addListener(new SWTCompileListener());\n  for (int i=0; i < PAGES.length; i++) {\n    PAGES[i].load();\n  }\n  getShell().setText(getProjectName());\n}\n', '0.2', '1', '2');
INSERT INTO `case_study` VALUES ('440', 'createSwitcherControl(Shell)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '7', '11', '1', '-1000', '3', '0.2245', '0.15', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '/** \n * Creates the \"Page Switcher\" toolbar manager and its control. The \"Page\n * Switcher\" lies on the left of the JSmooth window, and is a vertical\n * toolbar, with toggle items. On item selection, the window contents change.\n */\nprivate void createSwitcherControl(Shell shell){\n  switcher=new ToolBar(shell,SWT.FLAT | SWT.NO_FOCUS | SWT.VERTICAL);\n  PAGE_WELCOME.createToolItem(switcher);\n  PAGE_SKELETON.createToolItem(switcher);\n  PAGE_APPLICATION.createToolItem(switcher);\n  PAGE_EXECUTABLE.createToolItem(switcher);\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('441', 'createMainMenu(Shell)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '10', '33', '21', '-1000', '3', '0.2286', '0.0962', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void createMainMenu(Shell shell){\n  mainmenu=new Menu(shell,SWT.BAR);\n  MenuItem topItem=new MenuItem(mainmenu,SWT.CASCADE);\n  topItem.setText(\"File\");\n  Menu menu=new Menu(shell,SWT.DROP_DOWN);\n  topItem.setMenu(menu);\n  MenuItem item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"New\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_NEW.run();\n    }\n  }\n);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Open...\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_OPEN.run();\n    }\n  }\n);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Save\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_SAVE.run();\n    }\n  }\n);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Save As...\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_SAVE_AS.run();\n    }\n  }\n);\n  item=new MenuItem(menu,SWT.SEPARATOR);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Exit\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_EXIT.run();\n    }\n  }\n);\n  topItem=new MenuItem(mainmenu,SWT.CASCADE);\n  topItem.setText(\"Project\");\n  menu=new Menu(shell,SWT.DROP_DOWN);\n  topItem.setMenu(menu);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Compile\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_COMPILE.run();\n    }\n  }\n);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Run .exe\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_RUNEXE.run();\n    }\n  }\n);\n  topItem=new MenuItem(mainmenu,SWT.CASCADE);\n  topItem.setText(\"Console\");\n  menu=new Menu(shell,SWT.DROP_DOWN);\n  topItem.setMenu(menu);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Clear\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_CONSOLE_CLEAR.run();\n    }\n  }\n);\n  shell.setMenuBar(mainmenu);\n}\n', '1', '12', '1');
INSERT INTO `case_study` VALUES ('450', 'createPages(Shell)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '7', '17', '13', '-1000', '3', '0.2143', '0.0708', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void createPages(Shell shell){\n  pagearea=new Composite(shell,SWT.NONE);\n  stack=new StackLayout();\n  pagearea.setLayout(stack);\n  for (int i=0; i < PAGES.length; i++) {\n    PAGES[i].createControl(pagearea);\n  }\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('451', 'showPage(JSmoothPage)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '6', '13', '11', '-1000', '4', '0.25', '0.0595', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void showPage(JSmoothPage page){\n  stack.topControl=page.getControl();\n  if (pagearea != null)   pagearea.layout();\n  ToolItem item=page.getToolItem();\n  if (!item.getSelection())   item.setSelection(true);\n}\n', '0.5', '2', '3');
INSERT INTO `case_study` VALUES ('453', 'run()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '12', '57', '48', '-1000', '7', '0.2222', '0.15', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  if (shell == null)   createControls();\n  shell.open();\n  newProject();\n  showPage(PAGE_WELCOME);\n  try {\n    while (shell != null && !shell.isDisposed()) {\n      if (!display.readAndDispatch()) {\n        display.sleep();\n      }\n    }\n    display.update();\n  }\n  finally {\n    display.dispose();\n  }\n}\n', '0', '0', '5');
INSERT INTO `case_study` VALUES ('455', 'createConsole(Shell)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '14', '71', '51', '-1000', '3', '0.1488', '0.0772', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void createConsole(Shell shell){\n  consolearea=new Composite(shell,SWT.NULL);\n  GridLayout gridlayout=new GridLayout();\n  consolearea.setLayout(gridlayout);\n  console=new Text(consolearea,SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL| SWT.READ_ONLY| SWT.BORDER);\n  console.setBackground(shell.getDisplay().getSystemColor(SWT.COLOR_WHITE));\n  console.setForeground(shell.getDisplay().getSystemColor(SWT.COLOR_BLUE));\n  GridData gridata=new GridData(GridData.FILL_BOTH);\n  console.setLayoutData(gridata);\n  Menu menu=new Menu(shell,SWT.NULL);\n  MenuItem item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Clear\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      ACTION_CONSOLE_CLEAR.run();\n    }\n  }\n);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Copy\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      console.copy();\n    }\n  }\n);\n  item=new MenuItem(menu,SWT.NULL);\n  item.setText(\"Copy All\");\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      console.selectAll();\n      console.copy();\n    }\n  }\n);\n  console.setMenu(menu);\n}\n', '1', '8', '1');
INSERT INTO `case_study` VALUES ('467', 'saveProjectAs(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '8', '24', '20', '-1000', '5', '0.2083', '0.0793', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public boolean saveProjectAs(String projectfile){\n  System.out.println(\"[DEBUG] Saving project to file: \" + projectfile);\n  this.projectfile=new File(projectfile);\n  try {\n    JSmoothModelPersistency.save(this.projectfile,jsmodel);\n  }\n catch (  IOException e) {\n    System.out.println(\"[ERROR] Failed saving project : \" + e.getMessage());\n    return false;\n  }\n  getShell().setText(getProjectName());\n  return true;\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('472', 'openProject(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '13', '69', '60', '-1000', '6', '0.1538', '0.0641', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public boolean openProject(String projectfile){\n  System.out.println(\"[DEBUG] Opening project : \" + projectfile);\n  File file=new File(projectfile);\n  JSmoothModelBean jsmodel=null;\n  try {\n    jsmodel=JSmoothModelPersistency.load(file);\n  }\n catch (  IOException e) {\n    System.out.println(\"[ERROR] Failed opening project : \" + e.getMessage());\n    return false;\n  }\n  this.projectfile=file;\n  this.jsmodel=jsmodel;\n  for (int i=0; i < PAGES.length; i++) {\n    PAGES[i].load();\n  }\n  getShell().setText(getProjectName());\n  return true;\n}\n', '1', '7', '3');
INSERT INTO `case_study` VALUES ('473', 'compileProject()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '17', '112', '88', '-1000', '5', '0.1345', '0.0545', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public boolean compileProject(){\n  consoleMessage(\"=== Compilation ===\");\n  File basedir=projectfile.getParentFile();\n  jsmodel.normalizePaths(basedir);\n  String skeletonName=jsmodel.getSkeletonName();\n  SkeletonBean skeletonBean=skeletonList.getSkeleton(skeletonName);\n  File skeletonRoot=skeletonList.getDirectory(skeletonBean);\n  File exename=new File(jsmodel.getExecutableName());\n  if (!exename.isAbsolute()) {\n    exename=new File(basedir,jsmodel.getExecutableName());\n  }\n  boolean success=false;\n  try {\n    success=compiler.compile(skeletonRoot,skeletonBean,basedir,jsmodel,exename);\n  }\n catch (  Exception e) {\n  }\n  consoleMessages((String[])compiler.getErrors().toArray(new String[0]));\n  compiler.cleanErrors();\n  return success;\n}\n', '0.375', '7', '3');
INSERT INTO `case_study` VALUES ('477', 'consoleSection(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothApplication.java', 'jsmooth', '7', '14', '7', '-1000', '3', '0.4286', '0.25', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public void consoleSection(String title){\n  StringBuffer buffer=new StringBuffer(\"-------------------------------------------------------------------------------------\");\n  if (title == null) {\n    consoleMessage(buffer.toString());\n    return;\n  }\n  buffer.replace(0,title.length() + 1,title + \" \");\n  consoleMessage(buffer.toString());\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('485', 'createToolItem(ToolBar)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JSmoothPage.java', 'jsmooth', '7', '15', '9', '-1000', '4', '0.2857', '0.2222', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public ToolItem createToolItem(final ToolBar toolbar){\n  configureResources();\n  item=new ToolItem(toolbar,SWT.RADIO);\n  item.setImage(getImage());\n  item.setToolTipText(getToolTip());\n  item.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      js.showPage(JSmoothPage.this);\n      ToolItem[] items=toolbar.getItems();\n      for (int i=0; i < items.length; i++) {\n        if (items[i] != item)         items[i].setSelection(false);\n      }\n    }\n  }\n);\n  return item;\n}\n', '1', '4', '1');
INSERT INTO `case_study` VALUES ('504', 'createPageArea(Composite)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\JVMOptionsPage.java', 'jsmooth', '16', '80', '40', '-1000', '3', '0.1591', '0.1319', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public Control createPageArea(Composite parent){\n  Composite top=new Composite(parent,SWT.NONE);\n  top.setLayout(new GridLayout());\n  Group group=new Group(top,SWT.NONE);\n  group.setText(\"Classpath\");\n  group.setLayout(new GridLayout());\n  GridData griddata=new GridData(GridData.FILL_HORIZONTAL);\n  group.setLayoutData(griddata);\n  group.setLayout(new GridLayout(2,false));\n  classpath=new List(group,SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL| SWT.MULTI);\n  griddata=new GridData(GridData.FILL_BOTH);\n  griddata.widthHint=250;\n  griddata.heightHint=classpath.getItemHeight() * 10;\n  classpath.setLayoutData(griddata);\n  classpath.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n    }\n  }\n);\n  Composite composite=new Composite(group,SWT.NONE);\n  composite.setLayoutData(new GridData(GridData.FILL_VERTICAL));\n  GridLayout layout=new GridLayout();\n  layout.marginHeight=0;\n  layout.marginWidth=2;\n  composite.setLayout(layout);\n  addjar=new Button(composite,SWT.NONE);\n  addjar.setText(\"Add JAR File...\");\n  addjar.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n    }\n  }\n);\n  griddata=new GridData(GridData.FILL_HORIZONTAL);\n  griddata.widthHint=130;\n  addjar.setLayoutData(griddata);\n  addfolder=new Button(composite,SWT.NONE);\n  addfolder.setText(\"Add Class Folder...\");\n  addfolder.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n    }\n  }\n);\n  griddata=new GridData(GridData.FILL_HORIZONTAL);\n  griddata.widthHint=130;\n  addfolder.setLayoutData(griddata);\n  remove=new Button(composite,SWT.NONE);\n  remove.setText(\"Remove\");\n  remove.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n    }\n  }\n);\n  griddata=new GridData(GridData.FILL_HORIZONTAL);\n  griddata.widthHint=130;\n  remove.setLayoutData(griddata);\n  return top;\n}\n', '0', '10', '1');
INSERT INTO `case_study` VALUES ('514', 'run()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\OpenAction.java', 'jsmooth', '10', '34', '23', '-1000', '4', '0.3333', '0.1468', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public boolean run(){\n  FileDialog dialog=new FileDialog(getApplication().getShell(),SWT.OPEN);\n  dialog.setText(\"Open Project\");\n  String file=dialog.open();\n  if (file != null) {\n    boolean ok=getApplication().openProject(file);\n    if (ok)     getApplication().consoleMessage(\"Opened the project file \" + file);\n    return ok;\n  }\n else {\n    return false;\n  }\n}\n', '0.5', '3', '3');
INSERT INTO `case_study` VALUES ('516', 'run()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\RunexeAction.java', 'jsmooth', '9', '17', '0', '-1000', '2', '0.2889', '0.2731', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public boolean run(){\n  System.out.println(\"[DEBUG] Running exe...\");\n  JSmoothApplication app=getApplication();\n  if (!app.hasProjectFile()) {\n    app.consoleMessage(\"Cannot run without a project file. Please save the project or load a new one, then try again.\");\n    return false;\n  }\n  JSmoothModelBean jsmodel=app.getModelBean();\n  String basedir=app.getProjectFile().getParent();\n  File exe=new File(basedir,jsmodel.getExecutableName());\n  app.consoleMessage(\"Running exe \" + exe.getAbsolutePath());\n  return Program.launch(exe.getAbsolutePath());\n}\n', '0.5', '4', '2');
INSERT INTO `case_study` VALUES ('518', 'run()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\SaveAsProjectAction.java', 'jsmooth', '8', '22', '16', '-1000', '4', '0.375', '0.16', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public boolean run(){\n  FileDialog dialog=new FileDialog(getApplication().getShell(),SWT.SAVE);\n  dialog.setText(\"Save Project\");\n  String file=dialog.open();\n  if (file != null) {\n    return getApplication().saveProjectAs(file);\n  }\n else {\n    return false;\n  }\n}\n', '0.6666666666666666', '2', '2');
INSERT INTO `case_study` VALUES ('520', 'run()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\SaveProjectAction.java', 'jsmooth', '6', '15', '15', '-1000', '4', '-1', '-1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public boolean run(){\n  if (getApplication().hasProjectFile()) {\n    return getApplication().saveProject();\n  }\n else {\n    return getApplication().ACTION_SAVE_AS.run();\n  }\n}\n', '0.5', '1', '2');
INSERT INTO `case_study` VALUES ('522', 'createPageArea(Composite)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\SkeletonPage.java', 'jsmooth', '12', '53', '40', '-1000', '4', '0.15', '0.0709', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public Control createPageArea(Composite parent){\n  Composite top=new Composite(parent,SWT.NONE);\n  top.setLayout(new GridLayout(3,false));\n  Label label=new Label(top,SWT.NONE);\n  label.setText(\"Skeleton:\");\n  skelcombo=new Combo(top,SWT.READ_ONLY);\n  GridData grid=new GridData(GridData.FILL);\n  grid.widthHint=120;\n  skelcombo.setLayoutData(grid);\n  loadSkeleton(getApplication().getInitialSkeletonName());\n  skelcombo.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      setSkeletonName(skelcombo.getText());\n    }\n  }\n);\n  Button button=new Button(top,SWT.PUSH);\n  grid=new GridData(GridData.FILL);\n  grid.widthHint=120;\n  button.setLayoutData(grid);\n  button.setText(\"Properties...\");\n  button.addSelectionListener(new SelectionAdapter(){\n    public void widgetSelected(    SelectionEvent e){\n      (new SkeletonPropertiesDialog(SkeletonPage.this)).open();\n    }\n  }\n);\n  return top;\n}\n', '1', '7', '1');
INSERT INTO `case_study` VALUES ('527', 'loadSkeleton(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\SkeletonPage.java', 'jsmooth', '7', '15', '9', '-1000', '3', '0.3214', '0.1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void loadSkeleton(String skelname){\n  String[] skeletons=getApplication().getAllSkeletonNames();\n  skelcombo.setItems(skeletons);\n  System.out.println(\"[DEBUG] Loading skeleton : \" + skelname);\n  int index=Arrays.binarySearch(skeletons,skelname);\n  skelcombo.select(index);\n}\n', '1', '0', '1');
INSERT INTO `case_study` VALUES ('530', 'createDialogArea(Composite)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\SkeletonPropertiesDialog.java', 'jsmooth', '12', '56', '46', '-1000', '3', '0.1458', '0.0635', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'protected Control createDialogArea(Composite parent){\n  Composite cmpDlgArea=new Composite(parent,SWT.NONE);\n  cmpDlgArea.setLayout(new GridLayout());\n  SkeletonProperty[] props=page.getApplication().getSkeletonProperties();\n  for (int i=0; i < props.length; i++) {\n    System.out.println(\"[DEBUG] Loading skeleton property: \" + props[i].getIdName() + \"=\"+ props[i].getValue());\n  }\n  for (int i=0; i < props.length; i++) {\n    Control c=createPropertyControl(cmpDlgArea,props[i]);\n    c.setData(props[i]);\n    controls.add(c);\n  }\n  return cmpDlgArea;\n}\n', '0.75', '6', '3');
INSERT INTO `case_study` VALUES ('531', 'createPropertyControl(Composite,SkeletonProperty)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\SkeletonPropertiesDialog.java', 'jsmooth', '37', '487', '308', '-1000', '7', '0.1425', '0.1221', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private Control createPropertyControl(Composite wParent,SkeletonProperty prop){\n  Group group=null;\n  GridData grid=null;\n  if (prop.getType().equals(SkeletonProperty.TYPE_STRING)) {\n    group=new Group(wParent,SWT.NONE);\n    grid=new GridData(GridData.FILL);\n    grid.widthHint=400;\n    group.setLayoutData(grid);\n    group.setLayout(new GridLayout());\n    group.setText(prop.getLabel());\n    text=new Text(group,SWT.SINGLE | SWT.BORDER);\n    grid=new GridData(GridData.FILL_BOTH);\n    text.setLayoutData(grid);\n    text.setText(prop.getValue());\n    return text;\n  }\n else   if (prop.getType().equals(SkeletonProperty.TYPE_TEXTAREA)) {\n    group=new Group(wParent,SWT.NONE);\n    grid=new GridData(GridData.FILL);\n    grid.widthHint=400;\n    grid.heightHint=100;\n    group.setLayoutData(grid);\n    group.setLayout(new GridLayout());\n    group.setText(prop.getLabel());\n    text=new Text(group,SWT.MULTI | SWT.BORDER | SWT.H_SCROLL| SWT.V_SCROLL);\n    grid=new GridData(GridData.FILL_BOTH);\n    text.setLayoutData(grid);\n    text.setText(prop.getValue());\n    return text;\n  }\n else   if (prop.getType().equals(SkeletonProperty.TYPE_BOOLEAN)) {\n    Button chk=new Button(wParent,SWT.CHECK);\n    chk.setText(prop.getLabel());\n    chk.setSelection(\"1\".equals(prop.getValue()));\n    return chk;\n  }\n else {\n    throw new UnsupportedOperationException(\"Unknown skeleton property type.\");\n  }\n}\n', '0.3333333333333333', '5', '4');
INSERT INTO `case_study` VALUES ('532', 'okPressed()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\SkeletonPropertiesDialog.java', 'jsmooth', '21', '145', '80', '-1000', '4', '0.1786', '0.1498', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'protected void okPressed(){\n  Iterator it=controls.iterator();\n  JSmoothApplication app=page.getApplication();\n  Control ctrl=null;\n  String value=null;\n  SkeletonProperty prop=null;\n  while (it.hasNext()) {\n    ctrl=(Control)it.next();\n    prop=(SkeletonProperty)ctrl.getData();\n    if (prop.getType().equals(SkeletonProperty.TYPE_STRING)) {\n      value=((Text)ctrl).getText();\n      prop.setValue(value);\n    }\n else     if (prop.getType().equals(SkeletonProperty.TYPE_TEXTAREA)) {\n      value=((Text)ctrl).getText();\n      prop.setValue(value);\n    }\n else     if (prop.getType().equals(SkeletonProperty.TYPE_BOOLEAN)) {\n      boolean b=((Button)ctrl).getSelection();\n      value=(b == true) ? \"1\" : \"0\";\n      prop.setValue(value);\n    }\n    app.setSkeletonProperty(prop);\n  }\n  super.okPressed();\n}\n', '0.75', '6', '6');
INSERT INTO `case_study` VALUES ('534', 'createPageArea(Composite)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\WelcomePage.java', 'jsmooth', '28', '321', '264', '-1000', '3', '0.1071', '0.0635', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'public Control createPageArea(Composite parent){\n  Display display=parent.getDisplay();\n  Composite top=new Composite(parent,SWT.NONE);\n  GridLayout layout=new GridLayout();\n  layout.marginHeight=0;\n  layout.marginWidth=0;\n  top.setLayout(layout);\n  FormToolkit kit=new FormToolkit(parent.getDisplay());\n  Form form=kit.createForm(top);\n  GridData grid=new GridData(GridData.FILL_BOTH);\n  grid.widthHint=400;\n  form.setLayoutData(grid);\n  form.setText(\"Welcome to JSmooth !\");\n  TableWrapLayout wraplayout=new TableWrapLayout();\n  form.getBody().setLayout(wraplayout);\n  HyperlinkGroup hypergroup=kit.getHyperlinkGroup();\n  hypergroup.setActiveForeground(display.getSystemColor(SWT.COLOR_BLUE));\n  hypergroup.setForeground(display.getSystemColor(SWT.COLOR_BLUE));\n  hypergroup.setHyperlinkUnderlineMode(HyperlinkGroup.UNDERLINE_HOVER);\n  Label label=kit.createSeparator(form.getBody(),SWT.HORIZONTAL);\n  TableWrapData wrapgrid=new TableWrapData(TableWrapData.FILL_GRAB);\n  label.setLayoutData(wrapgrid);\n  FormText text=kit.createFormText(form.getBody(),true);\n  wrapgrid=new TableWrapData(TableWrapData.FILL);\n  text.setLayoutData(wrapgrid);\n  text.setText(JSmoothResources.TEXT_HELP_WELCOME,true,false);\n  return top;\n}\n', '0', '12', '1');
INSERT INTO `case_study` VALUES ('539', 'ResIcon(ByteBuffer)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\res\\ResIcon.java', 'jsmooth', '46', '836', '637', '-1000', '9', '0.054', '0.0631', '0', '1', '1', '1', '0', '1', '1', '1', '0', '0', '/** \n * Creates a new instance based on the data of the Image argument.\n * @param img\n */\npublic ResIcon(Image img) throws Exception {\n  int width=img.getWidth(null);\n  int height=img.getHeight(null);\n  if ((width % 8) != 0)   width+=(7 - (width % 8));\n  if ((height % 8) != 0)   height+=(7 - (height % 8));\n  if (img instanceof BufferedImage) {\n    BufferedImage result=(BufferedImage)img;\n    for (int y=0; y < result.getHeight(); y++) {\n      for (int x=0; x < result.getWidth(); x++) {\n        int rgb=result.getRGB(x,y);\n        if (((rgb >> 24) & 0xFF) > 0) {\n        }\n      }\n    }\n  }\n  int[] pixelbuffer=new int[width * height];\n  PixelGrabber grabber=new PixelGrabber(img,0,0,width,height,pixelbuffer,0,width);\n  try {\n    grabber.grabPixels();\n  }\n catch (  InterruptedException e) {\n    System.err.println(\"interrupted waiting for pixels!\");\n    throw new Exception(\"Can\'t load the image provided\",e);\n  }\n  Hashtable colors=calculateColorCount(pixelbuffer);\n  this.BitsPerPixel=8;\n  Palette=new ResIcon.PaletteElement[1 << BitsPerPixel];\n  for (Enumeration e=colors.keys(); e.hasMoreElements(); ) {\n    Integer pixi=(Integer)e.nextElement();\n    int pix=pixi.intValue();\n    int index=((Integer)colors.get(pixi)).intValue();\n    Palette[index]=new ResIcon.PaletteElement();\n    Palette[index].Blue=pix & 0xFF;\n    Palette[index].Green=(pix >> 8) & 0xff;\n    Palette[index].Red=(pix >> 16) & 0xff;\n  }\n  for (int i=0; i < Palette.length; i++) {\n    if (Palette[i] == null)     Palette[i]=new ResIcon.PaletteElement();\n  }\n  this.Size=40;\n  this.Width=width;\n  this.Height=height * 2;\n  this.Planes=1;\n  this.Compression=0;\n  this.SizeOfBitmap=0;\n  this.HorzResolution=0;\n  this.VertResolution=0;\n  this.ColorsUsed=0;\n  this.ColorsImportant=0;\n  int rowsize=width / 8;\n  if ((rowsize % 4) > 0) {\n    rowsize+=4 - (rowsize % 4);\n  }\n  BitmapXOR=new short[(((int)Height / 2) * (int)Width * (int)BitsPerPixel) / 8];\n  BitmapAND=new short[((int)Height / 2) * rowsize];\n  int bxl=BitmapXOR.length - 1;\n  int bal=BitmapAND.length - 1;\n  for (int i=0; i < pixelbuffer.length; i++) {\n    int col=i % width;\n    int line=i / width;\n    bxl=(width * height) - (((i / width) + 1) * width) + (i % width);\n    bal=(rowsize * height) - ((line + 1) * (rowsize)) + (col / 8);\n    if ((((pixelbuffer[i] >> 24) & 0xFF) == 0)) {\n      BitmapAND[bal]|=1 << (7 - (i % 8));\n      BitmapXOR[bxl]=0xFF;\n    }\n else {\n      int pixel=pixelbuffer[i] & 0x00FFFFFF;\n      Integer icol=(Integer)colors.get(new Integer(pixel));\n      if (icol != null) {\n        int palindex=icol.intValue();\n        BitmapXOR[bxl]=(short)palindex;\n      }\n    }\n  }\n}\n', '1', '39', '15');
INSERT INTO `case_study` VALUES ('542', 'calculateColorCount(int[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\res\\ResIcon.java', 'jsmooth', '14', '75', '59', '-1000', '5', '0.1429', '0.0759', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'private Hashtable calculateColorCount(int[] pixels){\n  Hashtable result=new Hashtable();\n  int colorindex=0;\n  for (int i=0; i < pixels.length; i++) {\n    int pix=pixels[i];\n    if (((pix >> 24) & 0xFF) > 0) {\n      pix&=0x00FFFFFF;\n      Integer pixi=new Integer(pix);\n      Object o=result.get(pixi);\n      if (o == null) {\n        result.put(pixi,new Integer(colorindex++));\n      }\n    }\n  }\n  return result;\n}\n', '0', '7', '4');
INSERT INTO `case_study` VALUES ('544', 'toString()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\res\\ResIcon.java', 'jsmooth', '25', '160', '20', '-1000', '7', '0.095', '0.1785', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public String toString(){\n  StringBuffer out=new StringBuffer();\n  out.append(\"Size: \" + Size);\n  out.append(\"\\nWidth: \" + Width);\n  out.append(\"\\nHeight: \" + Height);\n  out.append(\"\\nPlanes: \" + Planes);\n  out.append(\"\\nBitsPerPixel: \" + BitsPerPixel);\n  out.append(\"\\nCompression: \" + Compression);\n  out.append(\"\\nSizeOfBitmap: \" + SizeOfBitmap);\n  out.append(\"\\nHorzResolution: \" + HorzResolution);\n  out.append(\"\\nVertResolution: \" + VertResolution);\n  out.append(\"\\nColorsUsed: \" + ColorsUsed);\n  out.append(\"\\nColorsImportant: \" + ColorsImportant);\n  out.append(\"\\nBitmapXOR[\" + BitmapXOR.length + \"]={\");\n  for (int i=0; i < BitmapXOR.length; i++) {\n    out.append((byte)BitmapXOR[i]);\n  }\n  out.append(\"}\\nBitmapAnd[\" + BitmapAND.length + \"]={\");\n  for (int i=0; i < BitmapAND.length; i++) {\n    out.append((byte)BitmapAND[i]);\n  }\n  return out.toString();\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('548', 'toString()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\res\\ResIconDir.java', 'jsmooth', '12', '21', '0', '-1000', '3', '0.1667', '0.2821', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public String toString(){\n  StringBuffer out=new StringBuffer();\n  out.append(\"m_idReserved: \" + m_idReserved + \"\\n\");\n  out.append(\"m_idType: \" + m_idType + \"\\n\");\n  out.append(\"m_idCount: \" + m_idCount + \"\\n\");\n  out.append(\"entries: ---- \\n\");\n  for (int i=0; i < m_entries.length; i++) {\n    out.append(m_entries[i].toString());\n  }\n  return out.toString();\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('549', 'ResIconDir(ByteBuffer)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\pe\\res\\ResIconDir.java', 'jsmooth', '8', '17', '6', '-1000', '3', '0.25', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates a new instance of ResIconDir \n */\npublic ResIconDir(ByteBuffer buf){\n  m_idReserved=buf.getShort();\n  m_idType=buf.getShort();\n  m_idCount=buf.getShort();\n  m_entries=new ResIconDir.IconDirEntry[m_idCount];\n  for (int i=0; i < m_idCount; i++) {\n    m_entries[i]=new IconDirEntry(buf);\n  }\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('558', 'ClassPath()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\ClassPath.java', 'jsmooth', '12', '52', '38', '-1000', '4', '0.1786', '0.1154', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public ClassPath(){\n  m_jarLocFileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n  m_jarLocFileChooser.setMultiSelectionEnabled(true);\n  GenericFileFilter filter=new GenericFileFilter(\"Zip, Jar, or directories\");\n  filter.addSuffix(\"jar\");\n  filter.addSuffix(\"zip\");\n  m_jarLocFileChooser.addChoosableFileFilter(filter);\n  m_fileeditor.setFileChooser(m_jarLocFileChooser);\n  m_list.setEditor(m_fileeditor);\n  setLayout(new BorderLayout());\n  add(BorderLayout.CENTER,m_list);\n}\n', '0.75', '1', '1');
INSERT INTO `case_study` VALUES ('559', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\ClassPath.java', 'jsmooth', '6', '12', '9', '-1000', '3', '0.25', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void dataChanged(){\n  if (getBaseDir() != null) {\n    m_jarLocFileChooser.setCurrentDirectory(getBaseDir());\n  }\n  String[] cp=m_model.getClassPath();\n  if (cp == null)   m_list.setData(new Object[0]);\n else   m_list.setData((Object[])cp);\n}\n', '1', '1', '3');
INSERT INTO `case_study` VALUES ('560', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\ClassPath.java', 'jsmooth', '7', '15', '9', '-1000', '3', '0.2857', '0.1583', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public void updateModel(){\n  Object[] cpels=m_list.getData();\n  String[] cp=new String[cpels.length];\n  for (int i=0; i < cp.length; i++) {\n    cp[i]=cpels[i].toString();\n  }\n  m_model.setClassPath(cp);\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('564', 'CurrentDirectory()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\CurrentDirectory.java', 'jsmooth', '9', '23', '10', '-1000', '2', '0.2407', '0.1435', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public CurrentDirectory(){\n  setLayout(new BorderLayout());\n  add(BorderLayout.CENTER,m_selector);\n  JPanel jpc=new JPanel();\n  jpc.setLayout(new BorderLayout());\n  jpc.add(BorderLayout.WEST,m_forceExePath);\n  jpc.add(BorderLayout.CENTER,new HelpButton(Main.local(\"CURRENTDIR_FORCEEXEPATH_HELP\")));\n  add(BorderLayout.SOUTH,jpc);\n  m_forceExePath.setAction(new AbstractAction(Main.local(\"CURRENTDIR_FORCEEXEPATH\")){\n    public void actionPerformed(    java.awt.event.ActionEvent e){\n      if (m_forceExePath.isSelected())       m_selector.setEnabled(false);\n else       m_selector.setEnabled(true);\n    }\n  }\n);\n  m_selector.setFileChooser(new JDirectoryChooser());\n}\n', '0.75', '2', '1');
INSERT INTO `case_study` VALUES ('566', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\CurrentDirectory.java', 'jsmooth', '14', '74', '57', '-1000', '6', '0.2143', '0.1451', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void dataChanged(){\n  m_selector.setBaseDir(getBaseDir());\n  String dir=m_model.getCurrentDirectory();\n  if (\"${EXECUTABLEPATH}\".equals(dir)) {\n    m_selector.setEnabled(false);\n    m_forceExePath.setSelected(true);\n  }\n else {\n    m_forceExePath.setSelected(false);\n    m_selector.setEnabled(true);\n    if ((dir != null) && (dir.trim().length() > 0)) {\n      m_selector.setFile(new java.io.File(dir));\n    }\n else {\n      m_selector.setFile(null);\n    }\n  }\n}\n', '0.6', '1', '4');
INSERT INTO `case_study` VALUES ('573', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\EmbeddedJar.java', 'jsmooth', '7', '12', '3', '-1000', '3', '0.3571', '0.1875', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public void dataChanged(){\n  m_checker.setSelected(m_model.getEmbeddedJar());\n  m_selector.setBaseDir(getBaseDir());\n  if (m_model.getJarLocation() != null)   m_selector.setFile(new File(m_model.getJarLocation()));\n else   m_selector.setFile(null);\n  if (m_checker.isSelected())   m_selector.setEnabled(true);\n else   m_selector.setEnabled(false);\n}\n', '0.5', '0', '3');
INSERT INTO `case_study` VALUES ('577', 'ExecutableIcon()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\ExecutableIcon.java', 'jsmooth', '6', '13', '11', '-1000', '3', '0.2778', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public ExecutableIcon(){\n  setLayout(new BorderLayout());\n  add(BorderLayout.CENTER,m_selector);\n  add(BorderLayout.SOUTH,m_iconDisplay);\n  m_iconDisplay.setHorizontalAlignment(JLabel.CENTER);\n  m_selector.addListener(new FileSelectionTextField.FileSelected(){\n    public void fileSelected(    String filename){\n      setIconLocation(new File(filename));\n    }\n  }\n);\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('579', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\ExecutableIcon.java', 'jsmooth', '7', '17', '13', '-1000', '3', '0.3571', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public void dataChanged(){\n  if (getBaseDir() != null)   m_selector.setBaseDir(getBaseDir());\n  if (m_model.getIconLocation() != null) {\n    m_selector.setFile(getAbsolutePath(new java.io.File(m_model.getIconLocation())));\n    setIconLocation(getAbsolutePath(new java.io.File(m_model.getIconLocation())));\n  }\n else {\n    m_selector.setFile(null);\n    setIconLocation(new File(\"\"));\n  }\n}\n', '0.6', '0', '3');
INSERT INTO `case_study` VALUES ('589', 'InitialMemoryHeap()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\InitialMemoryHeap.java', 'jsmooth', '13', '63', '48', '-1000', '4', '0.1868', '0.119', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public InitialMemoryHeap(){\n  setLayout(new BorderLayout());\n  add(BorderLayout.CENTER,m_args);\n  m_args.setDocument(new RegExDocument(\"[0-9]+\"));\n  m_args.setHorizontalAlignment(JTextField.RIGHT);\n  Vector u=new Vector();\n  u.add(Main.local(\"UNIT_MB\"));\n  u.add(Main.local(\"UNIT_KB\"));\n  u.add(Main.local(\"UNIT_BYTE\"));\n  DefaultComboBoxModel mod=new DefaultComboBoxModel(u);\n  m_units.setModel(mod);\n  add(BorderLayout.EAST,m_units);\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('591', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\InitialMemoryHeap.java', 'jsmooth', '11', '42', '29', '-1000', '6', '0.197', '0.1362', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void updateModel(){\n  int value;\n  try {\n    value=Integer.parseInt(m_args.getText());\n  }\n catch (  Exception exc) {\n    m_model.setInitialMemoryHeap(-1);\n    return;\n  }\nswitch (m_units.getSelectedIndex()) {\ncase 0:\n    if (value > 2047)     value=2047;\n  m_model.setInitialMemoryHeap(value * 1024 * 1024);\nbreak;\ncase 1:\nm_model.setInitialMemoryHeap(value * 1024);\nbreak;\ncase 2:\nm_model.setInitialMemoryHeap(value);\nbreak;\n}\n}\n', '1', '2', '6');
INSERT INTO `case_study` VALUES ('600', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JavaProperties.java', 'jsmooth', '7', '15', '9', '-1000', '3', '0.2857', '0.1167', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public void updateModel(){\n  Object[] po=m_props.getData();\n  JavaPropertyPair[] props=new JavaPropertyPair[po.length];\n  for (int i=0; i < po.length; i++) {\n    props[i]=(JavaPropertyPair)po[i];\n  }\n  m_model.setJavaProperties(props);\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('604', 'JSmoothInfo()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JSmoothInfo.java', 'jsmooth', '7', '19', '17', '-1000', '5', '0.2381', '0.0556', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public JSmoothInfo(){\n  setLayout(new java.awt.BorderLayout());\n  add(java.awt.BorderLayout.CENTER,m_skeldesc);\n  setBackground(java.awt.Color.red);\n  String text=Main.MAIN.local(\"JSMOOTH_WELCOME_SCREEN\");\n  m_skeldesc.setText(text);\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('613', 'readFile(java.io.File)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JSmoothInfo.java', 'jsmooth', '12', '55', '44', '-1000', '4', '0.1944', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public String readFile(java.io.File f){\n  StringBuffer buffer=new StringBuffer();\n  try {\n    FileInputStream fis=new FileInputStream(f);\n    InputStreamReader isr=new InputStreamReader(fis);\n    int c;\n    while ((c=isr.read()) != -1)     buffer.append((char)c);\n    isr.close();\n    fis.close();\n  }\n catch (  Exception ex) {\n    ex.printStackTrace();\n  }\n  return buffer.toString();\n}\n', '0', '6', '3');
INSERT INTO `case_study` VALUES ('614', 'JVMBundle()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JVMBundle.java', 'jsmooth', '6', '13', '11', '-1000', '3', '0.2222', '0.0556', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public JVMBundle(){\n  setLayout(new PanelLayout());\n  add(m_checker);\n  add(m_selector);\n  m_selector.setFileChooser(new JDirectoryChooser());\n  m_checker.setAction(new AbstractAction(Main.local(\"JVMBUNDLE_CHECKBOX\")){\n    public void actionPerformed(    java.awt.event.ActionEvent e){\n      m_selector.setEnabled(m_checker.isSelected());\n    }\n  }\n);\n  if (m_model != null)   dataChanged();\n}\n', '0.75', '1', '2');
INSERT INTO `case_study` VALUES ('616', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JVMBundle.java', 'jsmooth', '13', '59', '40', '-1000', '5', '0.2308', '0.1978', '0', '0', '0', '0', '0', '1', '0', '0', '1', '1', 'public void dataChanged(){\n  String bundle=m_model.getBundledJVMPath();\n  if (bundle == null) {\n    m_checker.setSelected(false);\n    m_selector.setBaseDir(getBaseDir());\n    m_selector.setFile(null);\n    m_selector.setEnabled(false);\n  }\n else {\n    m_checker.setSelected(true);\n    m_selector.setBaseDir(getBaseDir());\n    m_selector.setFile(new java.io.File(bundle));\n    m_selector.setEnabled(true);\n  }\n}\n', '0.6', '1', '2');
INSERT INTO `case_study` VALUES ('617', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JVMBundle.java', 'jsmooth', '7', '14', '7', '-1000', '3', '0.3571', '0.1417', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void updateModel(){\n  if (m_checker.isSelected()) {\n    File f=m_selector.getFile();\n    if (f != null)     m_model.setBundledJVMPath(f.toString());\n else     m_model.setBundledJVMPath(\"\");\n  }\n else {\n    m_model.setBundledJVMPath(null);\n  }\n}\n', '1', '1', '3');
INSERT INTO `case_study` VALUES ('621', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JVMSearchSequence.java', 'jsmooth', '9', '25', '14', '-1000', '2', '0.2381', '0.1028', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void dataChanged(){\n  if (m_model.getJVMSearchPath() == null) {\n    m_vmSearch.setData(JVMSearchElement.Elements);\n  }\n else {\n    Vector v=new Vector();\n    String[] els=m_model.getJVMSearchPath();\n    for (int i=0; i < els.length; i++) {\n      JVMSearchElement el=JVMSearchElement.getStandardElement(els[i]);\n      if (el != null)       v.add(el);\n    }\n    m_vmSearch.setData(v.toArray());\n  }\n}\n', '1', '4', '4');
INSERT INTO `case_study` VALUES ('622', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\JVMSearchSequence.java', 'jsmooth', '7', '15', '9', '-1000', '3', '0.2857', '0.1583', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public void updateModel(){\n  String[] ids=new String[m_vmSearch.dataSize()];\n  Object[] data=m_vmSearch.getData();\n  for (int i=0; i < ids.length; i++) {\n    ids[i]=((JVMSearchElement)data[i]).getId();\n  }\n  m_model.setJVMSearchPath(ids);\n}\n', '0.75', '3', '2');
INSERT INTO `case_study` VALUES ('632', 'displayChooser()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\MainClass.java', 'jsmooth', '25', '254', '208', '-1000', '5', '0.104', '0.0741', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'protected void displayChooser(){\n  ClassChooserDialog chooser=new ClassChooserDialog(Main.MAIN,true);\n  Vector jars=new Vector();\n  if (m_model.getEmbeddedJar() == true) {\n    String ejar=m_model.getJarLocation();\n    if (ejar != null) {\n      File f=getAbsolutePath(new File(ejar));\n      jars.add(f);\n    }\n  }\n  String[] cp=m_model.getClassPath();\n  if (cp != null) {\n    for (int i=0; i < cp.length; i++) {\n      jars.add(getAbsolutePath(new File(cp[i])));\n    }\n  }\n  chooser.clear();\n  for (Iterator i=jars.iterator(); i.hasNext(); ) {\n    File f=(File)i.next();\n    try {\n      chooser.addJar(new JarFile(f));\n    }\n catch (    Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n  chooser.setClassName(m_classname.getText());\n  chooser.setVisible(true);\n  if (chooser.validated()) {\n    String classname=chooser.getClassName();\n    m_classname.setText(classname);\n  }\n}\n', '0.3', '10', '8');
INSERT INTO `case_study` VALUES ('633', 'MaxMemoryHeap()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\MaxMemoryHeap.java', 'jsmooth', '13', '63', '48', '-1000', '4', '0.1868', '0.119', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public MaxMemoryHeap(){\n  setLayout(new BorderLayout());\n  add(BorderLayout.CENTER,m_args);\n  m_args.setDocument(new RegExDocument(\"[0-9]+\"));\n  m_args.setHorizontalAlignment(JTextField.RIGHT);\n  Vector u=new Vector();\n  u.add(Main.local(\"UNIT_MB\"));\n  u.add(Main.local(\"UNIT_KB\"));\n  u.add(Main.local(\"UNIT_BYTE\"));\n  DefaultComboBoxModel mod=new DefaultComboBoxModel(u);\n  m_units.setModel(mod);\n  add(BorderLayout.EAST,m_units);\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('635', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\MaxMemoryHeap.java', 'jsmooth', '10', '32', '19', '-1000', '5', '0.2167', '0.161', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void updateModel(){\n  int value;\n  try {\n    value=Integer.parseInt(m_args.getText());\n  }\n catch (  Exception exc) {\n    m_model.setInitialMemoryHeap(-1);\n    return;\n  }\nswitch (m_units.getSelectedIndex()) {\ncase 0:\n    if (value > 2047)     value=2047;\n  m_model.setMaximumMemoryHeap(value * 1024 * 1024);\nbreak;\ncase 1:\nm_model.setMaximumMemoryHeap(value * 1024);\nbreak;\ncase 2:\nm_model.setMaximumMemoryHeap(value);\nbreak;\n}\n}\n', '0.5', '2', '6');
INSERT INTO `case_study` VALUES ('659', 'SkeletonProperties()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\SkeletonProperties.java', 'jsmooth', '6', '12', '9', '-1000', '4', '0.3333', '0.2143', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public SkeletonProperties(){\n  setLayout(new BorderLayout());\n  add(BorderLayout.CENTER,m_skelprops);\n  m_skelprops.setDescriptionVisible(true);\n  m_skelprops.setToolBarVisible(false);\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('662', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\SkeletonProperties.java', 'jsmooth', '9', '28', '20', '-1000', '4', '0.3889', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void dataChanged(){\n  System.out.println(\"SkeletonProperties: data changed, \" + m_model.getSkeletonName());\n  if (m_model.getSkeletonName() == null) {\n    m_currentSkelName=null;\n    setProperties();\n    return;\n  }\n  if (!m_model.getSkeletonName().equalsIgnoreCase(m_currentSkelName)) {\n    m_currentSkelName=m_model.getSkeletonName();\n    setProperties();\n  }\n}\n', '1', '0', '3');
INSERT INTO `case_study` VALUES ('663', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\SkeletonProperties.java', 'jsmooth', '10', '43', '41', '-1000', '2', '0.1667', '0.0571', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void updateModel(){\n  if (m_skel != null) {\n    SkeletonProperty[] sp=m_skel.getSkeletonProperties();\n    JSmoothModelBean.Property[] props=new JSmoothModelBean.Property[sp.length];\n    for (int i=0; i < sp.length; i++) {\n      props[i]=new JSmoothModelBean.Property();\n      props[i].setKey(sp[i].getIdName());\n      props[i].setValue(sp[i].getValue());\n      System.out.println(props[i]);\n    }\n    m_model.setSkeletonProperties(props);\n  }\n}\n', '0.5714285714285714', '3', '3');
INSERT INTO `case_study` VALUES ('669', 'rebuildProperties()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\SkeletonPropertiesEditor.java', 'jsmooth', '33', '417', '306', '-1000', '8', '0.0985', '0.1106', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void rebuildProperties(){\n  m_skel=null;\n  if (m_currentSkelName != null)   m_skel=Main.SKELETONS.getSkeleton(m_currentSkelName);\n  SkeletonProperty[] sprops=null;\n  if (m_skel != null)   sprops=m_skel.getSkeletonProperties();\n else   sprops=new SkeletonProperty[0];\n  m_panel.removeAll();\n  m_panel.setLayout(new RiverLayout());\n  m_editors.clear();\n  for (int i=0; i < sprops.length; i++) {\n    SkelPropEditor spe=null;\n    if (sprops[i].getType().equalsIgnoreCase(SkeletonProperty.TYPE_STRING)) {\n      spe=new StringEditor();\n    }\n else     if (sprops[i].getType().equalsIgnoreCase(SkeletonProperty.TYPE_TEXTAREA)) {\n      spe=new TextAreaEditor();\n    }\n else     if (sprops[i].getType().equalsIgnoreCase(SkeletonProperty.TYPE_BOOLEAN)) {\n      spe=new CheckBoxEditor();\n    }\n else     if (sprops[i].getType().equalsIgnoreCase(SkeletonProperty.TYPE_AUTODOWNLOADURL)) {\n      spe=new AutoDownloadURLEditor();\n    }\n    if (spe == null) {\n      spe=new StringEditor();\n    }\n    m_editors.add(spe);\n    spe.bind(sprops[i]);\n    if (spe.labelAtLeft()) {\n      m_panel.add(\"br\",new JLabel(Main.local(sprops[i].getLabel())));\n      m_panel.add(\"tab\",new HelpButton(Main.local(sprops[i].getDescription())));\n      m_panel.add(\"tab hfill\",spe.getGUI());\n    }\n else {\n      m_panel.add(\"br right\",spe.getGUI());\n      m_panel.add(\"tab\",new HelpButton(Main.local(sprops[i].getDescription())));\n      m_panel.add(\"tab hfill\",new JLabel(Main.local(sprops[i].getLabel())));\n    }\n  }\n  revalidate();\n  m_panel.revalidate();\n  doLayout();\n  m_panel.doLayout();\n}\n', '0.7142857142857143', '3', '10');
INSERT INTO `case_study` VALUES ('670', 'dataChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\SkeletonPropertiesEditor.java', 'jsmooth', '22', '200', '169', '-1000', '5', '0.1136', '0.0586', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void dataChanged(){\n  if (m_model.getSkeletonName() == null) {\n    m_currentSkelName=null;\n    rebuildProperties();\n  }\n  if ((m_model != null) && (m_model.getSkeletonName() != null) && (!m_model.getSkeletonName().equalsIgnoreCase(m_currentSkelName))) {\n    m_currentSkelName=m_model.getSkeletonName();\n    rebuildProperties();\n  }\n  JSmoothModelBean.Property[] jsprop=m_model.getSkeletonProperties();\n  if (jsprop != null) {\n    for (Enumeration e=m_editors.elements(); e.hasMoreElements(); ) {\n      SkelPropEditor spe=(SkelPropEditor)e.nextElement();\n      JSmoothModelBean.Property p=getPropertyInstance(spe.getIdName());\n      if (p != null)       spe.valueChanged(p.getValue());\n    }\n  }\n else {\n    SkeletonBean skel=Main.SKELETONS.getSkeleton(m_model.getSkeletonName());\n    SkeletonProperty[] sprops=null;\n    if (skel != null)     sprops=skel.getSkeletonProperties();\n    if (sprops != null) {\n      for (Enumeration e=m_editors.elements(); e.hasMoreElements(); ) {\n        SkelPropEditor spe=(SkelPropEditor)e.nextElement();\n        for (int i=0; i < sprops.length; i++) {\n          if (sprops[i].getIdName().equals(spe.getIdName()))           spe.valueChanged(sprops[i].getValue());\n        }\n      }\n    }\n  }\n}\n', '0.6666666666666666', '9', '13');
INSERT INTO `case_study` VALUES ('672', 'updateModel()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\editors\\SkeletonPropertiesEditor.java', 'jsmooth', '11', '48', '41', '-1000', '3', '0.1667', '0.0988', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void updateModel(){\n  if (m_skel != null) {\n    JSmoothModelBean.Property[] props=new JSmoothModelBean.Property[m_editors.size()];\n    int index=0;\n    for (Enumeration e=m_editors.elements(); e.hasMoreElements(); ) {\n      SkelPropEditor spe=(SkelPropEditor)e.nextElement();\n      props[index]=new JSmoothModelBean.Property();\n      props[index].setKey(spe.getIdName());\n      props[index].setValue(spe.get());\n      index++;\n    }\n    m_model.setSkeletonProperties(props);\n  }\n}\n', '0.5', '4', '3');
INSERT INTO `case_study` VALUES ('701', 'StringEditor()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\skeleditors\\StringEditor.java', 'jsmooth', '10', '43', '41', '-1000', '8', '0.1667', '0.0347', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public StringEditor(){\n  m_comp=new JTextField();\n  PlainDocument doc=new PlainDocument();\n  m_comp.setDocument(doc);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('706', 'TextAreaEditor()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\skeleditors\\TextAreaEditor.java', 'jsmooth', '6', '11', '7', '-1000', '3', '0.2667', '0.0952', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public TextAreaEditor(){\n  m_comp=new JTextArea(5,40);\n  PlainDocument doc=new PlainDocument();\n  m_comp.setDocument(doc);\n  m_sp=new JScrollPane(m_comp);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('716', 'addJar(JarFile)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\ClassChooserDialog.java', 'jsmooth', '10', '40', '35', '-1000', '3', '0.18', '0.0913', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void addJar(JarFile jf){\n  for (Enumeration e=jf.entries(); e.hasMoreElements(); ) {\n    JarEntry entry=(JarEntry)e.nextElement();\n    String[] res=entry.toString().split(\"/\");\n    if ((res.length > 0) && (res[res.length - 1].toLowerCase().endsWith(\".class\"))) {\n      String rs=res[res.length - 1];\n      rs=rs.substring(0,rs.length() - 6);\n      res[res.length - 1]=rs;\n      m_root.add(res);\n    }\n  }\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('720', 'initComponents()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\ClassChooserDialog.java', 'jsmooth', '12', '66', '66', '-1000', '4', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '/** \n * This method is called from within the constructor to\n * initialize the form.\n * WARNING: Do NOT modify this code. The content of this method is\n * always regenerated by the Form Editor.\n */\nprivate void initComponents(){\n  jPanel1=new javax.swing.JPanel();\n  jLabel1=new javax.swing.JLabel();\n  jPanel3=new javax.swing.JPanel();\n  jScrollPane1=new javax.swing.JScrollPane();\n  m_tree=new javax.swing.JTree();\n  jPanel2=new javax.swing.JPanel();\n  m_buttonSelect=new javax.swing.JButton();\n  jSeparator1=new javax.swing.JSeparator();\n  m_buttonCancel=new javax.swing.JButton();\n  setTitle(\"Class Selector\");\n  addWindowListener(new java.awt.event.WindowAdapter(){\n    public void windowClosing(    java.awt.event.WindowEvent evt){\n      closeDialog(evt);\n    }\n  }\n);\n  jPanel1.setLayout(new java.awt.BorderLayout());\n  jPanel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10,10,10,10)));\n  jPanel1.setFocusable(false);\n  jLabel1.setText(\"Select a class...\");\n  jLabel1.setFocusable(false);\n  jPanel1.add(jLabel1,java.awt.BorderLayout.NORTH);\n  jPanel3.setLayout(new java.awt.BorderLayout());\n  jPanel3.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1,1,1,1)));\n  jPanel3.setFocusable(false);\n  jScrollPane1.setFocusable(false);\n  jScrollPane1.setViewportView(m_tree);\n  jPanel3.add(jScrollPane1,java.awt.BorderLayout.CENTER);\n  jPanel1.add(jPanel3,java.awt.BorderLayout.CENTER);\n  getContentPane().add(jPanel1,java.awt.BorderLayout.CENTER);\n  jPanel2.setFocusable(false);\n  m_buttonSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/stock_calc-accept-16.png\")));\n  m_buttonSelect.setText(\"Select\");\n  m_buttonSelect.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonSelectActionPerformed(evt);\n    }\n  }\n);\n  jPanel2.add(m_buttonSelect);\n  jPanel2.add(jSeparator1);\n  m_buttonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/stock_calc-cancel-16.png\")));\n  m_buttonCancel.setText(\"Cancel\");\n  m_buttonCancel.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonCancelActionPerformed(evt);\n    }\n  }\n);\n  jPanel2.add(m_buttonCancel);\n  getContentPane().add(jPanel2,java.awt.BorderLayout.SOUTH);\n  java.awt.Dimension screenSize=java.awt.Toolkit.getDefaultToolkit().getScreenSize();\n  setBounds((screenSize.width - 371) / 2,(screenSize.height - 260) / 2,371,260);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('728', 'validated()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\ClassChooserDialog.java', 'jsmooth', '12', '66', '66', '-1000', '4', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'public boolean validated(){\n  return m_valid;\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('730', 'run()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\CommandRunner.java', 'jsmooth', '7', '18', '15', '-1000', '4', '0.25', '0.0917', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'static public void run(String[] cmd,File curdir) throws Exception {\n  Process proc=Runtime.getRuntime().exec(cmd,null,curdir);\n  InputStream stdin=proc.getInputStream();\n  InputStream stderr=proc.getErrorStream();\n  new Thread(new CmdStdReader(stdin)).start();\n  new Thread(new CmdStdReader(stderr)).start();\n  s_runningprocs.add(proc);\n}\n', '1', '5', '1');
INSERT INTO `case_study` VALUES ('734', 'initComponents()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\CompilationDialog.java', 'jsmooth', '11', '54', '53', '-1000', '6', '0.1039', '0.0204', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * This method is called from within the constructor to\n * initialize the form.\n * WARNING: Do NOT modify this code. The content of this method is\n * always regenerated by the Form Editor.\n */\nprivate void initComponents(){\n  java.awt.GridBagConstraints gridBagConstraints;\n  jLabel1=new javax.swing.JLabel();\n  m_progress=new javax.swing.JProgressBar();\n  jScrollPane1=new javax.swing.JScrollPane();\n  m_state=new javax.swing.JTextArea(10,60);\n  m_state.setLineWrap(true);\n  m_cancelbutton=new javax.swing.JButton();\n  getContentPane().setLayout(new java.awt.GridBagLayout());\n  addWindowListener(new java.awt.event.WindowAdapter(){\n    public void windowClosing(    java.awt.event.WindowEvent evt){\n      closeDialog(evt);\n    }\n  }\n);\n  jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n  jLabel1.setText(\"Progress\");\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=1.0;\n  getContentPane().add(jLabel1,gridBagConstraints);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;\n  gridBagConstraints.insets=new java.awt.Insets(5,20,5,20);\n  getContentPane().add(m_progress,gridBagConstraints);\n  m_state.setEditable(false);\n  jScrollPane1.setViewportView(m_state);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=1.0;\n  gridBagConstraints.weighty=1.0;\n  gridBagConstraints.insets=new java.awt.Insets(5,10,5,10);\n  getContentPane().add(jScrollPane1,gridBagConstraints);\n  m_cancelbutton.setText(\"Cancel\");\n  m_cancelbutton.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      cancelbuttonActionPerformed(evt);\n    }\n  }\n);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTH;\n  gridBagConstraints.insets=new java.awt.Insets(10,10,10,10);\n  gridBagConstraints.weighty=0.0001;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.NONE;\n  getContentPane().add(m_cancelbutton,gridBagConstraints);\n  java.awt.Dimension screenSize=java.awt.Toolkit.getDefaultToolkit().getScreenSize();\n  setBounds((screenSize.width - 319) / 2,(screenSize.height - 158) / 2,319,158);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('740', 'compile(Runnable)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\CompilationDialog.java', 'jsmooth', '6', '14', '13', '-1000', '5', '0.25', '0.0556', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public void compile(Runnable r){\n  Thread t=new Thread(r);\n  t.start();\n  setModal(true);\n  setVisible(true);\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('742', 'complete()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\CompilationDialog.java', 'jsmooth', '6', '14', '13', '-1000', '5', '0.2222', '0.0714', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public void complete(){\n  if (!m_canceled) {\n    m_result=true;\n    setNewState(100,\"Done\");\n    m_cancelbutton.setText(\"Done\");\n    m_cancelbutton.grabFocus();\n  }\n}\n', '0', '0', '2');
INSERT INTO `case_study` VALUES ('743', 'failed()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\CompilationDialog.java', 'jsmooth', '11', '37', '19', '-1000', '4', '0.2121', '0.2348', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public void failed(){\n  if (!m_canceled) {\n    m_result=false;\n    StringBuffer buf=new StringBuffer();\n    buf.append(\"Compilation failed!\\n\");\n    Vector v=m_compiler.getErrors();\n    for (int i=0; i < v.size(); i++) {\n      buf.append(\"\\n- \");\n      buf.append(v.get(i).toString());\n    }\n    buf.append(\"\\n\");\n    setNewState(100,buf.toString());\n  }\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('751', 'createNewItem(SortedEditableList)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\EditableListFileEditor.java', 'jsmooth', '9', '23', '10', '-1000', '2', '0.254', '0.1306', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public Object createNewItem(SortedEditableList selist){\n  if (m_fileChooser.showOpenDialog(selist) == JFileChooser.APPROVE_OPTION) {\n    File[] files=m_fileChooser.getSelectedFiles();\n    for (int i=0; i < files.length; i++) {\n      File f=files[i];\n      if (m_rootDir != null) {\n        f=net.charabia.jsmoothgen.application.JSmoothModelPersistency.makePathRelativeIfPossible(m_rootDir,f);\n        files[i]=f;\n      }\n    }\n    return files;\n  }\n  return null;\n}\n', '1', '4', '4');
INSERT INTO `case_study` VALUES ('752', 'editItem(SortedEditableList,Object)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\EditableListFileEditor.java', 'jsmooth', '6', '8', '1', '-1000', '2', '0.3333', '0.1556', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public Object editItem(SortedEditableList selist,Object item){\n  if (!(item instanceof File))   m_fileChooser.setSelectedFile(new File(item.toString()));\n else   m_fileChooser.setSelectedFile((File)item);\n  if (m_fileChooser.showOpenDialog(selist) == JFileChooser.APPROVE_OPTION) {\n    File f=m_fileChooser.getSelectedFile();\n    if (m_rootDir != null) {\n      f=net.charabia.jsmoothgen.application.JSmoothModelPersistency.makePathRelativeIfPossible(m_rootDir,f);\n    }\n    return f;\n  }\n  return null;\n}\n', '1', '3', '4');
INSERT INTO `case_study` VALUES ('755', 'FileSelectionTextField()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\FileSelectionTextField.java', 'jsmooth', '8', '24', '20', '-1000', '3', '0.25', '0.1481', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public FileSelectionTextField(){\n  m_fileChooser=new javax.swing.JFileChooser();\n  m_filename=new javax.swing.JTextField();\n  m_buttonFileSelection=new javax.swing.JButton();\n  setLayout(new java.awt.BorderLayout());\n  add(m_filename,java.awt.BorderLayout.CENTER);\n  m_buttonFileSelection.setText(\"...\");\n  m_buttonFileSelection.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonFileSelectionActionPerformed(evt);\n    }\n  }\n);\n  m_filename.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      if (m_filename.getText().length() > 0)       setFile(new java.io.File(m_filename.getText()));\n else       setFile(null);\n      notifyListeners(m_filename.getText());\n    }\n  }\n);\n  m_filename.addFocusListener(new java.awt.event.FocusAdapter(){\n    public void focusLost(    java.awt.event.FocusEvent e){\n      if (m_filename.getText().length() > 0)       setFile(new java.io.File(m_filename.getText()));\n else       setFile(null);\n      notifyListeners(m_filename.getText());\n    }\n  }\n);\n  add(m_buttonFileSelection,java.awt.BorderLayout.EAST);\n}\n', '0', '3', '1');
INSERT INTO `case_study` VALUES ('762', 'buttonFileSelectionActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\FileSelectionTextField.java', 'jsmooth', '19', '136', '101', '-1000', '5', '0.1526', '0.0786', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'private void buttonFileSelectionActionPerformed(java.awt.event.ActionEvent evt){\n  String fname=m_filename.getText().trim();\n  java.io.File cur=new java.io.File(fname);\n  if ((cur.isAbsolute() == false) && (m_basedir != null)) {\n    cur=new File(m_basedir,cur.toString()).getAbsoluteFile();\n    try {\n      cur=cur.getCanonicalFile();\n    }\n catch (    IOException iox) {\n      iox.printStackTrace();\n    }\n  }\n  m_fileChooser.setSelectedFile(cur);\n  if (m_fileChooser.showDialog(this,\"Select\") == JFileChooser.APPROVE_OPTION) {\n    java.io.File f=m_fileChooser.getSelectedFile();\n    if (m_basedir != null) {\n      File rel=net.charabia.jsmoothgen.application.JSmoothModelPersistency.makePathRelativeIfPossible(m_basedir,f);\n      m_filename.setText(rel.toString());\n      notifyListeners(rel.toString());\n    }\n else {\n      m_filename.setText(f.getAbsolutePath());\n      notifyListeners(f.getAbsolutePath());\n    }\n  }\n}\n', '1', '6', '6');
INSERT INTO `case_study` VALUES ('777', 'HelpButton(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\HelpButton.java', 'jsmooth', '12', '46', '26', '-1000', '4', '0.1944', '0.1744', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public HelpButton(String helptext){\n  setText(\"\");\n  setIcon(ICON_HELP);\n  m_helpWindow.getContentPane().setBackground(Color.yellow);\n  m_helpWindow.getContentPane().setLayout(new BorderLayout());\n  JEditorPane jep=new JEditorPane(\"text/html\",wrap(helptext));\n  jep.setBackground(Color.yellow);\n  jep.setEditable(false);\n  m_helpWindow.getContentPane().add(jep,BorderLayout.CENTER);\n  jep.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.LOWERED));\n  m_helpWindow.pack();\n  m_helpWindow.addMouseListener(new MouseAdapter(){\n    public void mouseEntered(    MouseEvent e){\n      HelpButton.this.m_helpWindow.dispose();\n    }\n    public void mouseExited(    MouseEvent e){\n      HelpButton.this.m_helpWindow.dispose();\n    }\n  }\n);\n  addMouseListener(new MouseAdapter(){\n    public void mouseEntered(    MouseEvent e){\n      HelpButton.this.requestFocus();\n      HelpButton.this.adjustLocation();\n      m_helpWindow.setVisible(true);\n    }\n    public void mouseExited(    MouseEvent e){\n      m_helpWindow.setVisible(false);\n    }\n  }\n);\n}\n', '0', '8', '1');
INSERT INTO `case_study` VALUES ('783', 'wrap(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\HelpButton.java', 'jsmooth', '18', '107', '61', '-1000', '4', '0.2037', '0.1853', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public String wrap(String str){\n  StringBuffer sb=new StringBuffer();\n  StringBuffer line=new StringBuffer();\n  StringTokenizer stok=new StringTokenizer(str,\" \",true);\n  while (stok.hasMoreElements()) {\n    boolean cut=false;\n    String tok=stok.nextToken();\n    line.append(tok);\n    if (tok.indexOf(\"<br\") >= 0 || tok.indexOf(\"<BR\") >= 0 || tok.indexOf(\"<p>\") >= 0 || tok.indexOf(\"<p/>\") >= 0 || tok.indexOf(\"<P/>\") >= 0 || tok.indexOf(\"<P/>\") >= 0) {\n      sb.append(line);\n      line.setLength(0);\n    }\n    if (line.length() > 80) {\n      sb.append(line);\n      sb.append(\"<br>\\n\");\n      line.setLength(0);\n    }\n  }\n  sb.append(line);\n  return sb.toString();\n}\n', '0', '6', '9');
INSERT INTO `case_study` VALUES ('784', 'adjustLocation()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\HelpButton.java', 'jsmooth', '7', '12', '3', '-1000', '2', '0.3143', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void adjustLocation(){\n  Point p=this.getLocationOnScreen();\n  p.y+=getHeight();\n  Rectangle bounds=GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();\n  if ((p.x + m_helpWindow.getWidth()) > bounds.width)   p.x=bounds.width - m_helpWindow.getWidth();\n  if (p.x < bounds.x)   p.x=bounds.x;\n  m_helpWindow.setLocation(p.x,p.y);\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('791', 'LayoutLengthDescriptor(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\LayoutLengthDescriptor.java', 'jsmooth', '24', '221', '166', '-1000', '4', '0.112', '0.0988', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'public LayoutLengthDescriptor(String s){\n  try {\n    s=s.trim();\n    StringBuffer len=new StringBuffer();\n    StringBuffer unit=new StringBuffer();\n    int offset=0;\n    for (; offset < s.length(); offset++) {\n      char c=s.charAt(offset);\n      if (Character.isDigit(c) == false)       break;\n      len.append(c);\n    }\n    for (; offset < s.length(); offset++) {\n      char c=s.charAt(offset);\n      if (Character.isWhitespace(c) == false)       break;\n    }\n    for (; offset < s.length(); offset++) {\n      char c=s.charAt(offset);\n      unit.append(c);\n    }\n    System.out.println(\"len: \" + len);\n    System.out.println(\"unit: \" + unit);\n    m_length=Integer.parseInt(len.toString());\n    String sunit=unit.toString();\n    if (sunit.equals(\"px\"))     m_unit=PIXEL;\n else     if (sunit.equals(\"%\"))     m_unit=PERCENT;\n  }\n catch (  Exception exc) {\n    throw new RuntimeException(\"Error parsing \" + s);\n  }\n}\n', '0', '9', '9');
INSERT INTO `case_study` VALUES ('802', 'main(String[])', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\OptionalHelpPanel.java', 'jsmooth', '19', '123', '75', '-1000', '4', '0.152', '0.1399', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static void main(String[] args){\n  JFrame f=new JFrame(\"test\");\n  OptionalHelpPanel ohp=new OptionalHelpPanel();\n  ohp.setHelpText(\"This is my help text\");\n  ohp.setLabel(\"My label1\");\n  ohp.getContentPane().setLayout(new BorderLayout());\n  ohp.getContentPane().add(BorderLayout.CENTER,new FileSelectionTextField());\n  OptionalHelpPanel ohp2=new OptionalHelpPanel();\n  ohp.setLabel(\"hop2\");\n  ohp2.setHelpText(\"<html><h1>This is my second help text</h1>le g閍nt du logiciel va-t-il 閏outer et arr阾er le d閘uge promotionel qui vise � faire connaitre les nouveaut閟 de Office 2003 alors que les utilisateurs sont satisfaits des versions pr閏閐entes et que les responsables zieutent lourdement du cot� de Linux et d\'OpenOffice ?\");\n  ohp2.getContentPane().setLayout(new BorderLayout());\n  ohp2.getContentPane().add(BorderLayout.CENTER,new JTextField());\n  f.getContentPane().setLayout(new PanelLayout());\n  f.getContentPane().add(ohp);\n  f.getContentPane().add(ohp2);\n  f.setSize(300,300);\n  f.setVisible(true);\n}\n', '1', '4', '1');
INSERT INTO `case_study` VALUES ('806', 'calculateMinimumSize(Container)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\PanelLayout.java', 'jsmooth', '11', '36', '17', '-1000', '3', '0.2222', '0.1201', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void calculateMinimumSize(Container parent){\n  m_minimumSize=new Dimension();\n  for (int i=0; i < parent.getComponentCount(); i++) {\n    Component element=parent.getComponent(i);\n    if (element.isVisible()) {\n      Dimension eld=element.getPreferredSize();\n      LayoutLengthDescriptor ld=(LayoutLengthDescriptor)m_componentToLayoutLengthDescriptor.get(element);\n      if (ld != null)       eld.height=ld.getLength(parent.getHeight());\n      m_minimumSize.height+=eld.height;\n      m_minimumSize.width=Math.max(m_minimumSize.width,eld.width);\n    }\n  }\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('809', 'layoutContainer(Container)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\PanelLayout.java', 'jsmooth', '16', '75', '30', '-1000', '3', '0.1932', '0.1149', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void layoutContainer(Container parent){\n  Insets insets=parent.getInsets();\n  int xoffset=insets.left;\n  int yoffset=insets.top;\n  int maxcwidth=parent.getWidth() - (insets.right + insets.left);\n  int maxcheight=parent.getHeight() - insets.bottom;\n  for (int i=0; i < parent.getComponentCount(); i++) {\n    Component element=parent.getComponent(i);\n    if (element.isVisible()) {\n      Dimension eld=element.getPreferredSize();\n      LayoutLengthDescriptor ld=(LayoutLengthDescriptor)m_componentToLayoutLengthDescriptor.get(element);\n      if (ld != null)       eld.height=ld.getLength(parent.getHeight());\n      if ((eld.height + yoffset) > maxcheight)       eld.height=maxcheight - yoffset;\n      element.setBounds(xoffset,yoffset,maxcwidth,eld.height);\n      yoffset+=eld.height;\n    }\n  }\n}\n', '1', '10', '5');
INSERT INTO `case_study` VALUES ('810', 'PropertyEditorDialog(JavaPropertyPair)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\PropertyEditorDialog.java', 'jsmooth', '36', '407', '184', '-1000', '6', '0.109', '0.2056', '0', '0', '0', '0', '0', '1', '1', '0', '0', '0', 'public PropertyEditorDialog(JavaPropertyPair prop){\n  super();\n  setTitle(Main.local(\"JAVAPROP_DIALOG_TITLE\"));\n  setModal(true);\n  m_prop=prop;\n  getContentPane().setLayout(new PanelLayout());\n  JLabel eq=new JLabel(\" = \");\n  eq.setHorizontalAlignment(JLabel.CENTER);\n  OptionalHelpPanel keypane=new OptionalHelpPanel();\n  keypane.setLabel(Main.local(\"JAVAPROP_DIALOG_LABEL\"));\n  keypane.setHelpText(Main.local(\"JAVAPROP_DIALOG_HELP\"));\n  keypane.getContentPane().setLayout(new GridBagLayout());\n  GridBagConstraints c=new GridBagConstraints();\n  c.fill=GridBagConstraints.HORIZONTAL;\n  c.gridx=GridBagConstraints.RELATIVE;\n  c.gridy=GridBagConstraints.RELATIVE;\n  c.gridwidth=1;\n  c.weightx=0.5;\n  keypane.getContentPane().add(new JLabel(Main.local(\"JAVAPROP_NAME\")),c);\n  c.weightx=0.1;\n  keypane.getContentPane().add(new JLabel(\"\"),c);\n  c.weightx=0.5;\n  c.gridwidth=GridBagConstraints.REMAINDER;\n  keypane.getContentPane().add(new JLabel(Main.local(\"JAVAPROP_VALUE\")),c);\n  c.gridwidth=1;\n  c.weightx=0.5;\n  keypane.getContentPane().add(m_key,c);\n  c.weightx=0.1;\n  keypane.getContentPane().add(eq,c);\n  c.weightx=0.5;\n  keypane.getContentPane().add(m_value,c);\n  getContentPane().add(keypane);\n  getBanner().setVisible(false);\n  setResizable(false);\n  pack();\n  m_key.setText(m_prop.getName());\n  m_value.setText(m_prop.getValue());\n}\n', '0.5', '4', '1');
INSERT INTO `case_study` VALUES ('815', 'RecentFileMenu(JMenu,int,Class,RecentFileMenu.Action)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\RecentFileMenu.java', 'jsmooth', '8', '27', '26', '-1000', '7', '0.1375', '0.01', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '/** \n * Creates a new instance of RecentFileMenu \n */\npublic RecentFileMenu(JMenu menuroot,int recentCount,Class prefAttach,RecentFileMenu.Action action){\n  m_recent=new Vector(recentCount);\n  m_recentCount=recentCount;\n  m_root=menuroot;\n  m_prefAttach=prefAttach;\n  m_action=action;\n  loadRecentPrefs();\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('816', 'loadRecentPrefs()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\RecentFileMenu.java', 'jsmooth', '10', '35', '25', '-1000', '4', '0.2', '0.077', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void loadRecentPrefs(){\n  Preferences p=Preferences.systemNodeForPackage(m_prefAttach);\n  int count=p.getInt(\"recentfilecount\",0);\n  m_recent.removeAllElements();\n  for (int i=0; i < count; i++) {\n    String rf=p.get(\"recentfile_\" + i,null);\n    if ((rf != null) && (m_recent.size() < m_recentCount)) {\n      m_recent.add(rf);\n    }\n  }\n  buildMenu();\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('817', 'savePrefs()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\RecentFileMenu.java', 'jsmooth', '8', '23', '18', '-1000', '5', '0.2292', '0.0847', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public void savePrefs(){\n  Preferences p=Preferences.systemNodeForPackage(m_prefAttach);\n  for (int i=0; i < m_recent.size(); i++) {\n    p.put(\"recentfile_\" + i,m_recent.elementAt(i).toString());\n  }\n  p.putInt(\"recentfilecount\",m_recent.size());\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('819', 'buildMenu()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\RecentFileMenu.java', 'jsmooth', '11', '44', '33', '-1000', '2', '0.1717', '0.1015', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void buildMenu(){\n  m_root.removeAll();\n  for (int i=0; i < Math.min(m_recent.size(),m_recentCount); i++) {\n    JMenuItem item=new JMenuItem(m_recent.elementAt(i).toString());\n    ActionRecent ar=new ActionRecent();\n    ar.Offset=i;\n    item.addActionListener(ar);\n    m_root.add(item);\n  }\n  m_root.addSeparator();\n  JMenuItem clear=new JMenuItem(\"Clear\");\n  clear.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      m_recent.removeAllElements();\n      buildMenu();\n    }\n  }\n);\n  m_root.add(clear);\n}\n', '1', '5', '2');
INSERT INTO `case_study` VALUES ('821', 'add(String)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\RecentFileMenu.java', 'jsmooth', '6', '12', '9', '-1000', '4', '0.3333', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void add(String rec){\n  m_recent.remove(rec);\n  m_recent.insertElementAt(rec,0);\n  while (m_recent.size() > m_recentCount)   m_recent.remove(m_recent.size() - 1);\n  buildMenu();\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('823', 'insertString(int,String,AttributeSet)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\RegExDocument.java', 'jsmooth', '12', '49', '32', '-1000', '2', '0.1944', '0.101', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void insertString(int offset,String string,AttributeSet attributes) throws BadLocationException {\n  if (string == null)   return;\n  String result;\n  int length=getLength();\n  if (length == 0) {\n    result=string;\n  }\n else {\n    String currentContent=getText(0,length);\n    StringBuffer currentBuffer=new StringBuffer(currentContent);\n    currentBuffer.insert(offset,string);\n    result=currentBuffer.toString();\n  }\n  java.util.regex.Matcher m=m_pattern.matcher(result);\n  if (m.matches()) {\n    super.insertString(offset,string,attributes);\n  }\n  java.awt.Toolkit.getDefaultToolkit().beep();\n}\n', '0', '8', '4');
INSERT INTO `case_study` VALUES ('839', 'initComponents()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\SortedEditableList.java', 'jsmooth', '22', '187', '143', '-1000', '3', '0.1091', '0.1558', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '/** \n * This method is called from within the constructor to\n * initialize the form.\n * WARNING: Do NOT modify this code. The content of this method is\n * always regenerated by the Form Editor.\n */\nprivate void initComponents(){\n  java.awt.GridBagConstraints gridBagConstraints;\n  jScrollPane1=new javax.swing.JScrollPane();\n  m_itemList=new javax.swing.JList();\n  m_buttonAdd=new javax.swing.JButton();\n  m_buttonRemove=new javax.swing.JButton();\n  m_buttonEdit=new javax.swing.JButton();\n  jSeparator1=new javax.swing.JSeparator();\n  m_buttonUp=new javax.swing.JButton();\n  m_buttonDown=new javax.swing.JButton();\n  setLayout(new java.awt.GridBagLayout());\n  jScrollPane1.setViewportView(m_itemList);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridx=1;\n  gridBagConstraints.gridwidth=4;\n  gridBagConstraints.gridheight=8;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.weightx=1.0;\n  gridBagConstraints.weighty=1.0;\n  add(jScrollPane1,gridBagConstraints);\n  m_buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/stock_insert-element.png\")));\n  m_buttonAdd.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonAddActionPerformed(evt);\n    }\n  }\n);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  add(m_buttonAdd,gridBagConstraints);\n  m_buttonRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/stock_remove-element.png\")));\n  m_buttonRemove.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonRemoveActionPerformed(evt);\n    }\n  }\n);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  add(m_buttonRemove,gridBagConstraints);\n  m_buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/stock_edit.png\")));\n  m_buttonEdit.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonEditActionPerformed(evt);\n    }\n  }\n);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  add(m_buttonEdit,gridBagConstraints);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.weighty=1.0;\n  gridBagConstraints.insets=new java.awt.Insets(5,5,5,5);\n  add(jSeparator1,gridBagConstraints);\n  m_buttonUp.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/stock_up.png\")));\n  m_buttonUp.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonUpActionPerformed(evt);\n    }\n  }\n);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridy=6;\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTH;\n  add(m_buttonUp,gridBagConstraints);\n  m_buttonDown.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/icons/stock_down.png\")));\n  m_buttonDown.addActionListener(new java.awt.event.ActionListener(){\n    public void actionPerformed(    java.awt.event.ActionEvent evt){\n      buttonDownActionPerformed(evt);\n    }\n  }\n);\n  gridBagConstraints=new java.awt.GridBagConstraints();\n  gridBagConstraints.gridy=7;\n  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;\n  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;\n  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTH;\n  add(m_buttonDown,gridBagConstraints);\n}\n', '0', '6', '1');
INSERT INTO `case_study` VALUES ('845', 'buttonDownActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\SortedEditableList.java', 'jsmooth', '7', '8', '0', '-1000', '2', '0.381', '0.204', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void buttonDownActionPerformed(java.awt.event.ActionEvent evt){\n  int max=m_model.size();\n  int index=m_itemList.getSelectedIndex();\n  if ((index + 1) < max) {\n    Object o=m_model.remove(index);\n    m_model.add(index + 1,o);\n    m_itemList.setSelectedIndex(index + 1);\n  }\n  modelChanged();\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('849', 'buttonEditActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\SortedEditableList.java', 'jsmooth', '8', '10', '0', '-1000', '2', '0.3036', '0.2482', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void buttonEditActionPerformed(java.awt.event.ActionEvent evt){\n  int index=m_itemList.getSelectedIndex();\n  if (index >= 0) {\n    Object o=m_model.get(index);\n    Object n=m_editor.editItem(this,o);\n    if (n != null) {\n      m_model.removeElementAt(index);\n      m_model.add(index,n);\n      m_itemList.setSelectedIndex(index);\n    }\n  }\n  modelChanged();\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('851', 'buttonAddActionPerformed(java.awt.event.ActionEvent)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\SortedEditableList.java', 'jsmooth', '9', '15', '0', '-1000', '3', '0.3611', '0.3048', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void buttonAddActionPerformed(java.awt.event.ActionEvent evt){\n  Object item=m_editor.createNewItem(this);\n  if (item != null) {\n    System.out.println(\"IsArray: \" + item.getClass() + \" == \"+ item.getClass().isArray());\n    if (item.getClass().isArray()) {\n      for (int i=0; i < java.lang.reflect.Array.getLength(item); i++) {\n        Object o=java.lang.reflect.Array.get(item,i);\n        if (m_model.contains(o) == false)         m_model.addElement(o);\n      }\n    }\n else {\n      if (m_model.contains(item) == false)       m_model.addElement(item);\n    }\n    modelChanged();\n  }\n}\n', '1', '4', '6');
INSERT INTO `case_study` VALUES ('852', 'modelChanged()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\gui\\util\\SortedEditableList.java', 'jsmooth', '8', '28', '28', '-1000', '1', '0.125', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'protected void modelChanged(){\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('853', 'JSmoothResources(Display)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\resources\\JSmoothResources.java', 'jsmooth', '8', '26', '24', '-1000', '6', '0.1607', '0.03', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public JSmoothResources(Display display){\n  Class clazz=getClass();\n  URL url=clazz.getResource(\"jsmooth.properties\");\n  try {\n    bundle=new PropertyResourceBundle(url.openStream());\n  }\n catch (  IOException e) {\n  }\n  loadImages(this.display=display);\n  loadText();\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('854', 'loadImages(Display)', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\resources\\JSmoothResources.java', 'jsmooth', '9', '8', '0', '-1000', '2', '0.3333', '0.3556', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public void loadImages(Display display){\n  System.out.println(\"[DEBUG] Loading images...\");\n  String name=bundle.getString(\"img.switcher.skeleton\");\n  IMG_SWITCHER_SKELETON_PAGE=new Image(display,getClass().getResourceAsStream(name));\n  name=bundle.getString(\"img.switcher.application\");\n  IMG_SWITCHER_APPLICATION=new Image(display,getClass().getResourceAsStream(name));\n  name=bundle.getString(\"img.switcher.executable\");\n  IMG_SWITCHER_EXECUTABLE=new Image(display,getClass().getResourceAsStream(name));\n  name=bundle.getString(\"img.switcher.welcome\");\n  IMG_SWITCHER_WELCOME=new Image(display,getClass().getResourceAsStream(name));\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('855', 'loadText()', 'D:\\temp\\case study\\jsmooth-0.9.9-7-src\\src\\net\\charabia\\jsmoothgen\\application\\swtgui\\resources\\JSmoothResources.java', 'jsmooth', '7', '15', '9', '-1000', '3', '0.2571', '0.1468', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void loadText(){\n  System.out.println(\"[DEBUG] Loading text...\");\n  InputStream stream=getClass().getResourceAsStream(\"welcome.xml\");\n  byte[] bytes=new byte[5000];\n  try {\n    stream.read(bytes);\n    TEXT_HELP_WELCOME=(new String(bytes)).trim();\n    stream.close();\n  }\n catch (  IOException e1) {\n  }\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('857', 'createDemoNetwork()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\RecommenderNetwork.java', 'neuroph', '38', '597', '491', '-1000', '8', '0.0754', '0.0476', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', 'public void createDemoNetwork(){\n  int productsCount=20;\n  int typesCount=3;\n  int brandsCount=3;\n  int priceCount=3;\n  int promoCount=3;\n  this.setNetworkType(NeuralNetworkType.RECOMMENDER);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.RAMP);\n  neuronProperties.setProperty(\"transferFunction.slope\",new Double(1));\n  Layer inputLayer=LayerFactory.createLayer(productsCount,neuronProperties);\n  this.addLayer(inputLayer);\n  createProductLabels(inputLayer);\n  Layer typeLayer=LayerFactory.createLayer(typesCount,neuronProperties);\n  createTypeLabels(typeLayer);\n  this.addLayer(typeLayer);\n  Layer brandLayer=LayerFactory.createLayer(brandsCount,neuronProperties);\n  createBrandLabels(brandLayer);\n  this.addLayer(brandLayer);\n  Layer priceLayer=LayerFactory.createLayer(priceCount,neuronProperties);\n  createPriceLabels(priceLayer);\n  this.addLayer(priceLayer);\n  Layer promoLayer=LayerFactory.createLayer(promoCount,neuronProperties);\n  createPromoLabels(promoLayer);\n  this.addLayer(promoLayer);\n  Layer outputLayer=LayerFactory.createLayer(productsCount,neuronProperties);\n  this.addLayer(outputLayer);\n  createProductLabels(outputLayer);\n  createTypeConnections();\n  createBrandConnections();\n  createPriceConnections();\n  createPromoConnections();\n  for (  Neuron neuron : this.getLayerAt(outputLayerIdx).getNeurons()) {\n    neuron.addInputConnection(neuron,1);\n  }\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new UnsupervisedHebbianLearning());\n}\n', '0.6363636363636364', '13', '2');
INSERT INTO `case_study` VALUES ('858', 'createTypeConnections()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\RecommenderNetwork.java', 'neuroph', '25', '141', '0', '-1000', '2', '0.12', '0.1256', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void createTypeConnections(){\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(i);\n    Neuron toNeuron=this.getLayerAt(typeLayerIdx).getNeuronAt(0);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=7; i < 14; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(i);\n    Neuron toNeuron=this.getLayerAt(typeLayerIdx).getNeuronAt(1);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=14; i < 20; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(i);\n    Neuron toNeuron=this.getLayerAt(typeLayerIdx).getNeuronAt(2);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(typeLayerIdx).getNeuronAt(0);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(i);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=7; i < 14; i++) {\n    Neuron fromNeuron=this.getLayerAt(typeLayerIdx).getNeuronAt(1);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(i);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=14; i < 20; i++) {\n    Neuron fromNeuron=this.getLayerAt(typeLayerIdx).getNeuronAt(2);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(i);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n}\n', '0.6666666666666666', '18', '7');
INSERT INTO `case_study` VALUES ('859', 'createBrandConnections()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\RecommenderNetwork.java', 'neuroph', '29', '247', '88', '-1000', '9', '0.0952', '0.0945', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void createBrandConnections(){\n  int samsung[]={0,1,7,8,9,14,15};\n  int lg[]={2,3,10,11,16,17};\n  int sony[]={4,5,6,12,13,18,19};\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(samsung[i]);\n    Neuron toNeuron=this.getLayerAt(brandLayerIdx).getNeuronAt(0);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 6; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(lg[i]);\n    Neuron toNeuron=this.getLayerAt(brandLayerIdx).getNeuronAt(1);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(sony[i]);\n    Neuron toNeuron=this.getLayerAt(brandLayerIdx).getNeuronAt(2);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(brandLayerIdx).getNeuronAt(0);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(samsung[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 6; i++) {\n    Neuron fromNeuron=this.getLayerAt(brandLayerIdx).getNeuronAt(1);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(lg[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(brandLayerIdx).getNeuronAt(2);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(sony[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n}\n', '0.6666666666666666', '21', '7');
INSERT INTO `case_study` VALUES ('860', 'createPriceConnections()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\RecommenderNetwork.java', 'neuroph', '29', '247', '88', '-1000', '9', '0.0952', '0.0945', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void createPriceConnections(){\n  int low[]={0,2,4,7,10,16,18};\n  int mid[]={3,5,8,11,12,14,19};\n  int high[]={1,6,9,13,15,17};\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(low[i]);\n    Neuron toNeuron=this.getLayerAt(priceLayerIdx).getNeuronAt(0);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(mid[i]);\n    Neuron toNeuron=this.getLayerAt(priceLayerIdx).getNeuronAt(1);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 6; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(high[i]);\n    Neuron toNeuron=this.getLayerAt(priceLayerIdx).getNeuronAt(2);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(priceLayerIdx).getNeuronAt(0);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(low[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 7; i++) {\n    Neuron fromNeuron=this.getLayerAt(priceLayerIdx).getNeuronAt(1);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(mid[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < 6; i++) {\n    Neuron fromNeuron=this.getLayerAt(priceLayerIdx).getNeuronAt(2);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(high[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n}\n', '0.6666666666666666', '21', '7');
INSERT INTO `case_study` VALUES ('861', 'createPromoConnections()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\RecommenderNetwork.java', 'neuroph', '28', '198', '18', '-1000', '2', '0.1071', '0.1181', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void createPromoConnections(){\n  int sales[]={0,10,19};\n  int new_products[]={6,9};\n  int bestsellers[]={3,12,14};\n  for (int i=0; i < sales.length; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(sales[i]);\n    Neuron toNeuron=this.getLayerAt(promoLayerIdx).getNeuronAt(0);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < new_products.length; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(new_products[i]);\n    Neuron toNeuron=this.getLayerAt(promoLayerIdx).getNeuronAt(1);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < bestsellers.length; i++) {\n    Neuron fromNeuron=this.getLayerAt(inputLayerIdx).getNeuronAt(bestsellers[i]);\n    Neuron toNeuron=this.getLayerAt(promoLayerIdx).getNeuronAt(2);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < sales.length; i++) {\n    Neuron fromNeuron=this.getLayerAt(promoLayerIdx).getNeuronAt(0);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(sales[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < new_products.length; i++) {\n    Neuron fromNeuron=this.getLayerAt(promoLayerIdx).getNeuronAt(1);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(new_products[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n  for (int i=0; i < bestsellers.length; i++) {\n    Neuron fromNeuron=this.getLayerAt(promoLayerIdx).getNeuronAt(2);\n    Neuron toNeuron=this.getLayerAt(outputLayerIdx).getNeuronAt(bestsellers[i]);\n    this.createConnection(fromNeuron,toNeuron,0.1);\n  }\n}\n', '0.6666666666666666', '21', '7');
INSERT INTO `case_study` VALUES ('862', 'createProductLabels(Layer)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\RecommenderNetwork.java', 'neuroph', '22', '41', '0', '-1000', '3', '0.9091', '0.8261', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void createProductLabels(Layer layer){\n  layer.getNeuronAt(0).setLabel(\"Samsung LCD TV LE-32A330\");\n  layer.getNeuronAt(1).setLabel(\"Samsung LCD TV LE-32A558\");\n  layer.getNeuronAt(2).setLabel(\"LG LCD TV 32LG2000\");\n  layer.getNeuronAt(3).setLabel(\"LG LCD TV 32LG5010\");\n  layer.getNeuronAt(4).setLabel(\"Sony LCD TV KDL-32L4000K\");\n  layer.getNeuronAt(5).setLabel(\"Sony LCD TV KDL-32S4000\");\n  layer.getNeuronAt(6).setLabel(\"Sony LCD TV KDL-32W4000K\");\n  layer.getNeuronAt(7).setLabel(\"Samsung Digital Camera S760\");\n  layer.getNeuronAt(8).setLabel(\"Samsung Digital Camera L100\");\n  layer.getNeuronAt(9).setLabel(\"Samsung Digital Camera S850\");\n  layer.getNeuronAt(10).setLabel(\"LG Digital Camera DMCLS80E\");\n  layer.getNeuronAt(11).setLabel(\"LG Digital Camera DMCLZ8E\");\n  layer.getNeuronAt(12).setLabel(\"Sony Digital Camera DSCW120S\");\n  layer.getNeuronAt(13).setLabel(\"Sony Digital Camera DSCW130S\");\n  layer.getNeuronAt(14).setLabel(\"Samsung Mobile Phone E251\");\n  layer.getNeuronAt(15).setLabel(\"Samsung Mobile Phone U600\");\n  layer.getNeuronAt(16).setLabel(\"Sony Mobile Phone KP100\");\n  layer.getNeuronAt(17).setLabel(\"Sony Mobile Phone KE850\");\n  layer.getNeuronAt(18).setLabel(\"LG Mobile Phone K330\");\n  layer.getNeuronAt(19).setLabel(\"LG Mobile Phone K660\");\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('867', 'Connection(Neuron,Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Connection.java', 'neuroph', '6', '14', '13', '-1000', '5', '0.1905', '0.0357', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates a new connection to specified neuron with specified weight value\n * @param fromNeuron neuron to connect from\n * @param toNeuron neuron to connect to\n * @param weightValweight value for this connection\n */\npublic Connection(Neuron fromNeuron,Neuron toNeuron,double weightVal){\n  this(fromNeuron,toNeuron,new Weight(weightVal));\n}\n', '1', '3', '1');
INSERT INTO `case_study` VALUES ('876', 'clone()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Connection.java', 'neuroph', '7', '11', '1', '-1000', '3', '0.2857', '0.25', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@Override public Object clone() throws CloneNotSupportedException {\n  Connection cloned=(Connection)super.clone();\n  cloned.setWeight((Weight)weight.clone());\n  cloned.toNeuron=(Neuron)toNeuron.clone();\n  cloned.fromNeuron=(Neuron)fromNeuron.clone();\n  return cloned;\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('877', 'hashCode()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Connection.java', 'neuroph', '7', '11', '1', '-1000', '3', '0.3143', '0.225', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@Override public int hashCode(){\n  int hash=7;\n  hash=67 * hash + Objects.hashCode(this.fromNeuron);\n  hash=67 * hash + Objects.hashCode(this.toNeuron);\n  hash=67 * hash + Objects.hashCode(this.weight);\n  return hash;\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('878', 'equals(Object)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Connection.java', 'neuroph', '9', '24', '12', '-1000', '3', '0.2593', '0.1929', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public boolean equals(Object obj){\n  if (this == obj) {\n    return true;\n  }\n  if (obj == null) {\n    return false;\n  }\n  if (getClass() != obj.getClass()) {\n    return false;\n  }\n  final Connection other=(Connection)obj;\n  if (!Objects.equals(this.fromNeuron,other.fromNeuron)) {\n    return false;\n  }\n  if (!Objects.equals(this.toNeuron,other.toNeuron)) {\n    return false;\n  }\n  if (!Objects.equals(this.weight,other.weight)) {\n    return false;\n  }\n  return true;\n}\n', '0', '5', '7');
INSERT INTO `case_study` VALUES ('882', 'Layer(int,NeuronProperties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Layer.java', 'neuroph', '6', '13', '11', '-1000', '4', '0.2222', '0.0536', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates an instance of Layer with the specified number of neurons with\n * specified neuron properties\n * @param neuronsCount number of neurons in layer\n * @param neuronProperties properties of neurons in layer\n */\npublic Layer(int neuronsCount,NeuronProperties neuronProperties){\n  this(neuronsCount);\n  for (int i=0; i < neuronsCount; i++) {\n    Neuron neuron=NeuronFactory.createNeuron(neuronProperties);\n    this.addNeuron(neuron);\n  }\n}\n', '1', '4', '2');
INSERT INTO `case_study` VALUES ('890', 'removeNeuronAt(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Layer.java', 'neuroph', '7', '17', '13', '-1000', '4', '0.2245', '0.1167', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Removes neuron at specified index position in this layer\n * @param index index position of neuron to remove\n */\npublic final void removeNeuronAt(int index){\n  Neuron neuron=neurons.get(index);\n  neuron.setParentLayer(null);\n  neuron.removeAllConnections();\n  neurons.remove(index);\n  if (parentNetwork != null)   parentNetwork.fireNetworkEvent(new NeuralNetworkEvent(this,NeuralNetworkEvent.Type.NEURON_REMOVED));\n}\n', '0.75', '2', '2');
INSERT INTO `case_study` VALUES ('903', 'addLayer(int,Layer)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\NeuralNetwork.java', 'neuroph', '6', '9', '3', '-1000', '2', '0.2778', '0.1578', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Adds layer to specified index position in network\n * @param index index position to add layer\n * @param layer layer to add\n */\npublic void addLayer(int index,Layer layer){\n  if (layer == null) {\n    throw new IllegalArgumentException(\"Layer cant be null!\");\n  }\n  if (index < 0) {\n    throw new IllegalArgumentException(\"Layer index cannot be negative: \" + index);\n  }\n  layer.setParentNetwork(this);\n  layers.add(index,layer);\n  fireNetworkEvent(new NeuralNetworkEvent(layer,NeuralNetworkEvent.Type.LAYER_ADDED));\n}\n', '1', '2', '3');
INSERT INTO `case_study` VALUES ('939', 'save(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\NeuralNetwork.java', 'neuroph', '12', '49', '32', '-1000', '5', '0.1481', '0.1559', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '/** \n * Saves neural network into the specified file.\n * @param filePath file path to save network into\n */\npublic void save(String filePath){\n  ObjectOutputStream out=null;\n  try {\n    File file=new File(filePath);\n    out=new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(file)));\n    out.writeObject(this);\n    out.flush();\n  }\n catch (  IOException ioe) {\n    throw new NeurophException(\"Could not write neural network to file!\",ioe);\n  }\n finally {\n    if (out != null) {\n      try {\n        out.close();\n      }\n catch (      IOException e) {\n      }\n    }\n  }\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('940', 'load(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\NeuralNetwork.java', 'neuroph', '16', '101', '82', '-1000', '5', '0.125', '0.0909', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Loads neural network from the specified InputStream.\n * @param inputStream input stream to load network from\n * @return loaded neural network as NeuralNetwork object\n */\npublic static NeuralNetwork load(InputStream inputStream){\n  ObjectInputStream oistream=null;\n  try {\n    oistream=new ObjectInputStream(new BufferedInputStream(inputStream));\n    NeuralNetwork nnet=(NeuralNetwork)oistream.readObject();\n    return nnet;\n  }\n catch (  IOException ioe) {\n    throw new NeurophException(\"Could not read neural network file!\",ioe);\n  }\ncatch (  ClassNotFoundException cnfe) {\n    throw new NeurophException(\"Class not found while trying to read neural network from file!\",cnfe);\n  }\n finally {\n    if (oistream != null) {\n      try {\n        oistream.close();\n      }\n catch (      IOException ioe) {\n      }\n    }\n  }\n}\n', '1', '6', '5');
INSERT INTO `case_study` VALUES ('943', 'createFromFile(File)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\NeuralNetwork.java', 'neuroph', '15', '87', '69', '-1000', '5', '0.1333', '0.1042', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static NeuralNetwork createFromFile(String filePath){\n  File file=new File(filePath);\n  return NeuralNetwork.createFromFile(file);\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('963', 'addInputConnection(Connection)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Neuron.java', 'neuroph', '7', '11', '1', '-1000', '3', '0.3571', '0.2333', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Adds input connection with the given weight, from given neuron\n * @param fromNeuron neuron to connect from\n * @param weightVal  connection weight value\n */\npublic void addInputConnection(Neuron fromNeuron,double weightVal){\n  Connection connection=new Connection(fromNeuron,this,weightVal);\n  this.addInputConnection(connection);\n}\n', '1', '3', '1');
INSERT INTO `case_study` VALUES ('1003', 'equals(Object)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\Weight.java', 'neuroph', '9', '24', '12', '-1000', '3', '0.2222', '0.1757', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public boolean equals(Object obj){\n  if (this == obj) {\n    return true;\n  }\n  if (obj == null) {\n    return false;\n  }\n  if (getClass() != obj.getClass()) {\n    return false;\n  }\n  final Weight other=(Weight)obj;\n  if (Double.doubleToLongBits(this.value) != Double.doubleToLongBits(other.value)) {\n    return false;\n  }\n  if (Double.doubleToLongBits(this.weightChange) != Double.doubleToLongBits(other.weightChange)) {\n    return false;\n  }\n  if (!Objects.equals(this.trainingData,other.trainingData)) {\n    return false;\n  }\n  return true;\n}\n', '0', '5', '7');
INSERT INTO `case_study` VALUES ('1013', 'initialize(NeuralNetwork,DataSet,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\CrossValidation.java', 'neuroph', '9', '31', '26', '-1000', '5', '0.1778', '0.0662', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private void initialize(NeuralNetwork neuralNetwork,DataSet dataSet,int numberOfFolds){\n  this.neuralNetwork=neuralNetwork;\n  this.numberOfFolds=numberOfFolds;\n  this.dataSet=dataSet;\n  if (neuralNetwork.getOutputsCount() == 1) {\n    this.evaluation.addEvaluator(new ClassifierEvaluator.Binary(0.5));\n  }\n else {\n    this.evaluation.addEvaluator(new ClassifierEvaluator.MultiClass(dataSet.getColumnNames()));\n  }\n  this.evaluation.addEvaluator(new ErrorEvaluator(new MeanSquaredError()));\n}\n', '1', '9', '2');
INSERT INTO `case_study` VALUES ('1031', 'printResult()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\CrossValidationResult.java', 'neuroph', '11', '40', '25', '-1000', '6', '0.2424', '0.2885', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', 'public void printResult(){\n  System.out.println(\"=== Cross validation result ===\");\n  System.out.println(\"Instances: \" + numberOfInstances);\n  System.out.println(\"Number of folds: \" + numberOfFolds);\n  System.out.println(\"\\n\");\n  System.out.println(\"=== Summary ===\");\n  System.out.println(\"Mean squared error: \" + average.mserror);\n  System.out.println(\"Accuracy: \" + average.accuracy);\n  System.out.println(\"Precision: \" + average.precision);\n  System.out.println(\"Recall: \" + average.recall);\n  System.out.println(\"FScore: \" + average.fScore);\n  System.out.println(\"Correlation coefficient: \" + average.correlationCoefficient);\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('1037', 'evaluateDataSet(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\Evaluation.java', 'neuroph', '18', '124', '95', '-1000', '2', '0.15', '0.0937', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Runs evaluation procedure for given neural network and data set through all evaluatoors\n * Evaluation results are stored in evaluators\n * @param neuralNetwork trained neural network\n * @param dataSet       test data set used for evaluation\n * @return \n */\npublic EvaluationResult evaluateDataSet(NeuralNetwork neuralNetwork,DataSet dataSet){\n  for (  Evaluator evaluator : evaluators.values()) {\n    evaluator.reset();\n  }\n  for (  DataSetRow dataRow : dataSet.getRows()) {\n    neuralNetwork.setInput(dataRow.getInput());\n    neuralNetwork.calculate();\n    for (    Evaluator evaluator : evaluators.values()) {\n      evaluator.processNetworkResult(neuralNetwork.getOutput(),dataRow.getDesiredOutput());\n    }\n  }\n  ConfusionMatrix confusionMatrix;\n  if (neuralNetwork.getOutputsCount() > 1) {\n    confusionMatrix=getEvaluator(ClassifierEvaluator.MultiClass.class).getResult();\n  }\n else {\n    confusionMatrix=getEvaluator(ClassifierEvaluator.Binary.class).getResult();\n  }\n  double meanSquaredError=getEvaluator(ErrorEvaluator.class).getResult();\n  EvaluationResult result=new EvaluationResult();\n  result.setDataSet(dataSet);\n  result.setConfusionMatrix(confusionMatrix);\n  result.setMeanSquareError(meanSquaredError);\n  return result;\n}\n', '0.4666666666666667', '8', '5');
INSERT INTO `case_study` VALUES ('1042', 'runFullEvaluation(NeuralNetwork<?>,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\Evaluation.java', 'neuroph', '11', '28', '1', '-1000', '2', '0.2338', '0.2521', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Out of the box method (util) which computes all metrics for given neural network and test data set\n * @param neuralNet neural network to evaluate\n * @param dataSet data set to evaluate\n */\npublic static void runFullEvaluation(NeuralNetwork<?> neuralNet,DataSet dataSet){\n  Evaluation evaluation=new Evaluation();\n  evaluation.addEvaluator(new ClassifierEvaluator.MultiClass(dataSet.getColumnNames()));\n  evaluation.evaluateDataSet(neuralNet,dataSet);\n  LOGGER.info(\"##############################################################################\");\n  LOGGER.info(\"MeanSquare Error: \" + evaluation.getEvaluator(ErrorEvaluator.class).getResult());\n  LOGGER.info(\"##############################################################################\");\n  ClassifierEvaluator classificationEvaluator=evaluation.getEvaluator(ClassifierEvaluator.MultiClass.class);\n  ConfusionMatrix confusionMatrix=classificationEvaluator.getResult();\n  LOGGER.info(\"Confusion Matrix: \\r\\n\" + confusionMatrix.toString());\n  LOGGER.info(\"##############################################################################\");\n  LOGGER.info(\"Classification metrics: \");\n  ClassificationMetrics[] metrics=ClassificationMetrics.createFromMatrix(confusionMatrix);\n  for (  ClassificationMetrics cm : metrics)   LOGGER.info(cm.toString());\n  LOGGER.info(\"##############################################################################\");\n}\n', '0.8571428571428571', '7', '2');
INSERT INTO `case_study` VALUES ('1052', 'toString()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\EvaluationResult.java', 'neuroph', '6', '10', '5', '-1000', '2', '0.2778', '0.1189', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '@Override public String toString(){\n  ClassificationMetrics[] cms=getClassificationMetricses();\n  StringBuilder sb=new StringBuilder();\n  for (  ClassificationMetrics c : cms) {\n    sb.append(c).append(\"\\r\\n\");\n  }\n  return \"EvaluationResult{\" + \"dataSet=\" + dataSet.getLabel() + \", meanSquareError=\"+ meanSquareError+ \", \\r\\n confusionMatrix=\\r\\n\"+ confusionMatrix+ \"\\r\\n\"+ sb.toString()+ \"}\\r\\n\";\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('1056', 'FractionHSLData(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\FractionHSLData.java', 'neuroph', '18', '110', '67', '-1000', '3', '0.1667', '0.0942', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public FractionHSLData(Image img){\n  width=img.getWidth();\n  height=img.getHeight();\n  hueValues=new double[height][width];\n  saturationValues=new double[height][width];\n  lightnessValues=new double[height][width];\n  flattenedHSLValues=new double[width * height * 3];\n  flattenedHueValues=new double[width * height];\n  populateHSLArrays(img);\n}\n', '0.5', '1', '1');
INSERT INTO `case_study` VALUES ('1058', 'populateHSLArrays(Image)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\FractionHSLData.java', 'neuroph', '34', '386', '211', '-1000', '2', '0.1164', '0.0819', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * Fills the HSL matrices from image - this is where conversion from RGB to HSL is done\n * @param image image to use    \n */\nprotected void populateHSLArrays(Image image){\n  double red;\n  double green;\n  double blue;\n  double Cmax;\n  double Cmin;\n  double delta;\n  for (int j=0; j < width; j++) {\n    for (int i=0; i < height; i++) {\n      Color color=new Color(image.getPixel(j,i));\n      red=color.getRed();\n      green=color.getGreen();\n      blue=color.getBlue();\n      red=red / 255;\n      green=green / 255;\n      blue=blue / 255;\n      Cmax=Math.max(red,Math.max(green,blue));\n      Cmin=Math.min(red,Math.min(green,blue));\n      delta=Cmax - Cmin;\n      double hue=0;\n      if (delta != 0) {\n        if (Cmax == red)         hue=60 * (((green - blue) / delta) % 6);\n        if (Cmax == green)         hue=60 * (((blue - red) / delta) + 2);\n        if (Cmax == blue)         hue=60 * ((red - green) / delta + 4);\n      }\n else {\n        double a=(2 * red - green - blue) / 2;\n        double b=(green - blue) * Math.sqrt(3) / 2;\n        hue=Math.atan2(b,a);\n      }\n      hueValues[i][j]=hue / 360;\n      double lightness=(Cmax + Cmin) / 2;\n      lightnessValues[i][j]=lightness;\n      double saturation=0;\n      if (delta == 0)       saturation=0;\n else       saturation=delta / (1 - Math.abs(2 * lightness - 1));\n      saturationValues[i][j]=saturation;\n    }\n  }\n}\n', '1', '15', '8');
INSERT INTO `case_study` VALUES ('1060', 'fillFlattenedHSLValues()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\FractionHSLData.java', 'neuroph', '11', '37', '19', '-1000', '1', '0.1818', '0.0888', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void fillFlattenedHSLValues(){\n  int positionHue=0;\n  int positionSaturation=1;\n  int positionLighteness=2;\n  for (int i=0; i < height; i++) {\n    for (int j=0; j < width; j++) {\n      flattenedHSLValues[positionHue]=hueValues[i][j];\n      flattenedHSLValues[positionSaturation]=saturationValues[i][j];\n      flattenedHSLValues[positionLighteness]=lightnessValues[i][j];\n      positionHue=positionHue + 3;\n      positionSaturation=positionSaturation + 3;\n      positionLighteness=positionLighteness + 3;\n    }\n  }\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('1065', 'FractionRgbData(Image)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\FractionRgbData.java', 'neuroph', '9', '19', '2', '-1000', '3', '0.2778', '0.1724', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public FractionRgbData(BufferedImage img){\n  this(new ImageJ2SE(img));\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('1067', 'populateRGBArrays(Image)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\FractionRgbData.java', 'neuroph', '15', '63', '21', '-1000', '3', '0.2103', '0.1212', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Fills the rgb arrays from image\n * @param image image to get rgb data from\n */\nprotected final void populateRGBArrays(Image image){\n  int color;\n  for (int y=0; y < height; y++) {\n    for (int x=0; x < width; x++) {\n      color=image.getPixel(x,y);\n      double red=((double)Color.getRed(color)) / 256d;\n      redValues[y][x]=red;\n      flattenedRgbValues[(y * width + x)]=red;\n      double green=((double)Color.getGreen(color)) / 256d;\n      greenValues[y][x]=green;\n      flattenedRgbValues[(width * height + y * width + x)]=green;\n      double blue=((double)Color.getBlue(color)) / 256d;\n      blueValues[y][x]=blue;\n      flattenedRgbValues[(2 * width * height + y * width + x)]=blue;\n    }\n  }\n}\n', '0.5', '7', '3');
INSERT INTO `case_study` VALUES ('1068', 'convertRgbInputToBinaryBlackAndWhite(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\FractionRgbData.java', 'neuroph', '10', '35', '25', '-1000', '4', '0.275', '0.1402', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Converts image rgb data to binary black and white data (1 for black, 0 for white)\n * @param inputRGB flatten rgb data\n * @return binary black and white representation of image\n */\npublic static double[] convertRgbInputToBinaryBlackAndWhite(double[] inputRGB){\n  int length=inputRGB.length / 3;\n  double inputBinary[]=new double[length];\n  for (int i=0; i < length; i++) {\n    double rgbColorAvg=(inputRGB[i] + inputRGB[length + i] + inputRGB[2 * length + i]) / 3;\n    if (rgbColorAvg < 0.19) {\n      inputBinary[i]=1;\n    }\n else {\n      inputBinary[i]=0;\n    }\n  }\n  return inputBinary;\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('1078', 'ImageFilesIterator(File)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageFilesIterator.java', 'neuroph', '17', '125', '114', '-1000', '11', '0.1176', '0.041', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '/** \n * Creates image files iterator for the specified directory\n * @param dir Directory to iterate images from\n * @throws java.io.IOException\n */\npublic ImageFilesIterator(File dir) throws IOException {\n  if (!dir.isDirectory()) {\n    throw new IllegalArgumentException(dir + \" is not a directory!\");\n  }\n  String[] imageFilenames=dir.list(new FilenameFilter(){\n    public boolean accept(    File dir,    String name){\n      if (name.length() > 4) {\n        String fileExtension=name.substring(name.length() - 4,name.length());\n        return \".jpg\".equalsIgnoreCase(fileExtension) || \".png\".equalsIgnoreCase(fileExtension);\n      }\n      return false;\n    }\n  }\n);\n  List<File> imageFiles=new ArrayList<File>();\n  for (  String imageFile : imageFilenames) {\n    imageFiles.add(new File(dir,imageFile));\n  }\n  imageIterator=imageFiles.iterator();\n}\n', '0', '7', '4');
INSERT INTO `case_study` VALUES ('1083', 'createNewNeuralNetwork(String,Dimension,ColorMode,List<String>,List<Integer>,TransferFunctionType)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageRecognitionHelper.java', 'neuroph', '16', '87', '54', '-1000', '2', '0.151', '0.0996', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Creates and returns new neural network for image recognition.\n * Assumes that all of the FractionRgbData objects in the given map have identical \n * length arrays in them so that the input layer of the neural network can be \n * created here.\n * @param label neural network label\n * @param samplingResolution sampling resolution (image size)\n * @param imageLabels image labels\n * @param layersNeuronsCount neuron counts in hidden layers\n * @param transferFunctionType type of transfer function to use for neurons in network\n * @param colorMode color mode\n * @return \n */\npublic static NeuralNetwork createNewNeuralNetwork(String label,Dimension samplingResolution,ColorMode colorMode,List<String> imageLabels,List<Integer> layersNeuronsCount,TransferFunctionType transferFunctionType){\n  int numberOfInputNeurons;\n  if ((colorMode == ColorMode.COLOR_RGB) || (colorMode == ColorMode.COLOR_HSL)) {\n    numberOfInputNeurons=3 * samplingResolution.getWidth() * samplingResolution.getHeight();\n  }\n else {\n    numberOfInputNeurons=samplingResolution.getWidth() * samplingResolution.getHeight();\n  }\n  int numberOfOuputNeurons=imageLabels.size();\n  layersNeuronsCount.add(0,numberOfInputNeurons);\n  layersNeuronsCount.add(numberOfOuputNeurons);\n  System.out.println(\"Neuron layer size counts vector = \" + layersNeuronsCount);\n  NeuralNetwork neuralNetwork=new MultiLayerPerceptron(layersNeuronsCount,transferFunctionType);\n  neuralNetwork.setLabel(label);\n  PluginBase imageRecognitionPlugin=new ImageRecognitionPlugin(samplingResolution,colorMode);\n  neuralNetwork.addPlugin(imageRecognitionPlugin);\n  assignLabelsToOutputNeurons(neuralNetwork,imageLabels);\n  neuralNetwork.setLearningRule(new MomentumBackpropagation());\n  return neuralNetwork;\n}\n', '0.625', '10', '3');
INSERT INTO `case_study` VALUES ('1084', 'assignLabelsToOutputNeurons(NeuralNetwork,List<String>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageRecognitionHelper.java', 'neuroph', '7', '14', '7', '-1000', '3', '0.2857', '0.11', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '/** \n * Assign labels to output neurons\n * @param neuralNetwork neural network\n * @param imageLabels image labels\n */\nprivate static void assignLabelsToOutputNeurons(NeuralNetwork neuralNetwork,List<String> imageLabels){\n  List<Neuron> outputNeurons=neuralNetwork.getOutputNeurons();\n  for (int i=0; i < outputNeurons.size(); i++) {\n    Neuron neuron=outputNeurons.get(i);\n    String label=imageLabels.get(i);\n    neuron.setLabel(label);\n  }\n}\n', '1', '6', '2');
INSERT INTO `case_study` VALUES ('1086', 'createRGBTrainingSet(List<String>,Map<String,FractionRgbData>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageRecognitionHelper.java', 'neuroph', '13', '52', '26', '-1000', '3', '0.1795', '0.0889', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates training set for the specified image labels and rgb data\n * @param imageLabels image labels\n * @param rgbDataMap map collection of rgb data\n * @return training set for the specified image data\n */\npublic static DataSet createRGBTrainingSet(List<String> imageLabels,Map<String,FractionRgbData> rgbDataMap){\n  int inputCount=rgbDataMap.values().iterator().next().getFlattenedRgbValues().length;\n  int outputCount=imageLabels.size();\n  DataSet trainingSet=new DataSet(inputCount,outputCount);\n  for (  Entry<String,FractionRgbData> entry : rgbDataMap.entrySet()) {\n    double[] input=entry.getValue().getFlattenedRgbValues();\n    double[] response=createResponse(entry.getKey(),imageLabels);\n    trainingSet.addRow(new DataSetRow(input,response));\n  }\n  int inputSize=trainingSet.getInputSize();\n  for (int c=0; c < trainingSet.getOutputSize(); c++) {\n    trainingSet.setColumnName(inputSize + c,imageLabels.get(c));\n  }\n  return trainingSet;\n}\n', '0.42857142857142855', '11', '3');
INSERT INTO `case_study` VALUES ('1087', 'createHSLTrainingSet(List<String>,Map<String,FractionHSLData>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageRecognitionHelper.java', 'neuroph', '13', '52', '26', '-1000', '3', '0.1795', '0.0889', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates training set for the specified image labels and hsl data\n * @param imageLabels image labels\n * @param hslDataMap map colletction of hsl data\n * @return training set for the specified image data\n */\npublic static DataSet createHSLTrainingSet(List<String> imageLabels,Map<String,FractionHSLData> hslDataMap){\n  int inputCount=hslDataMap.values().iterator().next().getFlattenedHSLValues().length;\n  int outputCount=imageLabels.size();\n  DataSet trainingSet=new DataSet(inputCount,outputCount);\n  for (  Entry<String,FractionHSLData> entry : hslDataMap.entrySet()) {\n    double[] input=entry.getValue().getFlattenedHSLValues();\n    double[] response=createResponse(entry.getKey(),imageLabels);\n    trainingSet.addRow(new DataSetRow(input,response));\n  }\n  int inputSize=trainingSet.getInputSize();\n  for (int c=0; c < trainingSet.getOutputSize(); c++) {\n    trainingSet.setColumnName(inputSize + c,imageLabels.get(c));\n  }\n  return trainingSet;\n}\n', '0.42857142857142855', '11', '3');
INSERT INTO `case_study` VALUES ('1088', 'createBlackAndWhiteTrainingSet(List<String>,Map<String,FractionRgbData>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageRecognitionHelper.java', 'neuroph', '13', '51', '24', '-1000', '2', '0.1703', '0.0905', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates binary black and white training set for the specified image labels and rgb data\n * white = 0 black = 1\n * @param imageLabels image labels\n * @param rgbDataMap map collection of rgb data\n * @return binary black and white training set for the specified image data\n */\npublic static DataSet createBlackAndWhiteTrainingSet(List<String> imageLabels,Map<String,FractionRgbData> rgbDataMap) throws VectorSizeMismatchException {\n  int inputCount=rgbDataMap.values().iterator().next().getFlattenedRgbValues().length / 3;\n  int outputCount=imageLabels.size();\n  DataSet trainingSet=new DataSet(inputCount,outputCount);\n  for (  Entry<String,FractionRgbData> entry : rgbDataMap.entrySet()) {\n    double[] inputRGB=entry.getValue().getFlattenedRgbValues();\n    double[] inputBW=FractionRgbData.convertRgbInputToBinaryBlackAndWhite(inputRGB);\n    double[] response=createResponse(entry.getKey(),imageLabels);\n    trainingSet.addRow(new DataSetRow(inputBW,response));\n  }\n  int inputSize=trainingSet.getInputSize();\n  for (int c=0; c < trainingSet.getOutputSize(); c++) {\n    trainingSet.setColumnName(inputSize + c,imageLabels.get(c));\n  }\n  return trainingSet;\n}\n', '0.375', '12', '3');
INSERT INTO `case_study` VALUES ('1091', 'createResponse(String,List<String>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageRecognitionHelper.java', 'neuroph', '10', '33', '21', '-1000', '4', '0.24', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates binary network output vector (response) for the specified list of images\n * Each network output (neuron) corresponds to one image.\n * @param inputLabel label of the input image\n * @param imageLabels labels used for output neurons\n * @return network response for the specified input\n */\nprivate static double[] createResponse(String inputLabel,List<String> imageLabels){\n  double[] response=new double[imageLabels.size()];\n  int i=0;\n  for (  String imageLabel : imageLabels) {\n    if (inputLabel.startsWith(imageLabel)) {\n      response[i]=1d;\n    }\n else {\n      response[i]=0d;\n    }\n    i++;\n  }\n  return response;\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('1092', 'createLabels(HashMap<String,?>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageRecognitionHelper.java', 'neuroph', '10', '31', '17', '-1000', '3', '0.26', '0.1894', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private static List<String> createLabels(HashMap<String,?> map){\n  List<String> imageLabels=new ArrayList<String>();\n  for (  String imgName : map.keySet()) {\n    StringTokenizer st=new StringTokenizer(imgName,\"._\");\n    String imageLabel=st.nextToken();\n    if (!imageLabels.contains(imageLabel)) {\n      imageLabels.add(imageLabel);\n    }\n  }\n  Collections.sort(imageLabels);\n  return imageLabels;\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('1108', 'downSampleImage(Dimension,Image,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageSampler.java', 'neuroph', '27', '263', '175', '-1000', '2', '0.1132', '0.0834', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'public static Image downSampleImage(Dimension samplingResolution,Image image){\n  return downSampleImage(samplingResolution,image,ImageType.J2SE_TYPE_INT_RGB);\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('1114', 'blackAndWhiteCleaning(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '7', '11', '1', '-1000', '3', '0.5238', '0.2833', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '/** \n * This method cleans input image by replacing all non black pixels with\n * white pixels TODO: some should be used here\n * @param image - input image that will be cleaned\n * @return - cleaned input image as BufferedImage\n */\npublic static BufferedImage blackAndWhiteCleaning(BufferedImage image){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getRGB(i,j) != -16777216) {\n        image.setRGB(i,j,-1);\n      }\n    }\n  }\n  return image;\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1115', 'blackAndGrayCleaning(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '8', '13', '0', '-1000', '3', '0.5833', '0.3457', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * This method cleans input image by replacing all pixels with RGB values\n * from -4473925 (gray) to -1 (white) with white pixels and from -4473925\n * (gray) to -16777216 (black) with black pixels\n * @param image - input image that will be cleaned\n * @return - cleaned input image as BufferedImage\n */\npublic static BufferedImage blackAndGrayCleaning(BufferedImage image){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getRGB(i,j) > -4473925) {\n        image.setRGB(i,j,-1);\n      }\n else {\n        image.setRGB(i,j,-16777216);\n      }\n    }\n  }\n  return image;\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1116', 'blackAndLightGrayCleaning(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '8', '13', '0', '-1000', '3', '0.5833', '0.3457', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * This method cleans input image by replacing all pixels with RGB values\n * from -3092272 (light gray) to -1 (white) with white pixels and from\n * -3092272 (light gray) to -16777216 (black) with black pixels\n * @param image - input image that will be cleaned\n * @return - cleaned input image as BufferedImage\n */\npublic static BufferedImage blackAndLightGrayCleaning(BufferedImage image){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getRGB(i,j) > -4473925) {\n        image.setRGB(i,j,-1);\n      }\n else {\n        image.setRGB(i,j,-16777216);\n      }\n    }\n  }\n  return image;\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1117', 'colorCleaning(BufferedImage,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '8', '13', '0', '-1000', '3', '0.4688', '0.3117', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * This method cleans input image by replacing all pixels with RGB values\n * from RGBcolor input (the input color) to -1 (white) with white pixels and\n * from RGBcolor input (the input color) to -16777216 (black) with black\n * pixels\n * @param image - input image that will be cleaned\n * @param RGBcolor - input RGB value of wanted color as reference for\n * celaning\n * @return - cleaned input image as BufferedImage\n */\npublic static BufferedImage colorCleaning(BufferedImage image,int RGBcolor){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getRGB(i,j) == RGBcolor) {\n        image.setRGB(i,j,-16777216);\n      }\n else {\n        image.setRGB(i,j,-1);\n      }\n    }\n  }\n  return image;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('1118', 'loadAndCleanImage(File)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '6', '13', '11', '-1000', '4', '0.2222', '0.0476', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method loads the input Image and returns the cleaned version\n * @param file - input file that will be loaded as image\n * @return - return cleaned loaded image as BufferedImage\n */\npublic static BufferedImage loadAndCleanImage(File file){\n  try {\n    BufferedImage image=ImageIO.read(file);\n    return blackAndLightGrayCleaning(image);\n  }\n catch (  IOException ex) {\n    Logger.getLogger(ImageUtilities.class.getName()).log(Level.SEVERE,null,ex);\n    return null;\n  }\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('1121', 'trimLockup(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '6', '10', '5', '-1000', '3', '0.4444', '0.1786', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method reads the image pixels until it reads the first black pixel\n * by height and then returns that value\n * @param Img - input image that will be read\n * @return - returns the value of height when conditions are true\n */\nprivate static int trimLockup(BufferedImage img){\n  for (int j=0; j < img.getHeight(); j++) {\n    for (int i=0; i < img.getWidth(); i++) {\n      if (img.getRGB(i,j) == -16777216) {\n        return j;\n      }\n    }\n  }\n  return 0;\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1122', 'trimLockdown(BufferedImage,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '12', '37', '8', '-1000', '3', '0.3167', '0.2077', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '/** \n * This method reads the input image from the input from start pixel height\n * (y1) until it reads the first next row where all pixel are white by\n * height and return that value\n * @param Img - input image that will be read\n * @param y1 - input start height pixel of image\n * @return - returns the value of height when conditions are true\n */\nprivate static int trimLockdown(BufferedImage img,int y1){\n  for (int j=y1 + 1; j < img.getHeight(); j++) {\n    int counterWhite=0;\n    for (int i=0; i < img.getWidth(); i++) {\n      if (img.getRGB(i,j) == -1) {\n        counterWhite++;\n      }\n    }\n    if (counterWhite == img.getWidth()) {\n      if (j > (img.getHeight() / 2)) {\n        return j;\n      }\n    }\n    if (j == img.getHeight() - 1) {\n      return j + 1;\n    }\n  }\n  return 0;\n}\n', '0', '5', '7');
INSERT INTO `case_study` VALUES ('1123', 'trimImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '7', '14', '7', '-1000', '3', '0.3714', '0.1425', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method trims the input image and returns it as a BufferedImage\n * @param imageToTrim input image that will be trimed\n * @return return trimed input image as BufferedImage\n */\npublic static BufferedImage trimImage(BufferedImage imageToTrim){\n  int y1=trimLockup(imageToTrim);\n  int y2=trimLockdown(imageToTrim,y1);\n  int x1=0;\n  int x2=imageToTrim.getWidth();\n  return cropImage(imageToTrim,x1,y1,x2,y2);\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('1124', 'resizeImage(BufferedImage,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '7', '14', '7', '-1000', '3', '0.3143', '0.1217', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static Image resizeImage(Image image,int width,int height){\n  return image.resize(width,height);\n}\n', '1', '3', '1');
INSERT INTO `case_study` VALUES ('1128', 'colorToRGB(int,int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\ImageUtilities.java', 'neuroph', '10', '9', '0', '-1000', '2', '0.26', '0.4889', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static int colorToRGB(int alpha,int red,int green,int blue){\n  int newPixel=0;\n  newPixel+=alpha;\n  newPixel=newPixel << 8;\n  newPixel+=red;\n  newPixel=newPixel << 8;\n  newPixel+=green;\n  newPixel=newPixel << 8;\n  newPixel+=blue;\n  return newPixel;\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('1130', 'createNetwork(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\Adaline.java', 'neuroph', '19', '151', '131', '-1000', '8', '0.1012', '0.0408', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Creates adaline network architecture with specified number of input neurons\n * @param inputNeuronsCountnumber of neurons in input layer\n */\nprivate void createNetwork(int inputNeuronsCount){\n  this.setNetworkType(NeuralNetworkType.ADALINE);\n  NeuronProperties inNeuronProperties=new NeuronProperties();\n  inNeuronProperties.setProperty(\"transferFunction\",TransferFunctionType.LINEAR);\n  Layer inputLayer=new InputLayer(inputNeuronsCount);\n  inputLayer.addNeuron(new BiasNeuron());\n  this.addLayer(inputLayer);\n  NeuronProperties outNeuronProperties=new NeuronProperties();\n  outNeuronProperties.setProperty(\"transferFunction\",TransferFunctionType.LINEAR);\n  Layer outputLayer=LayerFactory.createLayer(1,outNeuronProperties);\n  this.addLayer(outputLayer);\n  ConnectionFactory.fullConnect(inputLayer,outputLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new LMS());\n}\n', '0.75', '5', '1');
INSERT INTO `case_study` VALUES ('1132', 'BAM(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\BAM.java', 'neuroph', '8', '7', '0', '-1000', '2', '0.2917', '0.3679', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '/** \n * Creates an instance of BAM network with specified number of neurons\n * in input and output layers.\n * @param inputNeuronsCountnumber of neurons in input layer\n * @param outputNeuronsCountnumber of neurons in output layer\n */\npublic BAM(int inputNeuronsCount,int outputNeuronsCount){\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"neuronType\",InputOutputNeuron.class);\n  neuronProperties.setProperty(\"bias\",new Double(0));\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.STEP);\n  neuronProperties.setProperty(\"transferFunction.yHigh\",new Double(1));\n  neuronProperties.setProperty(\"transferFunction.yLow\",new Double(0));\n  this.createNetwork(inputNeuronsCount,outputNeuronsCount,neuronProperties);\n}\n', '0.5', '3', '1');
INSERT INTO `case_study` VALUES ('1135', 'createNetwork(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\CompetitiveNetwork.java', 'neuroph', '14', '65', '39', '-1000', '2', '0.1381', '0.1064', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates Competitive network architecture\n * @param inputNeuronsCountinput neurons number\n * @param outputNeuronsCountoutput neurons number\n * @param neuronPropertiesneuron properties\n */\nprivate void createNetwork(int inputNeuronsCount,int outputNeuronsCount){\n  this.setNetworkType(NeuralNetworkType.COMPETITIVE);\n  Layer inputLayer=LayerFactory.createLayer(inputNeuronsCount,new NeuronProperties());\n  this.addLayer(inputLayer);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"neuronType\",CompetitiveNeuron.class);\n  neuronProperties.setProperty(\"inputFunction\",WeightedSum.class);\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.RAMP);\n  CompetitiveLayer competitiveLayer=new CompetitiveLayer(outputNeuronsCount,neuronProperties);\n  this.addLayer(competitiveLayer);\n  double competitiveWeight=-(1 / (double)outputNeuronsCount);\n  ConnectionFactory.fullConnect(competitiveLayer,competitiveWeight,1);\n  ConnectionFactory.fullConnect(inputLayer,competitiveLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new CompetitiveLearning());\n}\n', '0.7', '6', '1');
INSERT INTO `case_study` VALUES ('1149', 'createNetwork(int,int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\ElmanNetwork.java', 'neuroph', '19', '124', '77', '-1000', '3', '0.1257', '0.0863', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void createNetwork(int inputNeuronsCount,int hiddenNeuronsCount,int contextNeuronsCount,int outputNeuronsCount){\n  InputLayer inputLayer=new InputLayer(inputNeuronsCount);\n  inputLayer.addNeuron(new BiasNeuron());\n  addLayer(inputLayer);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.SIGMOID);\n  Layer hiddenLayer=new Layer(hiddenNeuronsCount,neuronProperties);\n  hiddenLayer.addNeuron(new BiasNeuron());\n  addLayer(hiddenLayer);\n  ConnectionFactory.fullConnect(inputLayer,hiddenLayer);\n  Layer contextLayer=new Layer(contextNeuronsCount,neuronProperties);\n  addLayer(contextLayer);\n  Layer outputLayer=new Layer(outputNeuronsCount,neuronProperties);\n  addLayer(outputLayer);\n  ConnectionFactory.fullConnect(hiddenLayer,outputLayer);\n  ConnectionFactory.forwardConnect(hiddenLayer,contextLayer);\n  ConnectionFactory.fullConnect(contextLayer,hiddenLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new BackPropagation());\n}\n', '0.6666666666666666', '9', '1');
INSERT INTO `case_study` VALUES ('1150', 'Hopfield(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\Hopfield.java', 'neuroph', '8', '7', '0', '-1000', '2', '0.325', '0.381', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '/** \n * Creates new Hopfield network with specified neuron number and neuron\n * properties\n * @param neuronsCountneurons number in Hopfied network\n * @param neuronPropertiesneuron properties\n */\npublic Hopfield(int neuronsCount,NeuronProperties neuronProperties){\n  this.createNetwork(neuronsCount,neuronProperties);\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('1154', 'createNetwork(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\Instar.java', 'neuroph', '11', '33', '11', '-1000', '2', '0.1901', '0.1288', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates Instar architecture with specified number of input neurons\n * @param inputNeuronsCountnumber of neurons in input layer\n */\nprivate void createNetwork(int inputNeuronsCount){\n  this.setNetworkType(NeuralNetworkType.INSTAR);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.STEP);\n  Layer inputLayer=LayerFactory.createLayer(inputNeuronsCount,neuronProperties);\n  this.addLayer(inputLayer);\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.STEP);\n  Layer outputLayer=LayerFactory.createLayer(1,neuronProperties);\n  this.addLayer(outputLayer);\n  ConnectionFactory.fullConnect(inputLayer,outputLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new InstarLearning());\n}\n', '0.6666666666666666', '4', '1');
INSERT INTO `case_study` VALUES ('1156', 'createNetwork(int,int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\JordanNetwork.java', 'neuroph', '19', '125', '79', '-1000', '3', '0.1257', '0.0801', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void createNetwork(int inputNeuronsCount,int hiddenNeuronsCount,int contextNeuronsCount,int outputNeuronsCount){\n  InputLayer inputLayer=new InputLayer(inputNeuronsCount);\n  inputLayer.addNeuron(new BiasNeuron());\n  addLayer(inputLayer);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.SIGMOID);\n  Layer hiddenLayer=new Layer(hiddenNeuronsCount,neuronProperties);\n  hiddenLayer.addNeuron(new BiasNeuron());\n  addLayer(hiddenLayer);\n  ConnectionFactory.fullConnect(inputLayer,hiddenLayer);\n  Layer contextLayer=new Layer(contextNeuronsCount,neuronProperties);\n  addLayer(contextLayer);\n  Layer outputLayer=new Layer(outputNeuronsCount,neuronProperties);\n  addLayer(outputLayer);\n  ConnectionFactory.fullConnect(hiddenLayer,outputLayer);\n  ConnectionFactory.fullConnect(outputLayer,contextLayer);\n  ConnectionFactory.fullConnect(contextLayer,hiddenLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new BackPropagation());\n}\n', '0.7272727272727273', '9', '1');
INSERT INTO `case_study` VALUES ('1158', 'createNetwork(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\Kohonen.java', 'neuroph', '8', '15', '2', '-1000', '2', '0.2083', '0.1116', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Creates Kohonen network architecture with specified number of neurons in\n * input and map layer\n * @param inputNeuronsCountnumber of neurons in input layer\n * @param outputNeuronsCountnumber of neurons in output layer\n */\nprivate void createNetwork(int inputNeuronsCount,int outputNeuronsCount){\n  NeuronProperties inputNeuronProperties=new NeuronProperties();\n  NeuronProperties outputNeuronProperties=new NeuronProperties(Neuron.class,Difference.class,Linear.class);\n  this.setNetworkType(NeuralNetworkType.KOHONEN);\n  Layer inLayer=LayerFactory.createLayer(inputNeuronsCount,inputNeuronProperties);\n  this.addLayer(inLayer);\n  Layer mapLayer=LayerFactory.createLayer(outputNeuronsCount,outputNeuronProperties);\n  this.addLayer(mapLayer);\n  ConnectionFactory.fullConnect(inLayer,mapLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new KohonenLearning());\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('1160', 'createNetwork(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\MaxNet.java', 'neuroph', '12', '46', '26', '-1000', '2', '0.1736', '0.0959', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates MaxNet network architecture\n * @param neuronNumneuron number in network\n * @param neuronPropertiesneuron properties\n */\nprivate void createNetwork(int neuronsCount){\n  this.setNetworkType(NeuralNetworkType.MAXNET);\n  Layer inputLayer=LayerFactory.createLayer(neuronsCount,new NeuronProperties());\n  this.addLayer(inputLayer);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"neuronType\",CompetitiveNeuron.class);\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.RAMP);\n  CompetitiveLayer competitiveLayer=new CompetitiveLayer(neuronsCount,neuronProperties);\n  this.addLayer(competitiveLayer);\n  double competitiveWeight=-(1 / (double)neuronsCount);\n  ConnectionFactory.fullConnect(competitiveLayer,competitiveWeight,1);\n  ConnectionFactory.forwardConnect(inputLayer,competitiveLayer,1);\n  NeuralNetworkFactory.setDefaultIO(this);\n}\n', '0.6666666666666666', '5', '1');
INSERT INTO `case_study` VALUES ('1166', 'createNetwork(List<Integer>,NeuronProperties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\MultiLayerPerceptron.java', 'neuroph', '23', '188', '123', '-1000', '3', '0.1223', '0.0926', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * Creates MultiLayerPerceptron Network architecture - fully connected\n * feed forward with specified number of neurons in each layer\n * @param neuronsInLayers  collection of neuron numbers in getLayersIterator\n * @param neuronProperties neuron properties\n */\nprivate void createNetwork(List<Integer> neuronsInLayers,NeuronProperties neuronProperties){\n  this.setNetworkType(NeuralNetworkType.MULTI_LAYER_PERCEPTRON);\n  NeuronProperties inputNeuronProperties=new NeuronProperties(InputNeuron.class,Linear.class);\n  Layer layer=LayerFactory.createLayer(neuronsInLayers.get(0),inputNeuronProperties);\n  boolean useBias=true;\n  if (neuronProperties.hasProperty(\"useBias\")) {\n    useBias=(Boolean)neuronProperties.getProperty(\"useBias\");\n  }\n  if (useBias) {\n    layer.addNeuron(new BiasNeuron());\n  }\n  this.addLayer(layer);\n  Layer prevLayer=layer;\n  for (int layerIdx=1; layerIdx < neuronsInLayers.size(); layerIdx++) {\n    Integer neuronsNum=neuronsInLayers.get(layerIdx);\n    layer=LayerFactory.createLayer(neuronsNum,neuronProperties);\n    if (useBias && (layerIdx < (neuronsInLayers.size() - 1))) {\n      layer.addNeuron(new BiasNeuron());\n    }\n    this.addLayer(layer);\n    if (prevLayer != null) {\n      ConnectionFactory.fullConnect(prevLayer,layer);\n    }\n    prevLayer=layer;\n  }\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new MomentumBackpropagation());\n  this.randomizeWeights(new RangeRandomizer(-0.7,0.7));\n}\n', '0.7142857142857143', '8', '7');
INSERT INTO `case_study` VALUES ('1170', 'createStudentNFR(int,List<Integer>,int,double[][],double[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\NeuroFuzzyPerceptron.java', 'neuroph', '70', '2193', '1971', '-1000', '5', '0.0465', '0.0325', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void createStudentNFR(int inputNum,List<Integer> inputSets,int outNum,double[][] pointsSets,double[][] timeSets){\n  this.setNetworkType(NeuralNetworkType.NEURO_FUZZY_REASONER);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  Layer inLayer=LayerFactory.createLayer(inputNum,neuronProperties);\n  this.addLayer(inLayer);\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.TRAPEZOID);\n  Iterator<Integer> e=inputSets.iterator();\n  int fuzzySetsNum=0;\n  while (e.hasNext()) {\n    Integer i=e.next();\n    fuzzySetsNum=fuzzySetsNum + i.intValue();\n  }\n  Layer setLayer=LayerFactory.createLayer(fuzzySetsNum,neuronProperties);\n  this.addLayer(setLayer);\n  Iterator<Integer> en;\n  int c=0;\n  for (  Neuron cell : setLayer.getNeurons()) {\n    Trapezoid tf=(Trapezoid)cell.getTransferFunction();\n    if (c <= 3) {\n      tf.setLeftLow(pointsSets[c][0]);\n      tf.setLeftHigh(pointsSets[c][1]);\n      tf.setRightLow(pointsSets[c][3]);\n      tf.setRightHigh(pointsSets[c][2]);\n    }\n else {\n      tf.setLeftLow(timeSets[c - 4][0]);\n      tf.setLeftHigh(timeSets[c - 4][1]);\n      tf.setRightLow(timeSets[c - 4][3]);\n      tf.setRightHigh(timeSets[c - 4][2]);\n    }\n    c++;\n  }\n  int s=0;\n  for (int i=0; i < inputNum; i++) {\n    Neuron from=inLayer.getNeuronAt(i);\n    int jmax=inputSets.get(i).intValue();\n    for (int j=0; j < jmax; j++) {\n      Neuron to=setLayer.getNeuronAt(s);\n      ConnectionFactory.createConnection(from,to,1);\n      s++;\n    }\n  }\n  NeuronProperties ruleNeuronProperties=new NeuronProperties(Neuron.class,WeightedSum.class,Linear.class);\n  en=inputSets.iterator();\n  int fuzzyAntNum=1;\n  while (en.hasNext()) {\n    Integer i=en.next();\n    fuzzyAntNum=fuzzyAntNum * i.intValue();\n  }\n  Layer ruleLayer=LayerFactory.createLayer(fuzzyAntNum,ruleNeuronProperties);\n  this.addLayer(ruleLayer);\n  int scIdx=0;\n  for (int i=0; i < inputNum; i++) {\n    int setsNum=inputSets.get(i).intValue();\n    for (int si=0; si < setsNum; si++) {\n      if (i == 0) {\n        Neuron from=setLayer.getNeuronAt(si);\n        int connPerCell=fuzzyAntNum / setsNum;\n        scIdx=si;\n        for (int k=0; k < connPerCell; k++) {\n          Neuron to=ruleLayer.getNeuronAt(si * connPerCell + k);\n          ConnectionFactory.createConnection(from,to,1);\n        }\n      }\n else {\n        scIdx++;\n        Neuron from=setLayer.getNeuronAt(scIdx);\n        int connPerCell=fuzzyAntNum / setsNum;\n        for (int k=0; k < connPerCell; k++) {\n          int toIdx=si + k * setsNum;\n          Neuron to=ruleLayer.getNeuronAt(toIdx);\n          ConnectionFactory.createConnection(from,to,1);\n        }\n      }\n    }\n  }\n  neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.STEP);\n  Layer outLayer=LayerFactory.createLayer(outNum,neuronProperties);\n  this.addLayer(outLayer);\n  ConnectionFactory.fullConnect(ruleLayer,outLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new LMS());\n}\n', '0.5294117647058824', '39', '12');
INSERT INTO `case_study` VALUES ('1171', 'createNetwork(int,Vector<Integer>,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\NeuroFuzzyPerceptron.java', 'neuroph', '66', '1968', '1791', '-1000', '11', '0.0437', '0.0259', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', '/** \n * Creates custom NFR architecture\n * @param inputNumnumber of getInputsIterator\n * @param inputSetsinput fuzzy sets\n * @param outNumnumber of outputs\n */\nprivate void createNetwork(int inputNum,Vector<Integer> inputSets,int outNum){\n  this.setNetworkType(NeuralNetworkType.NEURO_FUZZY_REASONER);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  Layer inLayer=LayerFactory.createLayer(inputNum,neuronProperties);\n  this.addLayer(inLayer);\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.TRAPEZOID);\n  Enumeration<Integer> e=inputSets.elements();\n  int fuzzySetsNum=0;\n  while (e.hasMoreElements()) {\n    Integer i=e.nextElement();\n    fuzzySetsNum=fuzzySetsNum + i.intValue();\n  }\n  Layer setLayer=LayerFactory.createLayer(fuzzySetsNum,neuronProperties);\n  this.addLayer(setLayer);\n  Enumeration<Integer> en;\n  int c=0;\n  for (  Neuron cell : setLayer.getNeurons()) {\n    Trapezoid tf=(Trapezoid)cell.getTransferFunction();\n  }\n  int s=0;\n  for (int i=0; i < inputNum; i++) {\n    Neuron from=inLayer.getNeuronAt(i);\n    int jmax=inputSets.elementAt(i).intValue();\n    for (int j=0; j < jmax; j++) {\n      Neuron to=setLayer.getNeuronAt(s);\n      ConnectionFactory.createConnection(from,to,1);\n      s++;\n    }\n  }\n  neuronProperties.setProperty(\"inputFunction\",Min.class);\n  neuronProperties.setProperty(\"transferFunction\",Linear.class);\n  en=inputSets.elements();\n  int fuzzyAntNum=1;\n  while (en.hasMoreElements()) {\n    Integer i=en.nextElement();\n    fuzzyAntNum=fuzzyAntNum * i.intValue();\n  }\n  Layer ruleLayer=LayerFactory.createLayer(fuzzyAntNum,neuronProperties);\n  this.addLayer(ruleLayer);\n  int scIdx=0;\n  for (int i=0; i < inputNum; i++) {\n    int setsNum=inputSets.elementAt(i).intValue();\n    for (int si=0; si < setsNum; si++) {\n      if (i == 0) {\n        Neuron from=setLayer.getNeuronAt(si);\n        int connPerCell=fuzzyAntNum / setsNum;\n        scIdx=si;\n        for (int k=0; k < connPerCell; k++) {\n          Neuron to=ruleLayer.getNeuronAt(si * connPerCell + k);\n          ConnectionFactory.createConnection(from,to,1);\n        }\n      }\n else {\n        scIdx++;\n        Neuron from=setLayer.getNeuronAt(scIdx);\n        int connPerCell=fuzzyAntNum / setsNum;\n        for (int k=0; k < connPerCell; k++) {\n          int toIdx=si + k * setsNum;\n          Neuron to=ruleLayer.getNeuronAt(toIdx);\n          ConnectionFactory.createConnection(from,to,1);\n        }\n      }\n    }\n  }\n  neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.STEP);\n  Layer outLayer=LayerFactory.createLayer(outNum,neuronProperties);\n  this.addLayer(outLayer);\n  ConnectionFactory.fullConnect(ruleLayer,outLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new LMS());\n}\n', '0.6153846153846154', '36', '11');
INSERT INTO `case_study` VALUES ('1173', 'createNetwork(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\Outstar.java', 'neuroph', '11', '33', '11', '-1000', '2', '0.1901', '0.1288', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates Outstar architecture with specified number of neurons in \n * output layer\n * @param outputNeuronsCountnumber of neurons in output layer\n */\nprivate void createNetwork(int outputNeuronsCount){\n  this.setNetworkType(NeuralNetworkType.OUTSTAR);\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.STEP);\n  Layer inputLayer=LayerFactory.createLayer(1,neuronProperties);\n  this.addLayer(inputLayer);\n  neuronProperties.setProperty(\"transferFunction\",TransferFunctionType.RAMP);\n  Layer outputLayer=LayerFactory.createLayer(outputNeuronsCount,neuronProperties);\n  this.addLayer(outputLayer);\n  ConnectionFactory.fullConnect(inputLayer,outputLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new OutstarLearning());\n}\n', '0.6666666666666666', '4', '1');
INSERT INTO `case_study` VALUES ('1176', 'createNetwork(int,int,TransferFunctionType)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\Perceptron.java', 'neuroph', '12', '39', '12', '-1000', '1', '0.1471', '0.1144', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates perceptron architecture with specified number of neurons in input\n * and output layer, specified transfer function\n * @param inputNeuronsCountnumber of neurons in input layer\n * @param outputNeuronsCountnumber of neurons in output layer\n * @param transferFunctionTypeneuron transfer function type\n */\nprivate void createNetwork(int inputNeuronsCount,int outputNeuronsCount,TransferFunctionType transferFunctionType){\n  this.setNetworkType(NeuralNetworkType.PERCEPTRON);\n  Layer inputLayer=new InputLayer(inputNeuronsCount);\n  this.addLayer(inputLayer);\n  NeuronProperties outputNeuronProperties=new NeuronProperties();\n  outputNeuronProperties.setProperty(\"neuronType\",ThresholdNeuron.class);\n  outputNeuronProperties.setProperty(\"thresh\",new Double(Math.abs(Math.random())));\n  outputNeuronProperties.setProperty(\"transferFunction\",transferFunctionType);\n  outputNeuronProperties.setProperty(\"transferFunction.slope\",new Double(1));\n  Layer outputLayer=LayerFactory.createLayer(outputNeuronsCount,outputNeuronProperties);\n  this.addLayer(outputLayer);\n  ConnectionFactory.fullConnect(inputLayer,outputLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new BinaryDeltaRule());\n}\n', '0.7', '6', '1');
INSERT INTO `case_study` VALUES ('1178', 'createNetwork(int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\RBFNetwork.java', 'neuroph', '15', '69', '33', '-1000', '2', '0.1524', '0.1095', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates RBFNetwork architecture with specified number of neurons in input\n * layer, output layer and transfer function\n * @param inputNeuronsCountnumber of neurons in input layer\n * @param rbfNeuronsCountnumber of neurons in rbf layer\n * @param outputNeuronsCountnumber of neurons in output layer\n */\nprivate void createNetwork(int inputNeuronsCount,int rbfNeuronsCount,int outputNeuronsCount){\n  NeuronProperties rbfNeuronProperties=new NeuronProperties();\n  rbfNeuronProperties.setProperty(\"inputFunction\",Difference.class);\n  rbfNeuronProperties.setProperty(\"transferFunction\",Gaussian.class);\n  this.setNetworkType(NeuralNetworkType.RBF_NETWORK);\n  Layer inputLayer=LayerFactory.createLayer(inputNeuronsCount,TransferFunctionType.LINEAR);\n  this.addLayer(inputLayer);\n  Layer rbfLayer=LayerFactory.createLayer(rbfNeuronsCount,rbfNeuronProperties);\n  this.addLayer(rbfLayer);\n  Layer outputLayer=LayerFactory.createLayer(outputNeuronsCount,TransferFunctionType.LINEAR);\n  this.addLayer(outputLayer);\n  ConnectionFactory.fullConnect(inputLayer,rbfLayer);\n  ConnectionFactory.fullConnect(rbfLayer,outputLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new RBFLearning());\n}\n', '0.6666666666666666', '7', '1');
INSERT INTO `case_study` VALUES ('1181', 'createNetwork(int,int,TransferFunctionType)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\SupervisedHebbianNetwork.java', 'neuroph', '16', '68', '16', '-1000', '2', '0.1473', '0.1624', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates an instance of Supervised Hebbian Network with specified number\n * of neurons in input layer, output layer and transfer function\n * @param inputNeuronsNumnumber of neurons in input layer\n * @param outputNeuronsNumnumber of neurons in output layer\n * @param transferFunctionTypetransfer function type\n */\nprivate void createNetwork(int inputNeuronsNum,int outputNeuronsNum,TransferFunctionType transferFunctionType){\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",transferFunctionType);\n  neuronProperties.setProperty(\"transferFunction.slope\",new Double(1));\n  neuronProperties.setProperty(\"transferFunction.yHigh\",new Double(1));\n  neuronProperties.setProperty(\"transferFunction.xHigh\",new Double(1));\n  neuronProperties.setProperty(\"transferFunction.yLow\",new Double(-1));\n  neuronProperties.setProperty(\"transferFunction.xLow\",new Double(-1));\n  this.setNetworkType(NeuralNetworkType.SUPERVISED_HEBBIAN_NET);\n  Layer inputLayer=LayerFactory.createLayer(inputNeuronsNum,neuronProperties);\n  this.addLayer(inputLayer);\n  Layer outputLayer=LayerFactory.createLayer(outputNeuronsNum,neuronProperties);\n  this.addLayer(outputLayer);\n  ConnectionFactory.fullConnect(inputLayer,outputLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new SupervisedHebbianLearning());\n}\n', '0.6666666666666666', '6', '1');
INSERT INTO `case_study` VALUES ('1184', 'createNetwork(int,int,TransferFunctionType)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\UnsupervisedHebbianNetwork.java', 'neuroph', '11', '33', '11', '-1000', '2', '0.1748', '0.1142', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates an instance of Unsuervised Hebian net with specified number\n * of neurons in input layer and output layer, and transfer function\n * @param inputNeuronsNumnumber of neurons in input layer\n * @param outputNeuronsNumnumber of neurons in output layer\n * @param transferFunctionTypetransfer function type\n */\nprivate void createNetwork(int inputNeuronsNum,int outputNeuronsNum,TransferFunctionType transferFunctionType){\n  NeuronProperties neuronProperties=new NeuronProperties();\n  neuronProperties.setProperty(\"transferFunction\",transferFunctionType);\n  neuronProperties.setProperty(\"transferFunction.slope\",new Double(1));\n  this.setNetworkType(NeuralNetworkType.UNSUPERVISED_HEBBIAN_NET);\n  Layer inputLayer=LayerFactory.createLayer(inputNeuronsNum,neuronProperties);\n  this.addLayer(inputLayer);\n  Layer outputLayer=LayerFactory.createLayer(outputNeuronsNum,neuronProperties);\n  this.addLayer(outputLayer);\n  ConnectionFactory.fullConnect(inputLayer,outputLayer);\n  NeuralNetworkFactory.setDefaultIO(this);\n  this.setLearningRule(new UnsupervisedHebbianLearning());\n}\n', '0.6666666666666666', '6', '1');
INSERT INTO `case_study` VALUES ('1187', 'findCropTopY()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\CharExtractor.java', 'neuroph', '7', '16', '11', '-1000', '4', '0.2449', '0.085', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method scans image pixels until it finds the first black pixel (TODO: use foreground color which is black by default).\n * When it finds black pixel, it sets cropTopY and returns true. if it reaches end of image and does not find black pixels, \n * it sets endOfImage flag and returns false.\n * @return - returns true when black pixel is found and cropTopY value is changed, and false if cropTopY value is not changed\n */\nprivate boolean findCropTopY(){\n  for (int y=cropBottomY; y < imageWithChars.getHeight(); y++) {\n    for (int x=cropLeftX; x < imageWithChars.getWidth(); x++) {\n      if (imageWithChars.getRGB(x,y) == -16777216) {\n        this.cropTopY=y;\n        return true;\n      }\n    }\n  }\n  endOfImage=true;\n  return false;\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1188', 'findCropBottomY()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\CharExtractor.java', 'neuroph', '12', '46', '26', '-1000', '4', '0.2083', '0.1313', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * This method scans image pixels until it finds first row with white pixels. (TODO: background color which is white by default).\n * When it finds line whith all white pixels, it sets cropBottomY and returns true\n * @return - returns true when cropBottomY value is set, false otherwise\n */\nprivate boolean findCropBottomY(){\n  for (int y=cropTopY + 1; y < imageWithChars.getHeight(); y++) {\n    int whitePixCounter=0;\n    for (int x=cropLeftX; x < imageWithChars.getWidth(); x++) {\n      if (imageWithChars.getRGB(x,y) == -1) {\n        whitePixCounter++;\n      }\n    }\n    if (whitePixCounter == imageWithChars.getWidth()) {\n      cropBottomY=y;\n      return true;\n    }\n    if (y == imageWithChars.getHeight() - 1) {\n      cropBottomY=y;\n      endOfImage=true;\n      return true;\n    }\n  }\n  return false;\n}\n', '0', '3', '6');
INSERT INTO `case_study` VALUES ('1189', 'findCropLeftX()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\CharExtractor.java', 'neuroph', '11', '45', '35', '-1000', '5', '0.1616', '0.1333', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', '/** \n * This method scans image pixels to the right  until it finds first black pixel, or reach end of row.\n * When black pixel is found it sets cropLeftX and returns true. It should set cropLeftX to the next letter in a row.\n * @return - return true when true when black pixel is found and cropLeftX is changed, false otherwise\n */\nprivate boolean findCropLeftX(){\n  int whitePixCounter=0;\n  for (int x=cropRightX; x < imageWithChars.getWidth(); x++) {\n    for (int y=cropTopY; y <= cropBottomY; y++) {\n      if (imageWithChars.getRGB(x,y) == -16777216) {\n        cropLeftX=x;\n        return true;\n      }\n    }\n    whitePixCounter++;\n    if (whitePixCounter == 3) {\n      whitePixCounter=0;\n    }\n  }\n  endOfRow=true;\n  return false;\n}\n', '0', '3', '5');
INSERT INTO `case_study` VALUES ('1190', 'findCropRightX()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\CharExtractor.java', 'neuroph', '12', '50', '34', '-1000', '4', '0.1917', '0.0933', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * This method scans image pixels to the right until it finds next row where all pixel are white, y1 and y2.\n * TODO: resiti broblem tolerancije n aboju bacgrounda kada ima prelaz...\n * @return - return true  when x2 value is changed and false when x2 value is not changed\n */\nprivate boolean findCropRightX(){\n  for (int x=cropLeftX + 1; x < imageWithChars.getWidth(); x++) {\n    int whitePixCounter=0;\n    for (int y=cropTopY; y <= cropBottomY; y++) {\n      if (imageWithChars.getRGB(x,y) == -1) {\n        whitePixCounter++;\n      }\n    }\n    int heightPixels=cropBottomY - cropTopY;\n    if (whitePixCounter == heightPixels + 1) {\n      cropRightX=x;\n      return true;\n    }\n    if (x == imageWithChars.getWidth() - 1) {\n      cropRightX=x;\n      endOfRow=true;\n      return true;\n    }\n  }\n  return false;\n}\n', '0', '4', '6');
INSERT INTO `case_study` VALUES ('1191', 'extractCharImagesToLearn(BufferedImage,List<String>,Dimension)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\CharExtractor.java', 'neuroph', '41', '776', '732', '-1000', '17', '0.0637', '0.026', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', '/** \n * Creates HashMap with characters as keys and BufferedImages as values\n * @param Dimensions to which output char images has to be resized to\n * @param list of letters which are names of images\n * @return HashMap with characters as keys and char images as values\n * This method returns HashMap with characters as keys and char images as values\n */\npublic HashMap<String,BufferedImage> extractCharImagesToLearn(BufferedImage imageWithText,List<String> chars,Dimension dim){\n  this.imageWithChars=imageWithText;\n  HashMap<String,BufferedImage> charImages=new HashMap<String,BufferedImage>();\n  int i=0;\n  while (endOfImage == false) {\n    endOfRow=false;\n    boolean foundTop=findCropTopY();\n    boolean foundBottom=false;\n    if (foundTop == true) {\n      foundBottom=findCropBottomY();\n      if (foundBottom == true) {\n        while (endOfRow == false) {\n          boolean foundLeft=false;\n          boolean foundRight=false;\n          foundLeft=findCropLeftX();\n          if (foundLeft == true) {\n            foundRight=findCropRightX();\n            if (foundRight == true) {\n              BufferedImage charImage=ImageUtilities.cropImage(imageWithText,cropLeftX,cropTopY,cropRightX,cropBottomY);\n              charImage=ImageUtilities.trimImage(charImage);\n              charImage=ImageUtilities.resizeImage(charImage,dim.getWidth(),dim.getHeight());\n              charImages.put(chars.get(i),charImage);\n              i++;\n            }\n          }\n        }\n        cropLeftX=0;\n        cropRightX=0;\n      }\n    }\n  }\n  cropTopY=0;\n  cropBottomY=0;\n  endOfImage=false;\n  return charImages;\n}\n', '0.4', '11', '7');
INSERT INTO `case_study` VALUES ('1192', 'extractCharImagesToRecognize()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\CharExtractor.java', 'neuroph', '27', '315', '279', '-1000', '7', '0.0903', '0.0501', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Extracts and returns char images to recognize as list of images\n * @return \n */\npublic List<BufferedImage> extractCharImagesToRecognize(){\n  List<BufferedImage> trimedImages=new ArrayList<BufferedImage>();\n  int i=0;\n  while (endOfImage == false) {\n    endOfRow=false;\n    boolean foundTop=findCropTopY();\n    boolean foundBottom=false;\n    if (foundTop == true) {\n      foundBottom=findCropBottomY();\n      if (foundBottom == true) {\n        while (endOfRow == false) {\n          boolean foundLeft=false;\n          boolean foundRight=false;\n          foundLeft=findCropLeftX();\n          if (foundLeft == true) {\n            foundRight=findCropRightX();\n            if (foundRight == true) {\n              BufferedImage image=ImageUtilities.trimImage(ImageUtilities.cropImage(imageWithChars,cropLeftX,cropTopY,cropRightX,cropBottomY));\n              trimedImages.add(image);\n              i++;\n            }\n          }\n        }\n        cropLeftX=0;\n        cropRightX=0;\n      }\n    }\n  }\n  cropTopY=0;\n  cropBottomY=0;\n  endOfImage=false;\n  return trimedImages;\n}\n', '0.5', '7', '7');
INSERT INTO `case_study` VALUES ('1194', 'createTrainingSet(String,BufferedImage,String,Dimension,List<String>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrHelper.java', 'neuroph', '40', '752', '724', '-1000', '24', '0.0513', '0.0186', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', '/** \n * Create training set \n * @param imageWithChars\n * @param chars\n * @param scaleToDim\n * @param trainingSetName \n */\npublic static DataSet createTrainingSet(String trainingSetName,BufferedImage imageWithChars,String chars,Dimension scaleToDim,List<String> imageLabels){\n  List<String> charList=Arrays.asList(chars.split(\" \"));\n  CharExtractor charExtractor=new CharExtractor(imageWithChars);\n  HashMap<String,BufferedImage> charImageMap=charExtractor.extractCharImagesToLearn(imageWithChars,charList,scaleToDim);\n  for (  String imgName : charImageMap.keySet()) {\n    StringTokenizer st=new StringTokenizer(imgName,\"._\");\n    String imgLabel=st.nextToken();\n    if (!imageLabels.contains(imgLabel)) {\n      imageLabels.add(imgLabel);\n    }\n  }\n  Collections.sort(imageLabels);\n  Map<String,FractionRgbData> imageRgbData=ImageUtilities.getFractionRgbDataForImages(charImageMap);\n  BufferedImage allWhite=new BufferedImage(scaleToDim.getWidth(),scaleToDim.getHeight(),BufferedImage.TYPE_INT_RGB);\n  Graphics g=allWhite.getGraphics();\n  g.setColor(Color.WHITE);\n  g.fillRect(0,0,allWhite.getWidth(),allWhite.getHeight());\n  imageRgbData.put(\"allWhite\",new FractionRgbData(allWhite));\n  DataSet dataSet=ImageRecognitionHelper.createBlackAndWhiteTrainingSet(imageLabels,imageRgbData);\n  dataSet.setLabel(trainingSetName);\n  return dataSet;\n}\n', '0.75', '15', '3');
INSERT INTO `case_study` VALUES ('1195', 'recognizeText(NeuralNetwork,BufferedImage,Dimension)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrHelper.java', 'neuroph', '6', '12', '9', '-1000', '3', '0.25', '0.056', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Recognize characters in given text images and returns character list\n * @param neuralNet\n * @param image\n * @param charDimension\n * @return \n */\npublic static List<Character> recognizeText(NeuralNetwork neuralNet,BufferedImage image,Dimension charDimension){\n  CharExtractor charExtractor=new CharExtractor(image);\n  List<BufferedImage> charImages=charExtractor.extractCharImagesToRecognize();\n  List<Character> characters=recognize(neuralNet,charImages,charDimension);\n  return characters;\n}\n', '1', '7', '2');
INSERT INTO `case_study` VALUES ('1202', 'sortHashMapByValues(HashMap)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrPlugin.java', 'neuroph', '22', '194', '157', '-1000', '3', '0.1224', '0.0709', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '/** \n * This private method sorts the result of the recogntion, in order to\n * see which letter has the highest probability\n * @param passedMap the HashMap that holds the resault of the recognition process\n * @return LinkedHashMap that represents the combination of letters with the\n * probability of the correct recognition\n */\nprivate LinkedHashMap sortHashMapByValues(HashMap passedMap){\n  List mapKeys=new ArrayList(passedMap.keySet());\n  List mapValues=new ArrayList(passedMap.values());\n  Collections.sort(mapValues);\n  Collections.sort(mapKeys);\n  Collections.reverse(mapValues);\n  LinkedHashMap sortedMap=new LinkedHashMap();\n  Iterator valueIt=mapValues.iterator();\n  while (valueIt.hasNext()) {\n    Object val=valueIt.next();\n    Iterator keyIt=mapKeys.iterator();\n    while (keyIt.hasNext()) {\n      Object key=keyIt.next();\n      String comp1=passedMap.get(key).toString();\n      String comp2=val.toString();\n      if (comp1.equals(comp2)) {\n        passedMap.remove(key);\n        mapKeys.remove(key);\n        Character charKey=Character.valueOf(key.toString().charAt(0));\n        sortedMap.put(charKey,(Double)val);\n        break;\n      }\n    }\n  }\n  return sortedMap;\n}\n', '0', '11', '4');
INSERT INTO `case_study` VALUES ('1205', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrSample.java', 'neuroph', '7', '17', '13', '-1000', '3', '0.2381', '0.0583', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static void main(String[] args){\n  NeuralNetwork nnet=NeuralNetwork.load(\"C:\\\\Users\\\\zoran\\\\Desktop\\\\nn.nnet\");\n  OcrPlugin ocrPlugin=(OcrPlugin)nnet.getPlugin(OcrPlugin.class);\n  Image charImage=ImageFactory.getImage(\"C:\\\\Users\\\\zoran\\\\Desktop\\\\Letters\\\\A.png\");\n  Character ch=ocrPlugin.recognizeCharacter(charImage);\n  System.out.println(ch);\n}\n', '0.75', '5', '1');
INSERT INTO `case_study` VALUES ('1210', 'recognize()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTextRecognition.java', 'neuroph', '11', '46', '37', '-1000', '4', '0.1717', '0.0583', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * recognize the text on the image (document)\n */\npublic void recognize(){\n  int imageHeight=image.getHeight();\n  int imageWidth=image.getWidth();\n  visited=new boolean[imageHeight][imageWidth];\n  text=\"\";\n  for (int i=0; i < textInformation.numberOfRows(); i++) {\n    String rowText=recognizeRow(i);\n    if (!rowText.isEmpty()) {\n      text+=rowText + \"\\n\";\n    }\n  }\n  visited=null;\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('1211', 'recognizeRow(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTextRecognition.java', 'neuroph', '12', '40', '14', '-1000', '2', '0.25', '0.171', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private String recognizeRow(int row){\n  String rowText=\"\";\n  List<WordPosition> words=textInformation.getWordsAtRow(row);\n  for (int i=0; i < words.size(); i++) {\n    int rowPixel=textInformation.getRowAt(row);\n    WordPosition word=words.get(i);\n    rowText+=recognizeWord(word,rowPixel);\n    if ((i + 1) == words.size()) {\n      rowText+=addSpaces(word,null);\n    }\n else {\n      WordPosition next=words.get(i + 1);\n      rowText+=addSpaces(word,next);\n    }\n  }\n  return rowText;\n}\n', '0.5', '7', '3');
INSERT INTO `case_study` VALUES ('1212', 'recognizeWord(WordPosition,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTextRecognition.java', 'neuroph', '32', '443', '390', '-1000', '9', '0.0775', '0.0331', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'private String recognizeWord(WordPosition word,int rowPixel){\n  String wordText=\"\";\n  int tmpWidth=3 * letterInformation.getCropWidth();\n  int tmpHeight=3 * letterInformation.getCropHeight();\n  int trashsize=letterInformation.getTrashSize();\n  OCRExtractLetter extractionLetter=new OCRExtractLetter(tmpWidth,tmpHeight,trashsize);\n  int letterSize=letterInformation.getLetterSize();\n  int start=word.getStartPixel();\n  int end=word.getEndPixel();\n  Color white=Color.WHITE;\n  Color color;\n  for (int j=start; j < end; j++) {\n    for (int k=-(letterSize / 4); k < (letterSize / 4); k++) {\n      int i=rowPixel + k;\n      if (i < 0 || i > image.getHeight()) {\n        continue;\n      }\n      color=new Color(image.getRGB(j,i));\n      if (color.equals(white)) {\n        visited[i][j]=true;\n      }\n else       if (visited[i][j] == false) {\n        BufferedImage letter=extractionLetter.extraxtLetter(image,visited,i,j);\n        if (letter != null) {\n          OCRCropLetter crop=new OCRCropLetter(letter,letterInformation.getCropWidth(),letterInformation.getCropHeight());\n          BufferedImage croped=crop.processImage();\n          wordText+=recognizeLetter(croped);\n        }\n      }\n    }\n  }\n  return wordText;\n}\n', '0.4', '18', '8');
INSERT INTO `case_study` VALUES ('1214', 'addSpaces(WordPosition,WordPosition)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTextRecognition.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.1905', '0.1081', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private String addSpaces(WordPosition first,WordPosition second){\n  if (second == null) {\n    return \"\";\n  }\n  String space=\"\";\n  int gap=second.getStartPixel() - first.getEndPixel();\n  int num=gap / letterInformation.getSpaceGap();\n  for (int i=0; i < num; i++) {\n    space+=\" \";\n  }\n  return space;\n}\n', '0.6666666666666666', '6', '3');
INSERT INTO `case_study` VALUES ('1216', 'saveText()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTextRecognition.java', 'neuroph', '13', '65', '52', '-1000', '4', '0.1635', '0.0962', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * save the recognized text to the file specified earlier in location folder\n */\npublic void saveText(){\n  try {\n    File file=new File(recognizedTextPath);\n    if (!file.exists()) {\n      file.createNewFile();\n    }\n    String[] lines=text.split(\"\\n\");\n    FileWriter fw=new FileWriter(file.getAbsoluteFile());\n    BufferedWriter bw=new BufferedWriter(fw);\n    for (    String line : lines) {\n      bw.write(line);\n      bw.newLine();\n    }\n    bw.close();\n  }\n catch (  IOException ex) {\n    ex.printStackTrace();\n  }\n}\n', '0', '6', '4');
INSERT INTO `case_study` VALUES ('1226', 'createCharacterLabels()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTraining.java', 'neuroph', '7', '14', '7', '-1000', '3', '0.3929', '0.1583', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void createCharacterLabels(){\n  characterLabels=new ArrayList<String>();\n  for (int i=0; i < trainingText.length(); i++) {\n    String c=trainingText.charAt(i) + \"\";\n    if (!characterLabels.contains(c)) {\n      characterLabels.add(trainingText.charAt(i) + \"\");\n    }\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('1227', 'prepateText()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTraining.java', 'neuroph', '8', '19', '10', '-1000', '3', '0.3', '0.1265', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void prepateText(){\n  String tmp=\"\";\n  for (int i=0; i < trainingText.length(); i++) {\n    char c=trainingText.charAt(i);\n    if ((!Character.isSpaceChar(c)) && (!Character.isWhitespace(c))) {\n      tmp+=c;\n    }\n  }\n  trainingText=tmp;\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1228', 'createImagesWithLetters()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OCRTraining.java', 'neuroph', '39', '670', '599', '-1000', '9', '0.0611', '0.0267', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', 'private void createImagesWithLetters(){\n  int cropWidth=letterInformation.getCropWidth();\n  int cropHeight=letterInformation.getCropHeight();\n  int tmpWidth=3 * cropWidth;\n  int tmpHeight=3 * cropHeight;\n  int trashSize=letterInformation.getTrashSize();\n  OCRExtractLetter extractionLetter=new OCRExtractLetter(tmpWidth,tmpHeight,trashSize);\n  int letterSize=letterInformation.getLetterSize();\n  int imageHeight=image.getHeight();\n  int imageWidth=image.getWidth();\n  boolean[][] visited=new boolean[imageHeight][imageWidth];\n  Color white=Color.WHITE;\n  Color color;\n  int seqNum=0;\n  for (int line=0; line < textInformation.numberOfRows(); line++) {\n    for (int j=0; j < imageWidth; j++) {\n      for (int k=-(letterSize / 4); k < (letterSize / 4); k++) {\n        int rowPixel=textInformation.getRowAt(line);\n        int i=rowPixel + k;\n        if (i < 0 || i >= imageHeight) {\n          continue;\n        }\n        color=new Color(image.getRGB(j,i));\n        if (color.equals(white)) {\n          visited[i][j]=true;\n        }\n else         if (visited[i][j] == false) {\n          BufferedImage letter=extractionLetter.extraxtLetter(image,visited,i,j);\n          if (letter != null) {\n            OCRCropLetter crop=new OCRCropLetter(letter,cropWidth,cropHeight);\n            BufferedImage croped=crop.processImage();\n            String character=trainingText.charAt(seqNum) + \"\";\n            String name=character + \"_\" + seqNum;\n            OCRUtilities.saveToFile(croped,folderPath,name,imageExtension);\n            seqNum++;\n          }\n        }\n      }\n    }\n  }\n}\n', '0.45454545454545453', '23', '9');
INSERT INTO `case_study` VALUES ('1229', 'blackAndWhiteCleaning(Image)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrUtils.java', 'neuroph', '7', '11', '1', '-1000', '3', '0.5238', '0.2833', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '/** \n * This method cleans input image by replacing\n * all non black pixels with white pixels\n * @param image - input image that will be cleaned\n * @return - cleaned input image as BufferedImage\n */\npublic static Image blackAndWhiteCleaning(Image image){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getPixel(i,j) != -16777216) {\n        image.setPixel(i,j,-1);\n      }\n    }\n  }\n  return image;\n}\n', '0.25', '3', '4');
INSERT INTO `case_study` VALUES ('1230', 'blackAndGrayCleaning(Image)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrUtils.java', 'neuroph', '8', '13', '0', '-1000', '3', '0.5833', '0.3457', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * This method cleans input image by replacing all pixels with RGB values\n * from -4473925 (gray) to -1 (white) with white pixels and\n * from -4473925 (gray) to -16777216 (black) with black pixels\n * @param image - input image that will be cleaned\n * @return - cleaned input image as BufferedImage\n */\npublic static Image blackAndGrayCleaning(Image image){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getPixel(i,j) > -4473925) {\n        image.setPixel(i,j,-1);\n      }\n else {\n        image.setPixel(i,j,-16777216);\n      }\n    }\n  }\n  return image;\n}\n', '0.25', '3', '4');
INSERT INTO `case_study` VALUES ('1231', 'blackAndLightGrayCleaning(Image)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrUtils.java', 'neuroph', '8', '13', '0', '-1000', '3', '0.5833', '0.3457', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * This method cleans input image by replacing all pixels with RGB values\n * from -3092272 (light gray) to -1 (white) with white pixels and\n * from -3092272 (light gray) to -16777216 (black) with black pixels\n * @param image - input image that will be cleaned\n * @return - cleaned input image as BufferedImage\n */\npublic static Image blackAndLightGrayCleaning(Image image){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getPixel(i,j) > -4473925) {\n        image.setPixel(i,j,-1);\n      }\n else {\n        image.setPixel(i,j,-16777216);\n      }\n    }\n  }\n  return image;\n}\n', '0.25', '3', '4');
INSERT INTO `case_study` VALUES ('1232', 'colorCleaning(Image,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrUtils.java', 'neuroph', '8', '13', '0', '-1000', '3', '0.4688', '0.3117', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * This method cleans input image by replacing all pixels with RGB values\n * from RGBcolor input (the input color) to -1 (white) with white pixels and\n * from RGBcolor input (the input color) to -16777216 (black) with black pixels\n * @param image - input image that will be cleaned\n * @param RGBcolor - input RGB value of wanted color as reference for celaning\n * @return - cleaned input image as BufferedImage\n */\npublic static Image colorCleaning(Image image,int RGBcolor){\n  for (int j=0; j < image.getHeight(); j++) {\n    for (int i=0; i < image.getWidth(); i++) {\n      if (image.getPixel(i,j) == RGBcolor) {\n        image.setPixel(i,j,-16777216);\n      }\n else {\n        image.setPixel(i,j,-1);\n      }\n    }\n  }\n  return image;\n}\n', '0.25', '4', '4');
INSERT INTO `case_study` VALUES ('1235', 'trimLockup(Image)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrUtils.java', 'neuroph', '6', '10', '5', '-1000', '3', '0.4444', '0.1786', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method reads the image pixels until it reads the first black pixel\n * by height and then returns that value\n * @param Img - input image that will be read\n * @return - returns the value of height when conditions are true\n */\nprivate static int trimLockup(Image img){\n  for (int j=0; j < img.getHeight(); j++) {\n    for (int i=0; i < img.getWidth(); i++) {\n      if (img.getPixel(i,j) == -16777216) {\n        return j;\n      }\n    }\n  }\n  return 0;\n}\n', '0.3333333333333333', '3', '4');
INSERT INTO `case_study` VALUES ('1236', 'trimLockdown(Image,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\OcrUtils.java', 'neuroph', '12', '37', '8', '-1000', '3', '0.3167', '0.2077', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '/** \n * This method reads the input image from the input from\n * start pixel height (y1) until it reads the first next row\n * where all pixel are white by height and return that value\n * @param Img - input image that will be read\n * @param y1 - input start height pixel of image\n * @return - returns the value of height when conditions are true\n */\nprivate static int trimLockdown(Image img,int y1){\n  for (int j=y1 + 1; j < img.getHeight(); j++) {\n    int counterWhite=0;\n    for (int i=0; i < img.getWidth(); i++) {\n      if (img.getPixel(i,j) == -1) {\n        counterWhite++;\n      }\n    }\n    if (counterWhite == img.getWidth()) {\n      if (j > (img.getHeight() / 2)) {\n        return j;\n      }\n    }\n    if (j == img.getHeight() - 1) {\n      return j + 1;\n    }\n  }\n  return 0;\n}\n', '0.3333333333333333', '5', '7');
INSERT INTO `case_study` VALUES ('1239', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\BufferedDataSetSample.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2292', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public void run() throws FileNotFoundException {\n  String inputFileName=BufferedDataSetSample.class.getResource(\"data/iris_data_normalised.txt\").getFile();\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(4,16,3);\n  BufferedDataSet irisDataSet=new BufferedDataSet(new File(inputFileName),4,3,\",\");\n  neuralNet.getLearningRule().addListener(this);\n  neuralNet.learn(irisDataSet);\n}\n', '0.8', '3', '1');
INSERT INTO `case_study` VALUES ('1242', 'main(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\HopfieldSample.java', 'neuroph', '7', '11', '1', '-1000', '1', '0.3571', '0.246', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Runs this sample\n */\npublic static void main(String args[]){\n  DataSet trainingSet=new DataSet(9);\n  trainingSet.addRow(new DataSetRow(new double[]{1,0,1,1,1,1,1,0,1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,1,1,0,1,0,0,1,0}));\n  Hopfield myHopfield=new Hopfield(9);\n  myHopfield.learn(trainingSet);\n  System.out.println(\"Testing network\");\n  trainingSet.addRow(new DataSetRow(new double[]{1,0,0,1,0,1,1,0,1}));\n  for (  DataSetRow trainingSetRow : trainingSet.getRows()) {\n    myHopfield.setInput(trainingSetRow.getInput());\n    myHopfield.calculate();\n    myHopfield.calculate();\n    double[] networkOutput=myHopfield.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(trainingSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.4', '5', '2');
INSERT INTO `case_study` VALUES ('1243', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\IrisClassificationSample.java', 'neuroph', '6', '0', '0', '-1000', '1', '0.375', '0.6389', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '/** \n * Runs this sample\n */\npublic static void main(String[] args){\n  String inputFileName=\"data_sets/iris_data_normalised.txt\";\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(4,16,3);\n  DataSet irisDataSet=DataSet.createFromFile(inputFileName,4,3,\",\");\n  neuralNet.getLearningRule().addListener(new LearningListener());\n  neuralNet.getLearningRule().setLearningRate(0.2);\n  neuralNet.getLearningRule().setMaxError(0.01);\n  neuralNet.getLearningRule().setMaxIterations(30000);\n  neuralNet.learn(irisDataSet);\n  neuralNet.save(\"irisNet.nnet\");\n  System.out.println(\"Done training.\");\n  System.out.println(\"Testing network...\");\n}\n', '0.7', '4', '1');
INSERT INTO `case_study` VALUES ('1244', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\IrisClassificationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints network output for the each element from the specified training set.\n * @param neuralNet neural network\n * @param testSet test data set\n */\npublic static void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('1246', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\JDBCSample.java', 'neuroph', '18', '129', '105', '-1000', '2', '0.123', '0.0464', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * Runs this sample\n */\npublic static void main(String[] args) throws FileNotFoundException, IOException, ClassNotFoundException, SQLException {\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(2,3,1);\n  Class.forName(\"sun.jdbc.odbc.JdbcOdbcDriver\");\n  String dbName=\"neuroph\";\n  String dbUser=\"root\";\n  String dbPass=\"\";\n  Connection connection=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/\" + dbName,dbUser,dbPass);\n  String inputSql=\"SELECT * FROM input_data\";\n  JDBCInputAdapter in=new JDBCInputAdapter(connection,inputSql);\n  String outputTable=\"output_data\";\n  JDBCOutputAdapter out=new JDBCOutputAdapter(connection,outputTable);\n  double[] input;\n  while ((input=in.readInput()) != null) {\n    neuralNet.setInput(input);\n    neuralNet.calculate();\n    double[] output=neuralNet.getOutput();\n    out.writeOutput(output);\n  }\n  in.close();\n  out.close();\n  connection.close();\n}\n', '0.4', '12', '2');
INSERT INTO `case_study` VALUES ('1247', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\NormalizationSample.java', 'neuroph', '11', '30', '5', '-1000', '2', '0.2149', '0.1697', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Runs this sample\n */\npublic static void main(String[] args){\n  DataSet dataSet=new DataSet(2,1);\n  dataSet.addRow(new DataSetRow(new double[]{10,12},new double[]{0}));\n  dataSet.addRow(new DataSetRow(new double[]{23,19},new double[]{0}));\n  dataSet.addRow(new DataSetRow(new double[]{47,76},new double[]{0}));\n  dataSet.addRow(new DataSetRow(new double[]{98,123},new double[]{1}));\n  Normalizer norm=new MaxMinNormalizer();\n  norm.normalize(dataSet);\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    System.out.print(\"Input: \" + Arrays.toString(dataSetRow.getInput()));\n    System.out.print(\"Output: \" + Arrays.toString(dataSetRow.getDesiredOutput()));\n  }\n}\n', '0.5', '4', '2');
INSERT INTO `case_study` VALUES ('1248', 'main(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\PerceptronSample.java', 'neuroph', '14', '57', '23', '-1000', '4', '0.2071', '0.1451', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Runs this sample\n */\npublic static void main(String args[]){\n  DataSet trainingSet=new DataSet(2,1);\n  trainingSet.addRow(new DataSetRow(new double[]{0,0},new double[]{0}));\n  trainingSet.addRow(new DataSetRow(new double[]{0,1},new double[]{0}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,0},new double[]{0}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,1},new double[]{1}));\n  NeuralNetwork myPerceptron=new Perceptron(2,1);\n  myPerceptron.learn(trainingSet);\n  System.out.println(\"Testing trained perceptron\");\n  testNeuralNetwork(myPerceptron,trainingSet);\n  myPerceptron.save(\"mySamplePerceptron.nnet\");\n  NeuralNetwork loadedPerceptron=NeuralNetwork.load(\"mySamplePerceptron.nnet\");\n  System.out.println(\"Testing loaded perceptron\");\n  testNeuralNetwork(loadedPerceptron,trainingSet);\n}\n', '0.5714285714285714', '4', '1');
INSERT INTO `case_study` VALUES ('1249', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\PerceptronSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints network output for the each element from the specified training set.\n * @param neuralNet neural network\n * @param testSet data set used for testing\n */\npublic static void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow trainingElement : testSet.getRows()) {\n    neuralNet.setInput(trainingElement.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(trainingElement.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('1251', 'printWeights(NeuralNetwork<?>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\RandomizationSample.java', 'neuroph', '7', '18', '15', '-1000', '4', '0.25', '0.0648', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static void printWeights(NeuralNetwork<?> neuralNet){\n  for (  Layer layer : neuralNet.getLayers()) {\n    for (    Neuron neuron : layer.getNeurons()) {\n      for (      Connection connection : neuron.getInputConnections()) {\n        System.out.print(connection.getWeight().value + \" \");\n      }\n      System.out.println();\n    }\n  }\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('1253', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\RBFClassificationSample.java', 'neuroph', '9', '29', '22', '-1000', '5', '0.25', '0.1667', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  String inputFileName=\"data_sets/sine.csv\";\n  RBFNetwork neuralNet=new RBFNetwork(1,15,1);\n  DataSet dataSet=DataSet.createFromFile(inputFileName,1,1,\",\",false);\n  RBFLearning learningRule=((RBFLearning)neuralNet.getLearningRule());\n  learningRule.setLearningRate(0.02);\n  learningRule.setMaxError(0.01);\n  learningRule.addListener(this);\n  neuralNet.learn(dataSet);\n  System.out.println(\"Done training.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n}\n', '0.8571428571428571', '4', '1');
INSERT INTO `case_study` VALUES ('1254', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\RBFClassificationSample.java', 'neuroph', '8', '21', '14', '-1000', '3', '0.2813', '0.1173', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints network output for the each element from the specified training set.\n * @param neuralNet neural network\n * @param testSet test data set\n */\npublic void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('1257', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\XorMultiLayerPerceptronSample.java', 'neuroph', '22', '166', '101', '-1000', '6', '0.1165', '0.1167', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Runs this sample\n */\npublic void run(){\n  DataSet trainingSet=new DataSet(2,1);\n  trainingSet.addRow(new DataSetRow(new double[]{0,0},new double[]{0}));\n  trainingSet.addRow(new DataSetRow(new double[]{0,1},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,0},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,1},new double[]{0}));\n  MultiLayerPerceptron myMlPerceptron=new MultiLayerPerceptron(TransferFunctionType.SIGMOID,2,3,1);\n  myMlPerceptron.randomizeWeights(new WeightsRandomizer(new Random(123)));\n  System.out.println(Arrays.toString(myMlPerceptron.getWeights()));\n  myMlPerceptron.setLearningRule(new BackPropagation());\n  myMlPerceptron.getLearningRule().setLearningRate(0.5);\n  LearningRule learningRule=myMlPerceptron.getLearningRule();\n  learningRule.addListener(this);\n  System.out.println(\"Training neural network...\");\n  myMlPerceptron.learn(trainingSet);\n  System.out.println(\"Testing trained neural network\");\n  testNeuralNetwork(myMlPerceptron,trainingSet);\n  myMlPerceptron.save(\"myMlPerceptron.nnet\");\n  NeuralNetwork loadedMlPerceptron=NeuralNetwork.createFromFile(\"myMlPerceptron.nnet\");\n  System.out.println(\"Testing loaded neural network\");\n  testNeuralNetwork(loadedMlPerceptron,trainingSet);\n}\n', '0.5333333333333333', '4', '1');
INSERT INTO `case_study` VALUES ('1258', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\XorMultiLayerPerceptronSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints network output for the each element from the specified training set.\n * @param neuralNet neural network\n * @param testSet test set\n */\npublic static void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('1261', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\XorResilientPropagationSample.java', 'neuroph', '15', '68', '31', '-1000', '3', '0.1744', '0.1303', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Runs this sample\n */\npublic void run(){\n  DataSet trainingSet=new DataSet(2,1);\n  trainingSet.addRow(new DataSetRow(new double[]{0,0},new double[]{0}));\n  trainingSet.addRow(new DataSetRow(new double[]{0,1},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,0},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,1},new double[]{0}));\n  MultiLayerPerceptron myMlPerceptron=new MultiLayerPerceptron(TransferFunctionType.SIGMOID,2,3,1);\n  myMlPerceptron.setLearningRule(new ResilientPropagation());\n  LearningRule learningRule=myMlPerceptron.getLearningRule();\n  learningRule.addListener(this);\n  System.out.println(\"Training neural network...\");\n  myMlPerceptron.learn(trainingSet);\n  int iterations=((SupervisedLearning)myMlPerceptron.getLearningRule()).getCurrentIteration();\n  System.out.println(\"Learned in \" + iterations + \" iterations\");\n  System.out.println(\"Testing trained neural network\");\n  testNeuralNetwork(myMlPerceptron,trainingSet);\n}\n', '0.7', '4', '1');
INSERT INTO `case_study` VALUES ('1262', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\XorResilientPropagationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints network output for each element from the specified training set.\n * @param neuralNet neural network\n * @param trainingSet training set\n */\npublic static void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('1270', 'fullConnect(Layer,Layer,boolean)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\ConnectionFactory.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2917', '0.119', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates full connectivity within layer - each neuron with all other\n * within the same layer with the specified weight and delay values for all\n * conections.\n */\npublic static void fullConnect(Layer layer,double weightVal,int delay){\n  int neuronNum=layer.getNeuronsCount();\n  for (int i=0; i < neuronNum; i++) {\n    for (int j=0; j < neuronNum; j++) {\n      if (j == i)       continue;\n      Neuron from=layer.getNeuronAt(i);\n      Neuron to=layer.getNeuronAt(j);\n      createConnection(from,to,weightVal,delay);\n    }\n  }\n}\n', '0.5', '8', '4');
INSERT INTO `case_study` VALUES ('1275', 'forwardConnect(Layer,Layer,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\ConnectionFactory.java', 'neuroph', '6', '10', '5', '-1000', '3', '0.3056', '0.1083', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates forward connection pattern between specified layers\n * @param fromLayerlayer to connect\n * @param toLayerlayer to connect to\n */\npublic static void forwardConnect(Layer fromLayer,Layer toLayer){\n  for (int i=0; i < fromLayer.getNeuronsCount(); i++) {\n    Neuron fromNeuron=fromLayer.getNeuronAt(i);\n    Neuron toNeuron=toLayer.getNeuronAt(i);\n    createConnection(fromNeuron,toNeuron,1);\n  }\n}\n', '0.5', '5', '2');
INSERT INTO `case_study` VALUES ('1277', 'DataSetStatistics(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\DataSetStatistics.java', 'neuroph', '13', '47', '16', '-1000', '4', '0.1657', '0.1721', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public DataSetStatistics(DataSet dataSet){\n  this.dataSet=dataSet;\n  this.rowSize=dataSet.getInputSize() + dataSet.getOutputSize();\n  this.rowCount=dataSet.getRows().size();\n  this.mean=new double[this.rowSize];\n  this.max=new double[this.rowSize];\n  this.min=new double[this.rowSize];\n  this.sum=new double[this.rowSize];\n  this.var=new double[this.rowSize];\n  this.stdDev=new double[this.rowSize];\n  this.frequency=new double[this.rowSize];\n  this.setDefaultValues();\n}\n', '0.3333333333333333', '18', '1');
INSERT INTO `case_study` VALUES ('1279', 'resetValues()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\DataSetStatistics.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.2667', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Resets statistics values to default.\n */\nprivate void resetValues(){\n  for (int i=0; i < this.rowSize; i++) {\n    this.sum[i]=0;\n    this.var[i]=0;\n    this.frequency[i]=-0.0;\n  }\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('1280', 'calculateStatistics()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\DataSetStatistics.java', 'neuroph', '24', '211', '146', '-1000', '3', '0.1155', '0.0635', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '/** \n * Calculates basic statistics by columns of the dataset.\n */\npublic void calculateStatistics(){\n  this.resetValues();\n  DataSetColumnType[] columnTypes=this.dataSet.getColumnTypes();\n  for (  DataSetRow dataSetRow : this.dataSet.getRows()) {\n    double[] row=dataSetRow.toArray();\n    for (int i=0; i < this.rowSize; i++) {\n      this.max[i]=Math.max(this.max[i],row[i]);\n      this.min[i]=Math.min(this.min[i],row[i]);\n      this.sum[i]+=row[i];\n      if (columnTypes[i] == DataSetColumnType.NOMINAL) {\n        this.frequency[i]+=row[i];\n      }\n    }\n  }\n  for (int i=0; i < this.rowSize; i++) {\n    this.mean[i]=this.sum[i] / (double)this.rowCount;\n    if (columnTypes[i] == DataSetColumnType.NOMINAL) {\n      this.frequency[i]/=(double)this.rowCount;\n    }\n  }\n  for (  DataSetRow dataSetRow : this.dataSet.getRows()) {\n    double[] row=dataSetRow.toArray();\n    for (int i=0; i < this.rowSize; i++) {\n      double delta=row[i] - this.mean[i];\n      this.var[i]+=delta * delta;\n    }\n  }\n  for (int i=0; i < this.rowSize; i++) {\n    this.var[i]/=(double)this.rowCount;\n    this.stdDev[i]=Math.sqrt(this.var[i]);\n  }\n}\n', '0.6666666666666666', '34', '9');
INSERT INTO `case_study` VALUES ('1288', 'calculateMeanByColumns(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\DataSetStats.java', 'neuroph', '10', '30', '15', '-1000', '3', '0.2667', '0.1258', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * @param dataSet Neuroph dataset\n * @return arithmetic mean for each variable in data set\n */\npublic static double[] calculateMeanByColumns(DataSet dataSet){\n  double[] mean=new double[dataSet.getInputSize()];\n  for (  DataSetRow row : dataSet.getRows()) {\n    double[] currentInput=row.getInput();\n    for (int i=0; i < dataSet.getInputSize(); i++) {\n      mean[i]+=currentInput[i];\n    }\n  }\n  for (int i=0; i < dataSet.getInputSize(); i++) {\n    mean[i]/=(double)dataSet.getRows().size();\n  }\n  return mean;\n}\n', '0.6666666666666666', '6', '4');
INSERT INTO `case_study` VALUES ('1289', 'calculateMaxByColumns(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\DataSetStats.java', 'neuroph', '10', '31', '17', '-1000', '2', '0.225', '0.1133', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * @param dataSet Neuroph dataset\n * @return maximum value for each variable in data set\n */\npublic static double[] calculateMaxByColumns(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  double[] maxColumnElements=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    maxColumnElements[i]=-Double.MAX_VALUE;\n  }\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      maxColumnElements[i]=Math.max(maxColumnElements[i],input[i]);\n    }\n  }\n  return maxColumnElements;\n}\n', '0.6666666666666666', '7', '4');
INSERT INTO `case_study` VALUES ('1290', 'calculateMinByColumns(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\DataSetStats.java', 'neuroph', '10', '31', '17', '-1000', '2', '0.225', '0.1133', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * @param dataSet Neuroph dataset\n * @return minimum value for each variable in data set\n */\npublic static double[] calculateMinByColumns(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  double[] minColumnElements=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    minColumnElements[i]=Double.MAX_VALUE;\n  }\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      minColumnElements[i]=Math.min(minColumnElements[i],input[i]);\n    }\n  }\n  return minColumnElements;\n}\n', '0.6666666666666666', '7', '4');
INSERT INTO `case_study` VALUES ('1293', 'createLayer(int,TransferFunctionType)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\LayerFactory.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2917', '0.1012', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static Layer createLayer(List<NeuronProperties> neuronPropertiesVector){\n  Layer layer=new Layer();\n  for (  NeuronProperties neuronProperties : neuronPropertiesVector) {\n    Neuron neuron=NeuronFactory.createNeuron(neuronProperties);\n    layer.addNeuron(neuron);\n  }\n  return layer;\n}\n', '0.6666666666666666', '4', '2');
INSERT INTO `case_study` VALUES ('1297', 'network2array(NeuralNetwork,double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuralNetworkCODEC.java', 'neuroph', '8', '23', '18', '-1000', '3', '0.2143', '0.0586', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Encode a network to an array.\n * @param network The network to encode.\n */\npublic static void network2array(NeuralNetwork network,double[] array){\n  int index=0;\n  List<Layer> layers=network.getLayers();\n  for (  Layer layer : layers) {\n    for (    Neuron neuron : layer.getNeurons()) {\n      for (      Connection connection : neuron.getOutConnections()) {\n        array[index++]=connection.getWeight().getValue();\n      }\n    }\n  }\n}\n', '1', '7', '4');
INSERT INTO `case_study` VALUES ('1298', 'array2network(double[],NeuralNetwork)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuralNetworkCODEC.java', 'neuroph', '9', '31', '26', '-1000', '4', '0.1905', '0.048', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Decode a network from an array.\n * @param array The array used to decode.\n * @param network The network to decode into.\n */\npublic static void array2network(double[] array,NeuralNetwork network){\n  int index=0;\n  List<Layer> layers=network.getLayers();\n  for (  Layer layer : layers) {\n    for (    Neuron neuron : layer.getNeurons()) {\n      for (      Connection connection : neuron.getOutConnections()) {\n        connection.getWeight().setValue(array[index++]);\n      }\n    }\n  }\n}\n', '1', '7', '4');
INSERT INTO `case_study` VALUES ('1299', 'determineArraySize(NeuralNetwork)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuralNetworkCODEC.java', 'neuroph', '8', '22', '16', '-1000', '3', '0.25', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Determine the array size for the given neural network.\n * @param network The neural network to determine for.\n * @return The size of the array necessary to hold that network.\n */\npublic static int determineArraySize(NeuralNetwork network){\n  int result=0;\n  List<Layer> layers=network.getLayers();\n  for (  Layer layer : layers) {\n    for (    Neuron neuron : layer.getNeurons()) {\n      result+=neuron.getOutConnections().size();\n    }\n  }\n  return result;\n}\n', '1', '5', '3');
INSERT INTO `case_study` VALUES ('1302', 'createPerceptron(int,int,TransferFunctionType,Class)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuralNetworkFactory.java', 'neuroph', '8', '21', '14', '-1000', '4', '0.1806', '0.0858', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates  and returns a new instance of Perceptron network\n * @param inputNeuronsCount number of neurons in input layer\n * @param outputNeuronsCount number of neurons in output layer\n * @param transferFunctionType type of transfer function to use\n * @param learningRule learning rule class\n * @return instance of Perceptron network\n */\npublic static Perceptron createPerceptron(int inputNeuronsCount,int outputNeuronsCount,TransferFunctionType transferFunctionType,Class learningRule){\n  Perceptron nnet=new Perceptron(inputNeuronsCount,outputNeuronsCount,transferFunctionType);\n  if (learningRule.getName().equals(PerceptronLearning.class.getName())) {\n    nnet.setLearningRule(new PerceptronLearning());\n  }\n else   if (learningRule.getName().equals(BinaryDeltaRule.class.getName())) {\n    nnet.setLearningRule(new BinaryDeltaRule());\n  }\n  return nnet;\n}\n', '1', '5', '3');
INSERT INTO `case_study` VALUES ('1304', 'createMLPerceptron(String,TransferFunctionType,Class,boolean,boolean)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuralNetworkFactory.java', 'neuroph', '15', '79', '53', '-1000', '5', '0.1083', '0.0968', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Creates and returns a new instance of Multi Layer Perceptron\n * @param layersStr space separated number of neurons in layers\n * @param transferFunctionType transfer function type for neurons\n * @return instance of Multi Layer Perceptron\n */\npublic static MultiLayerPerceptron createMLPerceptron(String layersStr,TransferFunctionType transferFunctionType,Class learningRule,boolean useBias,boolean connectIO){\n  ArrayList<Integer> layerSizes=VectorParser.parseInteger(layersStr);\n  NeuronProperties neuronProperties=new NeuronProperties(transferFunctionType,useBias);\n  MultiLayerPerceptron nnet=new MultiLayerPerceptron(layerSizes,neuronProperties);\n  if (learningRule.getName().equals(BackPropagation.class.getName())) {\n    nnet.setLearningRule(new BackPropagation());\n  }\n else   if (learningRule.getName().equals(MomentumBackpropagation.class.getName())) {\n    nnet.setLearningRule(new MomentumBackpropagation());\n  }\n else   if (learningRule.getName().equals(DynamicBackPropagation.class.getName())) {\n    nnet.setLearningRule(new DynamicBackPropagation());\n  }\n else   if (learningRule.getName().equals(ResilientPropagation.class.getName())) {\n    nnet.setLearningRule(new ResilientPropagation());\n  }\n  if (connectIO) {\n    nnet.connectInputsToOutputs();\n  }\n  return nnet;\n}\n', '0.8888888888888888', '8', '6');
INSERT INTO `case_study` VALUES ('1317', 'createNeuron(NeuronProperties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuronFactory.java', 'neuroph', '34', '447', '333', '-1000', '5', '0.1294', '0.146', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '/** \n * Creates and returns neuron instance according to the given specification in neuronProperties.\n * @param neuronPropertiesspecification of neuron properties\n * @return returns instance of neuron with specified properties\n */\npublic static Neuron createNeuron(NeuronProperties neuronProperties){\n  InputFunction inputFunction=null;\n  Class inputFunctionClass=neuronProperties.getInputFunction();\n  if (inputFunctionClass != null) {\n    inputFunction=createInputFunction(inputFunctionClass);\n  }\n  TransferFunction transferFunction=createTransferFunction(neuronProperties.getTransferFunctionProperties());\n  Neuron neuron=null;\n  Class neuronClass=neuronProperties.getNeuronType();\n  try {\n    Class[] paramTypes={InputFunction.class,TransferFunction.class};\n    Constructor con=neuronClass.getConstructor(paramTypes);\n    Object[] paramList=new Object[2];\n    paramList[0]=inputFunction;\n    paramList[1]=transferFunction;\n    neuron=(Neuron)con.newInstance(paramList);\n  }\n catch (  NoSuchMethodException e) {\n  }\ncatch (  InstantiationException e) {\n    throw new NeurophException(\"InstantiationException while creating Neuron!\",e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new NeurophException(\"IllegalAccessException while creating Neuron!\",e);\n  }\ncatch (  InvocationTargetException e) {\n    throw new NeurophException(\"InvocationTargetException while creating Neuron!\",e);\n  }\n  if (neuron == null) {\n    try {\n      neuron=(Neuron)neuronClass.newInstance();\n    }\n catch (    IllegalAccessException e) {\n      System.err.println(\"InstantiationException while creating Neuron!\");\n      e.printStackTrace();\n    }\ncatch (    InstantiationException e) {\n      System.err.println(\"InstantiationException while creating Neuron!\");\n      e.printStackTrace();\n    }\n  }\n  if (neuronProperties.hasProperty(\"thresh\")) {\n    ((ThresholdNeuron)neuron).setThresh((Double)neuronProperties.getProperty(\"thresh\"));\n  }\n else   if (neuronProperties.hasProperty(\"bias\")) {\n    ((InputOutputNeuron)neuron).setBias((Double)neuronProperties.getProperty(\"bias\"));\n  }\n  return neuron;\n}\n', '0.625', '15', '11');
INSERT INTO `case_study` VALUES ('1318', 'createInputFunction(Class)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuronFactory.java', 'neuroph', '9', '27', '18', '-1000', '4', '0.2963', '0.2286', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private static InputFunction createInputFunction(Class inputFunctionClass){\n  InputFunction inputFunction=null;\n  try {\n    inputFunction=(InputFunction)inputFunctionClass.newInstance();\n  }\n catch (  InstantiationException e) {\n    throw new NeurophException(\"InstantiationException while creating InputFunction!\",e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new NeurophException(\"IllegalAccessException while creating InputFunction!\",e);\n  }\n  return inputFunction;\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('1319', 'createTransferFunction(Properties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuronFactory.java', 'neuroph', '31', '407', '349', '-1000', '8', '0.1147', '0.1004', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Creates and returns instance of transfer function\n * @param tfPropertiestransfer function properties\n * @return returns transfer function\n */\nprivate static TransferFunction createTransferFunction(Properties tfProperties){\n  TransferFunction transferFunction=null;\n  Class tfClass=(Class)tfProperties.getProperty(\"transferFunction\");\n  try {\n    Class[] paramTypes=null;\n    Constructor[] cons=tfClass.getConstructors();\n    for (int i=0; i < cons.length; i++) {\n      paramTypes=cons[i].getParameterTypes();\n      if ((paramTypes.length == 1) && (paramTypes[0] == Properties.class)) {\n        Class[] argTypes=new Class[1];\n        argTypes[0]=Properties.class;\n        Constructor ct=tfClass.getConstructor(argTypes);\n        Object[] argList=new Object[1];\n        argList[0]=tfProperties;\n        transferFunction=(TransferFunction)ct.newInstance(argList);\n        break;\n      }\n else       if (paramTypes.length == 0) {\n        transferFunction=(TransferFunction)tfClass.newInstance();\n        break;\n      }\n    }\n    return transferFunction;\n  }\n catch (  NoSuchMethodException e) {\n    System.err.println(\"getConstructor() couldn\'t find the constructor while creating TransferFunction!\");\n    e.printStackTrace();\n  }\ncatch (  InstantiationException e) {\n    System.err.println(\"InstantiationException while creating TransferFunction!\");\n    e.printStackTrace();\n  }\ncatch (  IllegalAccessException e) {\n    System.err.println(\"No permission to invoke method while creating TransferFunction!\");\n    e.printStackTrace();\n  }\ncatch (  InvocationTargetException e) {\n    System.err.println(\"Method threw an: \" + e.getTargetException() + \" while creating TransferFunction!\");\n    e.printStackTrace();\n  }\n  return transferFunction;\n}\n', '1', '13', '9');
INSERT INTO `case_study` VALUES ('1320', 'NeuronProperties()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\NeuronProperties.java', 'neuroph', '6', '12', '9', '-1000', '4', '0.5', '0.25', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public NeuronProperties(TransferFunctionType transferFunctionType,boolean useBias){\n  initKeys();\n  this.setProperty(\"inputFunction\",WeightedSum.class);\n  this.setProperty(\"transferFunction\",transferFunctionType.getTypeClass());\n  this.setProperty(\"useBias\",useBias);\n  this.setProperty(\"neuronType\",Neuron.class);\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('1347', 'importFromFile(String,int,int,String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\TrainingSetImport.java', 'neuroph', '28', '309', '240', '-1000', '3', '0.0966', '0.1278', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'public static DataSet importFromFile(String filePath,int inputsCount,int outputsCount,String separator) throws IOException, FileNotFoundException, NumberFormatException {\n  FileReader fileReader=null;\n  try {\n    DataSet trainingSet=new DataSet(inputsCount,outputsCount);\n    fileReader=new FileReader(new File(filePath));\n    BufferedReader reader=new BufferedReader(fileReader);\n    String line=\"\";\n    while ((line=reader.readLine()) != null) {\n      double[] inputs=new double[inputsCount];\n      double[] outputs=new double[outputsCount];\n      String[] values=line.split(separator);\n      if (values[0].equals(\"\"))       continue;\n      for (int i=0; i < inputsCount; i++)       inputs[i]=Double.parseDouble(values[i]);\n      for (int i=0; i < outputsCount; i++)       outputs[i]=Double.parseDouble(values[inputsCount + i]);\n      if (outputsCount > 0) {\n        trainingSet.addRow(new DataSetRow(inputs,outputs));\n      }\n else {\n        trainingSet.addRow(new DataSetRow(inputs));\n      }\n    }\n    return trainingSet;\n  }\n catch (  FileNotFoundException ex) {\n    ex.printStackTrace();\n    throw ex;\n  }\ncatch (  IOException ex) {\n    if (fileReader != null) {\n      fileReader.close();\n    }\n    ex.printStackTrace();\n    throw ex;\n  }\ncatch (  NumberFormatException ex) {\n    fileReader.close();\n    ex.printStackTrace();\n    throw ex;\n  }\n}\n', '0.6666666666666666', '16', '10');
INSERT INTO `case_study` VALUES ('1348', 'parseInteger(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\VectorParser.java', 'neuroph', '8', '21', '14', '-1000', '3', '0.25', '0.1235', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method parses input String and returns Integer vector\n * @param strinput String\n * @return Integer vector\n */\nstatic public ArrayList<Integer> parseInteger(String str){\n  StringTokenizer tok=new StringTokenizer(str);\n  ArrayList<Integer> ret=new ArrayList<Integer>();\n  while (tok.hasMoreTokens()) {\n    Integer d=Integer.valueOf(tok.nextToken());\n    ret.add(d);\n  }\n  return ret;\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('1349', 'parseDoubleArray(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\VectorParser.java', 'neuroph', '7', '15', '9', '-1000', '3', '0.2857', '0.1267', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method parses input String and returns double array\n * @param inputStrinput String\n * @return double array\n */\nstatic public double[] parseDoubleArray(String inputStr){\n  String[] inputsArrStr=inputStr.split(\" \");\n  double[] ret=new double[inputsArrStr.length];\n  for (int i=0; i < inputsArrStr.length; i++) {\n    ret[i]=Double.parseDouble(inputsArrStr[i]);\n  }\n  return ret;\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('1350', 'toDoubleArray(List<Double>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\VectorParser.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3889', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static double[] toDoubleArray(List<Double> list){\n  double[] ret=new double[list.size()];\n  for (int i=0; i < list.size(); i++) {\n    ret[i]=list.get(i).doubleValue();\n  }\n  return ret;\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('1351', 'convertToVector(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\VectorParser.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3333', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static ArrayList<Double> convertToVector(double[] array){\n  ArrayList<Double> vector=new ArrayList<Double>(array.length);\n  for (  double val : array) {\n    vector.add(val);\n  }\n  return vector;\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('1352', 'convertJMLToNeurophDataset(Dataset,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLDataSetConverter.java', 'neuroph', '42', '747', '633', '-1000', '4', '0.0855', '0.0484', '0', '0', '1', '1', '0', '0', '1', '1', '1', '1', '/** \n * Converts Java-ML data set to Neuroph data set\n * @param jmlDataset Dataset Java-ML data set\n * @param numInputs int Number of inputs\n * @param numOutputs int Number of outputs\n * @return Neuroph data set\n */\npublic static DataSet convertJMLToNeurophDataset(Dataset jmlDataset,int numInputs,int numOutputs){\n  if (numInputs <= 0) {\n    throw new IllegalArgumentException(\"Number of inputs  in DataSet cannot be zero or negative!\");\n  }\n  if (numOutputs < 0) {\n    throw new IllegalArgumentException(\"Number of outputs  in DataSet cannot be negative!\");\n  }\n  int rowSize=jmlDataset.noAttributes() + 1;\n  if (numOutputs + numInputs < rowSize) {\n    throw new IllegalArgumentException(\"Number of outputs and inputs should be equal to number of attributes from data set!\");\n  }\n  DataSet neurophDataset;\n  if (numOutputs == 0) {\n    neurophDataset=new DataSet(rowSize);\n  }\n else {\n    neurophDataset=new DataSet(numInputs,numOutputs);\n  }\n  List<String> outputClasses=new ArrayList<String>();\n  for (int i=0; i < jmlDataset.size(); i++) {\n    if (!outputClasses.contains(jmlDataset.get(i).classValue().toString())) {\n      outputClasses.add(jmlDataset.get(i).classValue().toString());\n    }\n  }\n  for (int i=0; i < jmlDataset.size(); i++) {\n    Iterator attributeIterator=jmlDataset.get(i).iterator();\n    double[] values=new double[rowSize];\n    int index=0;\n    while (attributeIterator.hasNext()) {\n      Double attrValue=(Double)attributeIterator.next();\n      values[index]=attrValue.doubleValue();\n      index++;\n    }\n    DataSetRow row=null;\n    if (numOutputs == 0) {\n      row=new DataSetRow(values);\n    }\n else {\n      double[] inputs=new double[numInputs];\n      double[] outputs=new double[outputClasses.size()];\n      int k=0;\n      int j=0;\n      for (int v=0; v < values.length; v++) {\n        if (v < numInputs) {\n          inputs[j]=values[v];\n          j++;\n        }\n      }\n      for (      String cla : outputClasses) {\n        if (cla.equals(jmlDataset.get(i).classValue().toString())) {\n          outputs[k]=1;\n        }\n else {\n          outputs[k]=0;\n        }\n        k++;\n      }\n      row=new DataSetRow(inputs,outputs);\n    }\n    row.setLabel(jmlDataset.get(i).classValue().toString());\n    neurophDataset.addRow(row);\n  }\n  return neurophDataset;\n}\n', '0.5', '19', '14');
INSERT INTO `case_study` VALUES ('1353', 'convertNeurophToJMLDataset(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLDataSetConverter.java', 'neuroph', '19', '133', '95', '-1000', '3', '0.1579', '0.0768', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Converts Neuroph data set to Java-ML data set\n * @param neurophDataset Dataset Neuroph data set\n * @return Dataset Java-ML data set\n */\npublic static Dataset convertNeurophToJMLDataset(DataSet neurophDataset){\n  Dataset jmlDataset=new DefaultDataset();\n  int numInputs=neurophDataset.getInputSize();\n  int numOutputs=neurophDataset.getOutputSize();\n  for (  DataSetRow row : neurophDataset.getRows()) {\n    if (numOutputs > 0) {\n      double[] mergedIO=new double[numInputs + numOutputs];\n      for (int i=0; i < numInputs; i++) {\n        mergedIO[i]=row.getInput()[i];\n      }\n      for (int i=0; i < numOutputs; i++) {\n        mergedIO[numInputs + i]=row.getDesiredOutput()[i];\n      }\n      Instance instance=new DenseInstance(mergedIO);\n      instance.setClassValue(row.getLabel());\n      jmlDataset.add(instance);\n    }\n else {\n      Instance instance=new DenseInstance(row.getInput());\n      instance.setClassValue(row.getLabel());\n      jmlDataset.add(instance);\n    }\n  }\n  return jmlDataset;\n}\n', '0.3333333333333333', '10', '5');
INSERT INTO `case_study` VALUES ('1356', 'classify(Instance)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLNeurophClassifier.java', 'neuroph', '8', '17', '6', '-1000', '2', '0.3438', '0.2024', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Classifies instance as one of possible classes\n * @param instnc Instance to classify\n * @return Object class as Object\n */\n@Override public Object classify(Instance instnc){\n  double[] item=convertInstanceToDoubleArray(instnc);\n  neuralNet.setInput(item);\n  neuralNet.calculate();\n  Neuron maxNeuron=null;\n  double maxOut=Double.NEGATIVE_INFINITY;\n  for (  Neuron neuron : neuralNet.getOutputNeurons()) {\n    if (neuron.getOutput() > maxOut) {\n      maxNeuron=neuron;\n      maxOut=neuron.getOutput();\n    }\n  }\n  return maxNeuron.getLabel();\n}\n', '0.4', '5', '3');
INSERT INTO `case_study` VALUES ('1358', 'convertInstanceToDoubleArray(Instance)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLNeurophClassifier.java', 'neuroph', '10', '35', '25', '-1000', '3', '0.24', '0.1117', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Convert instance attribute values to double array values\n * @param instnc Instance to convert\n * @return double[]\n */\nprivate double[] convertInstanceToDoubleArray(Instance instnc){\n  Iterator attributeIterator=instnc.iterator();\n  double[] item=new double[instnc.noAttributes()];\n  int index=0;\n  while (attributeIterator.hasNext()) {\n    Double attrValue=(Double)attributeIterator.next();\n    item[index]=attrValue.doubleValue();\n    index++;\n  }\n  return item;\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('1359', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLNeurophSample.java', 'neuroph', '18', '125', '97', '-1000', '7', '0.1358', '0.1072', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static void main(String[] args){\n  try {\n    Dataset jmlDataset=FileHandler.loadDataset(new File(\"datasets/iris.data\"),4,\",\");\n    NormalizeMidrange nmr=new NormalizeMidrange(0,1);\n    nmr.build(jmlDataset);\n    nmr.filter(jmlDataset);\n    System.out.println(jmlDataset);\n    DataSet neurophDataset=JMLDataSetConverter.convertJMLToNeurophDataset(jmlDataset,4,3);\n    Dataset jml=JMLDataSetConverter.convertNeurophToJMLDataset(neurophDataset);\n    System.out.println(\"Java-ML data set read from file\");\n    printDataset(jmlDataset);\n    System.out.println(\"Neuroph data set converted from Java-ML data set\");\n    printDataset(neurophDataset);\n    System.out.println(\"Java-ML data set reconverted from Neuroph data set\");\n    printDataset(jml);\n    System.out.println(\"JMLNeuroph classifier test\");\n    testJMLNeurophClassifier(jmlDataset);\n  }\n catch (  Exception ex) {\n    Logger.getLogger(JMLNeurophSample.class.getName()).log(Level.SEVERE,null,ex);\n  }\n}\n', '0.5', '6', '2');
INSERT INTO `case_study` VALUES ('1360', 'printDataset(Dataset)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLNeurophSample.java', 'neuroph', '7', '15', '9', '-1000', '3', '0.3333', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints Neuroph data set\n * @param neurophDataset Dataset Neuroph data set\n */\npublic static void printDataset(DataSet neurophDataset){\n  System.out.println(\"Neuroph dataset\");\n  Iterator iterator=neurophDataset.iterator();\n  while (iterator.hasNext()) {\n    DataSetRow row=(DataSetRow)iterator.next();\n    System.out.println(\"inputs\");\n    System.out.println(Arrays.toString(row.getInput()));\n    if (row.getDesiredOutput().length > 0) {\n      System.out.println(\"outputs\");\n      System.out.println(Arrays.toString(row.getDesiredOutput()));\n    }\n  }\n}\n', '0.6666666666666666', '4', '3');
INSERT INTO `case_study` VALUES ('1362', 'convertJMLDatasetToMap(Dataset)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLNeurophSample.java', 'neuroph', '8', '19', '10', '-1000', '2', '0.3', '0.1202', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Converts Java-ML data set to Map\n * @param jmlDataset Dataset Java-ML data set\n * @return Map converted from Java-ML data set\n */\nprivate static Map<double[],String> convertJMLDatasetToMap(Dataset jmlDataset){\n  int numOfAttributes=jmlDataset.noAttributes();\n  Map<double[],String> itemClassMap=new HashMap<double[],String>();\n  for (  Instance dataRow : jmlDataset) {\n    double[] values=new double[numOfAttributes];\n    int ind=0;\n    for (    Double val : dataRow) {\n      values[ind]=val;\n      ind++;\n    }\n    itemClassMap.put(values,dataRow.classValue().toString());\n  }\n  return itemClassMap;\n}\n', '0', '7', '3');
INSERT INTO `case_study` VALUES ('1363', 'testJMLNeurophClassifier(Dataset)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\jml\\JMLNeurophSample.java', 'neuroph', '14', '72', '53', '-1000', '5', '0.1735', '0.1245', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '/** \n * Test JMLNeurophClassifier\n * @param jmlDataset Dataset Java-ML data set\n */\nprivate static void testJMLNeurophClassifier(Dataset jmlDataset){\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(4,16,3);\n  neuralNet.getOutputNeurons().get(0).setLabel(\"Setosa\");\n  neuralNet.getOutputNeurons().get(1).setLabel(\"Versicolor\");\n  neuralNet.getOutputNeurons().get(2).setLabel(\"Virginica\");\n  JMLNeurophClassifier jmlnClassifier=new JMLNeurophClassifier(neuralNet);\n  jmlnClassifier.buildClassifier(jmlDataset);\n  double[] item={-0.27777777777777773,0.1249999999999999,-0.4322033898305085,-0.45833333333333337};\n  Instance instance=new DenseInstance(item);\n  System.out.println(\"NeurophJMLClassifier - classify of {0.22222222222222213, 0.6249999999999999, 0.06779661016949151, 0.04166666666666667}\");\n  System.out.println(jmlnClassifier.classify(instance));\n  System.out.println(\"NeurophJMLClassifier - classDistribution of {0.22222222222222213, 0.6249999999999999, 0.06779661016949151, 0.04166666666666667}\");\n  System.out.println(jmlnClassifier.classDistribution(instance));\n}\n', '0.5714285714285714', '5', '1');
INSERT INTO `case_study` VALUES ('1364', 'convertWekaToNeurophDataset(Instances,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaDataSetConverter.java', 'neuroph', '35', '510', '425', '-1000', '4', '0.0984', '0.0562', '0', '0', '0', '1', '0', '0', '1', '1', '1', '1', '/** \n * Converts Weka data set to Neuroph data set\n * @param wekaDataset Instances Weka data set\n * @param numInputs int Number of inputs\n * @param numOutputs int Number of outputs\n * @return Neuroph data set\n */\npublic static DataSet convertWekaToNeurophDataset(Instances wekaDataset,int numInputs,int numOutputs){\n  if (numInputs <= 0) {\n    throw new IllegalArgumentException(\"Number of inputs  in DataSet cannot be zero or negative!\");\n  }\n  if (numOutputs < 0) {\n    throw new IllegalArgumentException(\"Number of outputs  in DataSet cannot be negative!\");\n  }\n  if (numOutputs + numInputs < wekaDataset.numAttributes()) {\n    throw new IllegalArgumentException(\"Number of outputs and inputs should be equal to number of attributes from data set!\");\n  }\n  DataSet neurophDataset=null;\n  if (numOutputs > 0) {\n    neurophDataset=new DataSet(numInputs,numOutputs);\n  }\n else {\n    neurophDataset=new DataSet(numInputs);\n  }\n  List<Double> classValues=new ArrayList<Double>();\n  for (  Instance inst : wekaDataset) {\n    Double classDouble=inst.classValue();\n    if (!classValues.contains(classDouble)) {\n      classValues.add(classDouble);\n    }\n  }\n  Enumeration en=wekaDataset.enumerateInstances();\n  while (en.hasMoreElements()) {\n    Instance instance=(Instance)en.nextElement();\n    double[] values=instance.toDoubleArray();\n    if (numOutputs == 0) {\n      neurophDataset.addRow(values);\n    }\n else {\n      double[] inputs=new double[numInputs];\n      double[] outputs=new double[numOutputs];\n      for (int k=0; k < values.length; k++) {\n        if (k < numInputs) {\n          inputs[k]=values[k];\n        }\n      }\n      int k=0;\n      for (      Double entry : classValues) {\n        if (entry.doubleValue() == instance.classValue()) {\n          outputs[k]=1;\n        }\n else {\n          outputs[k]=0;\n        }\n        k++;\n      }\n      DataSetRow row=new DataSetRow(inputs,outputs);\n      row.setLabel(instance.stringValue(instance.classIndex()));\n      neurophDataset.addRow(row);\n    }\n  }\n  return neurophDataset;\n}\n', '0.4', '16', '13');
INSERT INTO `case_study` VALUES ('1365', 'convertNeurophToWekaDataset(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaDataSetConverter.java', 'neuroph', '25', '221', '142', '-1000', '2', '0.13', '0.0839', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '/** \n * Converts Neuroph data set to Weka data set\n * @param neurophDataset DataSet Neuroph data set\n * @return instances Weka data set\n */\npublic static Instances convertNeurophToWekaDataset(DataSet neurophDataset){\n  Map<double[],String> classValues=getClassValues(neurophDataset);\n  Instances instances=createEmptyWekaDataSet(neurophDataset.getInputSize(),neurophDataset.size(),classValues);\n  int numInputs=neurophDataset.getInputSize();\n  int numOutputs=1;\n  instances.setClassIndex(numInputs);\n  Iterator<DataSetRow> iterator=neurophDataset.iterator();\n  while (iterator.hasNext()) {\n    DataSetRow row=iterator.next();\n    if (numOutputs > 0) {\n      Instance instance=new DenseInstance(numInputs + numOutputs);\n      for (int i=0; i < numInputs; i++) {\n        instance.setValue(i,row.getInput()[i]);\n      }\n      instance.setDataset(instances);\n      for (      Map.Entry<double[],String> entry : classValues.entrySet()) {\n        if (entry.getValue().equals(row.getLabel())) {\n          instance.setValue(numInputs,entry.getValue());\n          double[] rowDouble=row.getDesiredOutput();\n          for (int i=0; i < rowDouble.length; i++) {\n            if (rowDouble[i] == 1) {\n              instance.setValue(numInputs,i);\n            }\n            break;\n          }\n          break;\n        }\n      }\n      instances.add(instance);\n    }\n else {\n      Instance instance=new DenseInstance(numInputs);\n      for (int i=0; i < numInputs; i++) {\n        instance.setValue(i,row.getInput()[i]);\n      }\n      instance.setDataset(instances);\n      instances.add(instance);\n    }\n  }\n  return instances;\n}\n', '0.45454545454545453', '14', '9');
INSERT INTO `case_study` VALUES ('1366', 'createEmptyWekaDataSet(int,int,Map<double[],String>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaDataSetConverter.java', 'neuroph', '9', '27', '18', '-1000', '3', '0.1667', '0.062', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates and returns empty weka data set\n * @param numOfAttr int Number of attributes without class attribute\n * @param capacity int Capacity of sample\n * @return empty weka data set\n */\nprivate static Instances createEmptyWekaDataSet(int numOfAttr,int capacity,Map<double[],String> classValues){\n  FastVector fvClassVal=new FastVector();\n  HashMap classVals=new HashMap<String,Double>();\n  HashMap classValsDoubleAsKey=new HashMap<Double,String>();\n  int ind=0;\n  for (  Map.Entry<double[],String> values : classValues.entrySet()) {\n    fvClassVal.addElement(values.getValue());\n    classVals.put(values.getValue(),new Double(ind));\n    classValsDoubleAsKey.put(new Double(ind),values.getValue());\n    ind++;\n  }\n  Attribute classAttribute=new Attribute(\"theClass\",fvClassVal,classValues.size());\n  FastVector fvWekaAttributes=new FastVector(numOfAttr + 1);\n  for (int i=0; i < numOfAttr; i++) {\n    fvWekaAttributes.addElement(new Attribute(i + \"\",i));\n  }\n  fvWekaAttributes.addElement(classAttribute);\n  Instances newDataSet=new Instances(\"newDataSet\",fvWekaAttributes,capacity);\n  return newDataSet;\n}\n', '0.75', '12', '3');
INSERT INTO `case_study` VALUES ('1369', 'createDataSetFromFile(String,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaDataSetConverter.java', 'neuroph', '8', '23', '18', '-1000', '4', '0.2031', '0.0531', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates neuroph dataset from arff weka file.\n * @param filePath Path to the file.\n * @param numInputs Number of inputs.\n * @param numOutputs Number of outputs.\n * @return Neuroph dataset.\n */\npublic static DataSet createDataSetFromFile(String filePath,int numInputs,int numOutputs){\n  try {\n    ConverterUtils.DataSource dataSource=new ConverterUtils.DataSource(filePath);\n    Instances wekaDataset=dataSource.getDataSet();\n    wekaDataset.setClassIndex(numInputs);\n    DataSet neurophDataset=WekaDataSetConverter.convertWekaToNeurophDataset(wekaDataset,numInputs,numOutputs);\n    return neurophDataset;\n  }\n catch (  Exception e) {\n    return new DataSet(0);\n  }\n}\n', '0.75', '7', '2');
INSERT INTO `case_study` VALUES ('1372', 'classifyInstance(Instance)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaNeurophClassifier.java', 'neuroph', '14', '73', '55', '-1000', '4', '0.1875', '0.0926', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Classifies instance as one of possible classes\n * @param instance Instance to classify\n * @return double classes double value\n * @throws Exception\n */\n@Override public double classifyInstance(Instance instance) throws Exception {\n  double[] item=convertInstanceToDoubleArray(instance);\n  neuralNet.setInput(item);\n  neuralNet.calculate();\n  List<Neuron> outputNeurons=neuralNet.getOutputNeurons();\n  Neuron maxNeuron=null;\n  int maxIdx=0;\n  double maxOut=Double.NEGATIVE_INFINITY;\n  for (int i=0; i < outputNeurons.size(); i++) {\n    if (outputNeurons.get(i).getOutput() > maxOut) {\n      maxOut=outputNeurons.get(i).getOutput();\n      maxIdx=i;\n    }\n  }\n  return maxIdx;\n}\n', '0.5', '7', '3');
INSERT INTO `case_study` VALUES ('1376', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaNeurophSample.java', 'neuroph', '17', '108', '80', '-1000', '6', '0.1438', '0.0981', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void main(String[] args) throws Exception {\n  DataSource dataSource=new DataSource(\"datasets/iris.arff\");\n  Instances wekaDataset=dataSource.getDataSet();\n  wekaDataset.setClassIndex(4);\n  Normalize filter=new Normalize();\n  filter.setInputFormat(wekaDataset);\n  wekaDataset=Filter.useFilter(wekaDataset,filter);\n  DataSet neurophDataset=WekaDataSetConverter.convertWekaToNeurophDataset(wekaDataset,4,3);\n  Instances testWekaDataset=WekaDataSetConverter.convertNeurophToWekaDataset(neurophDataset);\n  System.out.println(\"Weka data set from file\");\n  printDataSet(wekaDataset);\n  System.out.println(\"Neuroph data set converted from Weka data set\");\n  printDataSet(neurophDataset);\n  System.out.println(\"Weka data set reconverted from Neuroph data set\");\n  printDataSet(testWekaDataset);\n  System.out.println(\"Testing WekaNeurophClassifier\");\n  testNeurophWekaClassifier(wekaDataset);\n}\n', '0.625', '6', '1');
INSERT INTO `case_study` VALUES ('1377', 'printDataSet(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaNeurophSample.java', 'neuroph', '10', '32', '19', '-1000', '4', '0.3', '0.2222', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Prints Weka data set\n * @param wekaDataset Instances Weka data set\n */\nprivate static void printDataSet(Instances wekaDataset){\n  System.out.println(\"Weka dataset\");\n  Enumeration en=wekaDataset.enumerateInstances();\n  while (en.hasMoreElements()) {\n    Instance instance=(Instance)en.nextElement();\n    double[] values=instance.toDoubleArray();\n    System.out.println(Arrays.toString(values));\n    System.out.println(instance.stringValue(instance.classIndex()));\n  }\n}\n', '0.5', '4', '2');
INSERT INTO `case_study` VALUES ('1379', 'testNeurophWekaClassifier(Instances)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\adapters\\weka\\WekaNeurophSample.java', 'neuroph', '18', '129', '105', '-1000', '5', '0.125', '0.0827', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Test NeurophWekaClassifier\n * @param wekaDataset Instances Weka data set\n */\nprivate static void testNeurophWekaClassifier(Instances wekaDataset){\n  try {\n    MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(4,16,3);\n    neuralNet.getOutputNeurons().get(0).setLabel(\"Setosa\");\n    neuralNet.getOutputNeurons().get(1).setLabel(\"Versicolor\");\n    neuralNet.getOutputNeurons().get(2).setLabel(\"Virginica\");\n    WekaNeurophClassifier neurophWekaClassifier=new WekaNeurophClassifier(neuralNet);\n    wekaDataset.setClassIndex(4);\n    neurophWekaClassifier.buildClassifier(wekaDataset);\n    double[] item={0.22222222222222213,0.6249999999999999,0.06779661016949151,0.04166666666666667,0};\n    Instance instance=new DenseInstance(1,item);\n    System.out.println(\"NeurophWekaClassifier - classifyInstance for {5.1, 3.5, 1.4, 0.2}\");\n    System.out.println(\"Class idx: \" + neurophWekaClassifier.classifyInstance(instance));\n    System.out.println(\"NeurophWekaClassifier - distributionForInstance for {5.1, 3.5, 1.4, 0.2}\");\n    double dist[]=neurophWekaClassifier.distributionForInstance(instance);\n    for (int i=0; i < dist.length; i++) {\n      System.out.println(\"Class \" + i + \": \"+ dist[i]);\n    }\n  }\n catch (  Exception ex) {\n    Logger.getLogger(WekaNeurophSample.class.getName()).log(Level.SEVERE,null,ex);\n  }\n}\n', '0.6666666666666666', '8', '3');
INSERT INTO `case_study` VALUES ('1404', 'generateTrainingSettings()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\AutoTrainer.java', 'neuroph', '11', '47', '39', '-1000', '4', '0.1364', '0.0465', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void generateTrainingSettings(){\n  double pom=minLearningRate;\n  for (int hiddenNeurons=minHiddenNeurons; hiddenNeurons <= maxHiddenNeurons; hiddenNeurons+=hiddenNeuronsStep) {\n    for (double learningRate=minLearningRate; learningRate <= maxLearningRate; learningRate+=learningRateStep) {\n      for (double maxError=maxErrorMin; maxError <= maxErrorMax; maxError+=maxErrorStep) {\n        TrainingSettings ts=new TrainingSettings().setHiddenNeurons(hiddenNeurons).setLearningRate(learningRate).setMaxError(maxError).setMaxIterations(getMaxIterations());\n        this.trainingSettingsList.add(ts);\n      }\n    }\n    minLearningRate=pom;\n  }\n  LOGGER.log(Level.INFO,\"Generated : {0} settings.\",this.trainingSettingsList.size());\n}\n', '0.2', '7', '4');
INSERT INTO `case_study` VALUES ('1406', 'calculateTrainingStatistics(TrainingSettings,List<TrainingResult>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\AutoTrainer.java', 'neuroph', '7', '12', '3', '-1000', '2', '0.3095', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private TrainingResult calculateTrainingStatistics(TrainingSettings ts,List<TrainingResult> results){\n  System.out.println(\"working on statistic...\");\n  TrainingResult result=new TrainingResult(ts);\n  TrainingStatistics iterationsStat=TrainingStatistics.calculateIterations(results);\n  TrainingStatistics MSEStat=TrainingStatistics.calculateMSE(results);\n  result.setMSE(MSEStat);\n  result.setIterationStat(iterationsStat);\n  return result;\n}\n', '0.4', '5', '1');
INSERT INTO `case_study` VALUES ('1411', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\RunExample.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2619', '0.1', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public static void main(String[] args){\n  AutoTrainer trainer=new AutoTrainer().setMaxError(0.01,0.03,0.01).setMaxIterations(20000).setTransferFunction(TransferFunctionType.TANH).setHiddenNeurons(new Range(10,20),2).setLearningRate(new Range(0.3,0.6),0.3).repeat(3).setTrainTestSplit(70);\n  DataSet dataSet=DataSet.createFromFile(FILEPATH,4,3,\"\\t\",true);\n  trainer.train(dataSet);\n  List<TrainingResult> results=trainer.getResults();\n  try {\n    Util.saveToCSV(trainer,results);\n  }\n catch (  FileNotFoundException ex) {\n    System.out.println(\"Error writing csv file\");\n  }\n  System.out.println(\"Main done!\");\n}\n', '0.3076923076923077', '5', '2');
INSERT INTO `case_study` VALUES ('1413', 'TrainingResult(TrainingSettings,double,int,ConfusionMatrix)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\TrainingResult.java', 'neuroph', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public TrainingResult(TrainingSettings ts){\n  this.settings=ts;\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('1445', 'TrainingStatistics(double,double,double,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\TrainingStatistics.java', 'neuroph', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', '/** \n */\npublic TrainingStatistics(){\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('1455', 'calculateIterations(List<TrainingResult>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\TrainingStatistics.java', 'neuroph', '19', '119', '67', '-1000', '3', '0.1842', '0.0957', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Based on list of TrainingResults this method calculate minimum iterations, maximum iterations, mean and standard deviation of list.\n * @param list\n * @return\n */\npublic static TrainingStatistics calculateIterations(List<TrainingResult> list){\n  int minIt=list.get(0).getIterations();\n  int maxIt=list.get(0).getIterations();\n  double meanIt;\n  double stdIt;\n  int sumIt=0;\n  double[] v=new double[list.size()];\n  int i=0;\n  for (  TrainingResult tr : list) {\n    if (tr.getIterations() < minIt) {\n      minIt=tr.getIterations();\n    }\n    if (tr.getIterations() > maxIt) {\n      maxIt=tr.getIterations();\n    }\n    sumIt+=tr.getIterations();\n    v[i++]=tr.getIterations();\n  }\n  meanIt=sumIt / list.size();\n  stdIt=std(meanIt,v);\n  return new TrainingStatistics(minIt,maxIt,meanIt,stdIt);\n}\n', '1', '9', '4');
INSERT INTO `case_study` VALUES ('1456', 'calculateMSE(List<TrainingResult>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\TrainingStatistics.java', 'neuroph', '19', '119', '67', '-1000', '3', '0.1842', '0.0957', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Based on list of TrainingResults this method calculate minimum MSE, maximum MSE, mean and standard deviation of list.\n * @param list\n * @return\n */\npublic static TrainingStatistics calculateMSE(List<TrainingResult> list){\n  double minIt=list.get(0).getTotalError();\n  double maxIt=list.get(0).getTotalError();\n  double meanIt;\n  double stdIt;\n  double pom=0;\n  double[] vrednosti=new double[list.size()];\n  int i=0;\n  for (  TrainingResult tr : list) {\n    if (tr.getTotalError() < minIt) {\n      minIt=tr.getTotalError();\n    }\n    if (tr.getTotalError() > maxIt) {\n      maxIt=tr.getTotalError();\n    }\n    pom+=tr.getTotalError();\n    vrednosti[i++]=tr.getTotalError();\n  }\n  meanIt=pom / list.size();\n  stdIt=std(meanIt,vrednosti);\n  return new TrainingStatistics(minIt,maxIt,meanIt,stdIt);\n}\n', '1', '9', '4');
INSERT INTO `case_study` VALUES ('1457', 'calculateStatistic(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\TrainingStatistics.java', 'neuroph', '16', '75', '30', '-1000', '3', '0.2679', '0.1517', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private static TrainingStatistics calculateStatistic(int[] array){\n  int min=array[0];\n  int max=array[0];\n  double mean=0;\n  double std=0;\n  int sum=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] < min) {\n      min=array[i];\n    }\n    if (array[i] > max) {\n      max=array[i];\n    }\n    sum+=array[i];\n  }\n  mean=sum / array.length;\n  std=std(mean,array);\n  return new TrainingStatistics(min,max,mean,std);\n}\n', '0', '7', '4');
INSERT INTO `case_study` VALUES ('1460', 'std(double,int[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\autotrain\\TrainingStatistics.java', 'neuroph', '6', '10', '5', '-1000', '3', '0.3333', '0.1024', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'private static double std(double mean,double[] sum){\n  double std=0;\n  for (  double temp : sum) {\n    std+=Math.pow(temp - mean,2);\n  }\n  return Math.sqrt(std / sum.length);\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('1465', 'createMatrix()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\AbstractTraining.java', 'neuroph', '8', '19', '10', '-1000', '3', '0.3', '0.1216', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Method that creates confusion matrix from given dataset and neuraln\n * network\n * @return confusion matrix for this training\n */\npublic ConfusionMatrix createMatrix(){\n  Evaluation eval=new Evaluation();\n  String[] classLabels=new String[dataset.getOutputSize()];\n  for (int i=0; i < dataset.getOutputSize(); i++) {\n    classLabels[i]=dataset.getColumnName(dataset.getInputSize() + i);\n  }\n  eval.addEvaluator(new ClassifierEvaluator.MultiClass(classLabels));\n  return eval.evaluateDataSet(neuralNet,dataset).getConfusionMatrix();\n}\n', '0.5', '3', '2');
INSERT INTO `case_study` VALUES ('1466', 'AbstractTraining(NeuralNetwork,DataSet,TrainingSettings)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\AbstractTraining.java', 'neuroph', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Create instance of training with new neural network\n * @param dataset\n * @param settings\n */\npublic AbstractTraining(DataSet dataset,TrainingSettings settings){\n  this.dataset=dataset;\n  this.settings=settings;\n  this.stats=new TrainingStatistics();\n  this.neuralNet=new MultiLayerPerceptron(TransferFunctionType.SIGMOID,dataset.getInputSize(),settings.getHiddenNeurons(),dataset.getOutputSize());\n}\n', '0.8', '6', '1');
INSERT INTO `case_study` VALUES ('1475', 'testNeuralNet()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\BackpropagationTraining.java', 'neuroph', '6', '5', '0', '-1000', '2', '0.5', '0.4', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '/** \n * Method that set up learning rule with given settings, learns dataset and\n * creates statistics from results of the test\n */\n@Override public void testNeuralNet(){\n  BackPropagation bp=(BackPropagation)this.setParameters();\n  this.getNeuralNet().setLearningRule(bp);\n  this.getNeuralNet().learn(this.getDataset());\n  this.getStats().addData(new TrainingResult(bp.getCurrentIteration(),bp.getTotalNetworkError(),createMatrix()));\n  this.getStats().calculateParameters();\n}\n', '0.5454545454545454', '1', '1');
INSERT INTO `case_study` VALUES ('1480', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\BackPropBenchmarks.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.2917', '0.3', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '/** \n * Executes all training`s from list with predefined number of repetitions\n * and resets neural net\n */\npublic void run(){\n  for (  AbstractTraining training : listOfTrainings) {\n    for (int i=0; i < noOfRepetitions; i++) {\n      training.testNeuralNet();\n      training.getNeuralNet().randomizeWeights();\n    }\n    System.out.println(training.getStats());\n  }\n}\n', '0.5', '2', '3');
INSERT INTO `case_study` VALUES ('1483', 'startBenchmark(List<Class<? extends AbstractTraining>>,List<TrainingSettings>,DataSet,MultiLayerPerceptron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\BackPropBenchmarks.java', 'neuroph', '12', '45', '24', '-1000', '4', '0.2014', '0.1232', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Creates all training`s using list training types, settings and execute run method\n * @param trainingTypeCollection\n * @param settingsCollection\n * @param trainingSet \n */\npublic void startBenchmark(List<Class<? extends AbstractTraining>> trainingTypeCollection,List<TrainingSettings> settingsCollection,DataSet trainingSet){\n  for (  TrainingSettings trainingSettings : settingsCollection) {\n    for (    Class<? extends AbstractTraining> trainingType : trainingTypeCollection) {\n      AbstractTraining training=null;\n      if (trainingType.equals(BackpropagationTraining.class)) {\n        training=new BackpropagationTraining(trainingSet,trainingSettings);\n      }\n else       if (trainingType.equals(MomentumTraining.class)) {\n        training=new MomentumTraining(trainingSet,trainingSettings);\n      }\n else       if (trainingType.equals(QuickpropagationTraining.class)) {\n        training=new QuickpropagationTraining(trainingSet,trainingSettings);\n      }\n else       if (trainingType.equals(ResilientTraining.class)) {\n        training=new ResilientTraining(trainingSet,trainingSettings);\n      }\n      this.addTraining(training);\n    }\n  }\n  this.run();\n}\n', '1', '6', '7');
INSERT INTO `case_study` VALUES ('1487', 'exportToCSV(String,List<AbstractTraining>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\ExportUtil.java', 'neuroph', '8', '17', '6', '-1000', '3', '0.3333', '0.3086', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Method for writing to csv into given file path\n * @param filePath\n * @param listOfTrainings\n * @throws IOException \n */\npublic static void exportToCSV(String filePath,List<AbstractTraining> listOfTrainings) throws IOException {\n  FileWriter out=new FileWriter(filePath + \".csv\");\n  out.write(writeheader());\n  for (  AbstractTraining training : listOfTrainings) {\n    out.write(prepareLine(training));\n  }\n  out.flush();\n  out.close();\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('1488', 'prepareLine(AbstractTraining)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\ExportUtil.java', 'neuroph', '24', '45', '0', '-1000', '3', '0.6563', '0.7252', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Method for generating one line from training\n * @param training\n * @return \n */\nprivate static String prepareLine(AbstractTraining training){\n  String line=\"\";\n  line+=training.getNeuralNet().getLearningRule().getClass().getName() + DELIMITER;\n  line+=training.getStats().getMinIterations() + DELIMITER;\n  line+=training.getStats().getMaxIterations() + DELIMITER;\n  line+=training.getStats().getMeanIterations() + DELIMITER;\n  line+=training.getStats().getStdIterations() + DELIMITER;\n  line+=training.getStats().getMinError() + DELIMITER;\n  line+=training.getStats().getMaxError() + DELIMITER;\n  line+=training.getStats().getMeanError() + DELIMITER;\n  line+=training.getStats().getStdError() + DELIMITER;\n  line+=training.getSettings().getLearningRate() + DELIMITER;\n  line+=training.getSettings().getMomentum() + DELIMITER;\n  line+=training.getSettings().getMaxIterations() + DELIMITER;\n  line+=training.getSettings().getMaxError() + DELIMITER;\n  line+=String.valueOf(training.getSettings().isBatchMode()) + DELIMITER;\n  line+=training.getSettings().getHiddenNeurons() + DELIMITER;\n  line+=training.getSettings().getDecreaseFactor() + DELIMITER;\n  line+=training.getSettings().getIncreaseFactor() + DELIMITER;\n  line+=training.getSettings().getInitialDelta() + DELIMITER;\n  line+=training.getSettings().getMaxDelta() + DELIMITER;\n  line+=training.getSettings().getMinDelta() + DELIMITER + \"\\n\";\n  return line;\n}\n', '0.17391304347826086', '2', '1');
INSERT INTO `case_study` VALUES ('1489', 'writeheader()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\ExportUtil.java', 'neuroph', '24', '45', '0', '-1000', '3', '0.875', '0.7673', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Method for generating header for csv file\n * @return \n */\nprivate static String writeheader(){\n  String header=\"\";\n  header+=\"Algorithm\" + DELIMITER;\n  header+=\"Minimum iterations\" + DELIMITER;\n  header+=\"Maximum iterations\" + DELIMITER;\n  header+=\"Mean of iterations\" + DELIMITER;\n  header+=\"Standard deviation of iterations\" + DELIMITER;\n  header+=\"Minimum total error\" + DELIMITER;\n  header+=\"Maximum total error\" + DELIMITER;\n  header+=\"Mean of total error\" + DELIMITER;\n  header+=\"Standard deviation of total error\" + DELIMITER;\n  header+=\"Learning rate\" + DELIMITER;\n  header+=\"Momentum\" + DELIMITER;\n  header+=\"Maximum iterations\" + DELIMITER;\n  header+=\"Maximum error\" + DELIMITER;\n  header+=\"Batch mode\" + DELIMITER;\n  header+=\"Hidden neurons\" + DELIMITER;\n  header+=\"Decrease factor\" + DELIMITER;\n  header+=\"Increase factor\" + DELIMITER;\n  header+=\"Initial delta\" + DELIMITER;\n  header+=\"Maximum delta\" + DELIMITER;\n  header+=\"Minimum delta\" + DELIMITER + \"\\n\";\n  return header;\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('1492', 'testNeuralNet()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\MomentumTraining.java', 'neuroph', '6', '11', '7', '-1000', '2', '0.3333', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Method that set up learning rule with given settings, learns dataset and\n * creates statistics from results of the test\n */\n@Override public void testNeuralNet(){\n  MomentumBackpropagation mbp=(MomentumBackpropagation)setParameters();\n  getNeuralNet().setLearningRule(mbp);\n  getNeuralNet().learn(getDataset());\n  this.getStats().addData(new TrainingResult(mbp.getCurrentIteration(),mbp.getTotalNetworkError(),createMatrix()));\n  this.getStats().calculateParameters();\n}\n', '0.5454545454545454', '1', '1');
INSERT INTO `case_study` VALUES ('1496', 'testNeuralNet()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\QuickpropagationTraining.java', 'neuroph', '6', '11', '7', '-1000', '2', '0.3333', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Method that set up learning rule with given settings, learns dataset and\n * creates statistics from results of the test\n */\n@Override public void testNeuralNet(){\n  QuickPropagation qp=(QuickPropagation)setParameters();\n  getNeuralNet().setLearningRule(qp);\n  getNeuralNet().learn(getDataset());\n  this.getStats().addData(new TrainingResult(qp.getCurrentIteration(),qp.getTotalNetworkError(),createMatrix()));\n  this.getStats().calculateParameters();\n}\n', '0.5454545454545454', '1', '1');
INSERT INTO `case_study` VALUES ('1500', 'testNeuralNet()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\ResilientTraining.java', 'neuroph', '6', '11', '7', '-1000', '2', '0.3333', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Method that set up learning rule with given settings, learns dataset and\n * creates statistics from results of the test\n */\n@Override public void testNeuralNet(){\n  ResilientPropagation rp=(ResilientPropagation)setParameters();\n  getNeuralNet().setLearningRule(rp);\n  getNeuralNet().learn(getDataset());\n  this.getStats().addData(new TrainingResult(rp.getCurrentIteration(),rp.getTotalNetworkError(),createMatrix()));\n  this.getStats().calculateParameters();\n}\n', '0.5454545454545454', '1', '1');
INSERT INTO `case_study` VALUES ('1510', 'TrainingSettings(double,double,int,int,double,boolean)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\TrainingSettings.java', 'neuroph', '8', '28', '28', '-1000', '8', '0.125', '0', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '/** \n * Create instance of training settings with given parameters\n * @param learningRate\n * @param momentum\n * @param hiddenNeurons\n * @param maxIterations\n * @param maxError\n * @param batchMode\n */\npublic TrainingSettings(double learningRate,double momentum,int hiddenNeurons,int maxIterations,double maxError,boolean batchMode){\n  this.learningRate=learningRate;\n  this.momentum=momentum;\n  this.hiddenNeurons=hiddenNeurons;\n  this.maxIterations=maxIterations;\n  this.maxError=maxError;\n  this.batchMode=batchMode;\n}\n', '0', '12', '1');
INSERT INTO `case_study` VALUES ('1534', 'TrainingSettingsGenerator(double,double,double,int,int,int,double,double,int,boolean)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\TrainingSettingsGenerator.java', 'neuroph', '24', '252', '228', '-1000', '10', '0.0833', '0.0497', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '/** \n * Create instance of generator with given parameters\n * @param minLearningRate\n * @param maxLearningRate\n * @param learningRateStep\n * @param minHiddenNeurons\n * @param maxHiddenNeurons\n * @param hiddenNeuronsStep\n * @param momentum\n * @param maxError\n * @param maxIterations\n * @param batchMode\n */\npublic TrainingSettingsGenerator(double minLearningRate,double maxLearningRate,double learningRateStep,int minHiddenNeurons,int maxHiddenNeurons,int hiddenNeuronsStep,double momentum,double maxError,int maxIterations,boolean batchMode){\n  if (minLearningRate > 0) {\n    this.minLearningRate=minLearningRate;\n  }\n else {\n    this.minLearningRate=0.1;\n  }\n  if (maxLearningRate > 0 && maxLearningRate > minLearningRate) {\n    this.maxLearningRate=maxLearningRate;\n  }\n else {\n    this.maxLearningRate=1;\n  }\n  if (learningRateStep > 0 && learningRateStep < 1) {\n    this.learningRateStep=learningRateStep;\n  }\n else {\n    this.learningRateStep=0.1;\n  }\n  if (minHiddenNeurons > 0) {\n    this.minHiddenNeurons=minHiddenNeurons;\n  }\n else {\n    this.minHiddenNeurons=1;\n  }\n  if (maxHiddenNeurons > 0 && maxHiddenNeurons > minHiddenNeurons) {\n    this.maxHiddenNeurons=maxHiddenNeurons;\n  }\n else {\n    this.maxHiddenNeurons=10;\n  }\n  if (hiddenNeuronsStep > 0) {\n    this.hiddenNeuronsStep=hiddenNeuronsStep;\n  }\n else {\n    this.hiddenNeuronsStep=1;\n  }\n  this.momentum=momentum;\n  this.maxError=maxError;\n  this.maxIterations=maxIterations;\n  this.batchMode=batchMode;\n}\n', '0', '26', '10');
INSERT INTO `case_study` VALUES ('1539', 'addData(TrainingResult)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\TrainingStatistics.java', 'neuroph', '10', '9', '0', '-1000', '2', '0.3', '0.3259', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Method that adds new training result to statistic and set minimum and\n * maximum iterations and total error\n * @param result\n */\npublic void addData(TrainingResult result){\n  if (result.getTrainingIterations() < minIterations) {\n    minIterations=result.getTrainingIterations();\n  }\n  if (result.getTrainingIterations() > maxIterations) {\n    maxIterations=result.getTrainingIterations();\n  }\n  if (result.getError() < minError) {\n    minError=result.getError();\n  }\n  if (result.getError() > maxError) {\n    maxError=result.getError();\n  }\n  trainingResults.add(result);\n}\n', '0.5', '1', '5');
INSERT INTO `case_study` VALUES ('1541', 'calculateMean()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\TrainingStatistics.java', 'neuroph', '9', '22', '8', '-1000', '3', '0.2963', '0.1505', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Method for calculating mean of iterations and total error\n */\nprivate void calculateMean(){\n  int sumIter=0;\n  double sumError=0;\n  for (int i=0; i < trainingResults.size(); i++) {\n    sumError+=trainingResults.get(i).getError();\n    sumIter+=trainingResults.get(i).getTrainingIterations();\n  }\n  meanError=sumError / trainingResults.size();\n  meanIterations=(double)sumIter / (double)trainingResults.size();\n}\n', '0.5', '3', '2');
INSERT INTO `case_study` VALUES ('1542', 'calculateStd()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\bpbench\\TrainingStatistics.java', 'neuroph', '11', '39', '23', '-1000', '4', '0.2222', '0.0734', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Method for calculating standard deviation of iterations and total error\n */\nprivate void calculateStd(){\n  if (meanError == 0 || meanIterations == 0) {\n    calculateMean();\n  }\n  double sumError=0;\n  int sumIter=0;\n  for (  TrainingResult trainingResult : trainingResults) {\n    sumError+=Math.pow(trainingResult.getError() - meanError,2);\n    sumIter+=Math.pow(trainingResult.getTrainingIterations() - meanIterations,2);\n  }\n  stdError=Math.sqrt(sumError / trainingResults.size());\n  stdIterations=Math.sqrt(sumIter / trainingResults.size());\n}\n', '0.5', '3', '4');
INSERT INTO `case_study` VALUES ('1563', 'Example()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\Example.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3333', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * 1. Generate trained artificial neural network.\n * 2. Create GraphmlExport instance. \n * 3. Parse the artificial neural network. \n * 4. Print to STDOUT\n */\npublic Example(){\n  NeuralNetwork ann=ExampleNetworXOR.getNetwork();\n  GraphmlExport ge=new GraphmlExport(ann);\n  ge.parse();\n  ge.printToStdout();\n}\n', '0.5', '2', '1');
INSERT INTO `case_study` VALUES ('1570', 'addEdges(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\Graph.java', 'neuroph', '10', '24', '3', '-1000', '3', '0.2444', '0.1217', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Adds a child element of type edge for each connection in the given neuron. \n * @param neuron\n */\nprivate void addEdges(final Neuron neuron){\n  final String source=neuron.getLabel();\n  String target;\n  String weight;\n  String weightKeyId=\"d1\";\n  for (  Connection con : neuron.getOutConnections()) {\n    target=con.getToNeuron().getLabel();\n    weight=String.valueOf(con.getWeight());\n    appendChild(new Edge(source,target,weightKeyId,weight));\n  }\n}\n', '0.6666666666666666', '6', '2');
INSERT INTO `case_study` VALUES ('1573', 'Graphml()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\Graphml.java', 'neuroph', '6', '15', '15', '-1000', '4', '0.1667', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public Graphml(){\n  addAttribute(new XMLAttribute(\"xmlns\",getNameSpace()));\n  addAttribute(new XMLAttribute(\"xmlns:xsi\",getXsiNameSpace()));\n  addAttribute(new XMLAttribute(\"xsi:schemaLocation\",getXsiSchemaLocation()));\n  appendChild(new Key(\"d1\",\"edge\",\"weight\",\"double\"));\n}\n', '0.75', '0', '1');
INSERT INTO `case_study` VALUES ('1580', 'writeToFile(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\GraphmlExport.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2917', '0.1556', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Writes graphml object to specified file. \n * @param filePathOut\n */\npublic void writeToFile(final String filePathOut){\n  try {\n    File file=new File(filePathOut);\n    file.createNewFile();\n    print(new PrintStream(file));\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('1583', 'createGraph(NeuralNetwork)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\GraphmlExport.java', 'neuroph', '8', '18', '8', '-1000', '3', '0.3125', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Create XML graph from neuroph neural network. \n * @param ann\n * @return\n */\nprivate Graph createGraph(final NeuralNetwork ann){\n  String id=ann.getLabel();\n  if (id == null || id.length() == 0) {\n    id=\"defaultId\";\n  }\n  Graph graph=new Graph(id);\n  graph.addNetwork(ann);\n  return graph;\n}\n', '0.6666666666666666', '3', '3');
INSERT INTO `case_study` VALUES ('1585', 'labelNeuron(int,int,Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\GraphmlExport.java', 'neuroph', '7', '11', '1', '-1000', '3', '0.4286', '0.2667', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '/** \n * Labels unlabelled neuron according to following rules. \n * 1. If Input neuron: \"Input-[neuronCount]\"\n * 2. If Bias neuron: \"L[layer]-bias\"\n * 3. otherwise: L[layer]-[neuronCount]  \n * @param layer\n * @param neuronCount\n * @param neuron\n */\nprivate void labelNeuron(final int layer,final int neuronCount,final Neuron neuron){\n  if (neuron.getLabel() == null) {\n    if (neuron.getClass() == InputNeuron.class) {\n      neuron.setLabel(\"Input-\" + neuronCount);\n    }\n else     if (neuron.getClass() == BiasNeuron.class) {\n      neuron.setLabel(\"L\" + layer + \"-bias\");\n    }\n else {\n      neuron.setLabel(\"L\" + layer + \"-\"+ neuronCount);\n    }\n  }\n}\n', '0.5', '3', '4');
INSERT INTO `case_study` VALUES ('1589', 'Key(String,String,String,String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\Key.java', 'neuroph', '6', '15', '15', '-1000', '3', '0.1667', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public Key(final String idValue,final String forValue,final String attrNameValue,final String attrTypeValue){\n  addAttribute(new XMLAttribute(\"id\",idValue));\n  addAttribute(new XMLAttribute(\"for\",forValue));\n  addAttribute(new XMLAttribute(\"attr.name\",attrNameValue));\n  addAttribute(new XMLAttribute(\"attr.type\",attrTypeValue));\n}\n', '1', '4', '1');
INSERT INTO `case_study` VALUES ('1600', 'toString()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\graphml\\XMLElement.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.6667', '0.4286', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public String toString(){\n  String out=getStartTag() + \">\";\n  if (getChildElements().size() != 0) {\n    out+=\"\\n\";\n    out+=getChildElementsString();\n  }\n  out+=getEndTag();\n  return out;\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('1612', 'addPatternError(double[],double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\learning\\CrossEntropyError.java', 'neuroph', '9', '29', '22', '-1000', '5', '0.2222', '0.1038', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public double[] addPatternError(double[] predictedOutput,double[] targetOutput){\n  double[] error=new double[targetOutput.length];\n  if (predictedOutput.length != targetOutput.length)   throw new IllegalArgumentException(\"Output array length and desired output array length must be the same size!\");\n  for (int i=0; i < predictedOutput.length; i++) {\n    errorDerivative[i]=targetOutput[i] - predictedOutput[i];\n    totalError+=targetOutput[i] * Math.log(predictedOutput[i]);\n  }\n  n++;\n  return error;\n}\n', '0', '4', '3');
INSERT INTO `case_study` VALUES ('1616', 'invertImage(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\licenceplaterecognition\\BinaryOps.java', 'neuroph', '16', '81', '42', '-1000', '3', '0.1705', '0.144', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Inverts the image colors from negative to positive\n * @return the image with inverted colors\n */\npublic static BufferedImage invertImage(String imageName){\n  BufferedImage inputFile=null;\n  try {\n    inputFile=ImageIO.read(new File(imageName));\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n  for (int x=0; x < inputFile.getWidth(); x++) {\n    for (int y=0; y < inputFile.getHeight(); y++) {\n      int rgba=inputFile.getRGB(x,y);\n      Color col=new Color(rgba,true);\n      col=new Color(255 - col.getRed(),255 - col.getGreen(),255 - col.getBlue());\n      inputFile.setRGB(x,y,col.getRGB());\n    }\n  }\n  try {\n    File outputFile=new File(\"blackandwhite.png\");\n    ImageIO.write(inputFile,\"png\",outputFile);\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n  return inputFile;\n}\n', '0', '9', '5');
INSERT INTO `case_study` VALUES ('1617', 'binary(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\licenceplaterecognition\\BinaryOps.java', 'neuroph', '14', '79', '67', '-1000', '4', '0.1176', '0.0389', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'public static BufferedImage binary(String textImageFile){\n  BufferedImage image=UtilImageIO.loadImage(textImageFile);\n  ImageFloat32 input=ConvertBufferedImage.convertFromSingle(image,null,ImageFloat32.class);\n  ImageUInt8 binary=new ImageUInt8(input.width,input.height);\n  ImageSInt32 label=new ImageSInt32(input.width,input.height);\n  double threshold=GThresholdImageOps.computeOtsu(input,0,256);\n  ThresholdImageOps.threshold(input,binary,(float)threshold,true);\n  ImageUInt8 filtered=BinaryImageOps.erode8(binary,1,null);\n  filtered=BinaryImageOps.dilate8(filtered,1,null);\n  BufferedImage visualFiltered=VisualizeBinaryData.renderBinary(filtered,null);\n  File charFile=new File(\"whiteandblack.png\");\n  try {\n    ImageIO.write(visualFiltered,\"png\",charFile);\n  }\n catch (  IOException ex) {\n    Logger.getLogger(BinaryOps.class.getName()).log(Level.SEVERE,null,ex);\n  }\n  return invertImage(\"whiteandblack.png\");\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('1621', 'crop(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\licenceplaterecognition\\OcrDemo.java', 'neuroph', '19', '126', '81', '-1000', '3', '0.1617', '0.0763', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Crop the part of an image with a white rectangle\n * @return A cropped image File\n */\npublic File crop(BufferedImage image){\n  int upperLeftCornerx=Integer.MAX_VALUE;\n  int upperLeftCornery=Integer.MAX_VALUE;\n  int lowerRightCornerx=Integer.MIN_VALUE;\n  int lowerRightCornery=Integer.MIN_VALUE;\n  for (int i=0; i < image.getWidth(); i++) {\n    for (int j=0; j < image.getHeight(); j++) {\n      if (image.getRGB(i,j) == WHITE.getRGB() && (i < upperLeftCornerx && j < upperLeftCornery) || (i <= upperLeftCornerx && j < upperLeftCornery) || (i < upperLeftCornerx && j <= upperLeftCornery)) {\n        upperLeftCornerx=i;\n        upperLeftCornery=j;\n      }\n      if (image.getRGB(i,j) == WHITE.getRGB() && ((i > lowerRightCornerx && j >= lowerRightCornery) || (i >= lowerRightCornerx && j > lowerRightCornery) || (i > lowerRightCornerx && j >= lowerRightCornery))) {\n        lowerRightCornerx=i;\n        lowerRightCornery=j;\n      }\n    }\n  }\n  BufferedImage croppedImage=image.getSubimage(upperLeftCornerx,upperLeftCornery,lowerRightCornerx - upperLeftCornerx,lowerRightCornery - upperLeftCornery);\n  File cropFile=new File(\"croppedimage.png\");\n  try {\n    ImageIO.write(croppedImage,\"png\",cropFile);\n  }\n catch (  IOException ex) {\n    Logger.getLogger(OcrDemo.class.getName()).log(Level.SEVERE,null,ex);\n  }\n  return cropFile;\n}\n', '0', '10', '18');
INSERT INTO `case_study` VALUES ('1622', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\licenceplaterecognition\\OcrDemo.java', 'neuroph', '24', '247', '218', '-1000', '6', '0.0759', '0.0341', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public void run(){\n  try {\n    if (image == null) {\n      image=ImageIO.read(new File(textImageFile));\n    }\n    image=BinaryOps.binary(textImageFile);\n    File cropFile=crop(image);\n    CharacterExtractor ce=new CharacterExtractor();\n    File outputDirectory=new File(charOutputFile);\n    ce.slice(cropFile,outputDirectory,60,60);\n    List<BufferedImage> lista=new ArrayList<BufferedImage>();\n    for (int i=0; i <= 7; i++) {\n      File f=new File(\"data/char_\" + i + \".png\");\n      BufferedImage bi=ImageIO.read(f);\n      lista.add(bi);\n    }\n    if (nnet == null) {\n      NeuralNetwork nnet=NeuralNetwork.createFromFile(neuralNetworkFile);\n    }\n    nnet.addPlugin(new OcrPlugin(new Dimension(10,10),ColorMode.BLACK_AND_WHITE));\n    OcrPlugin ocrPlugin=(OcrPlugin)nnet.getPlugin(OcrPlugin.class);\n    for (int i=0; i < lista.size(); i++) {\n      recognizedCharacters+=ocrPlugin.recognizeCharacter(new ImageJ2SE(lista.get(i))) + \" \";\n      System.out.print(ocrPlugin.recognizeCharacter(new ImageJ2SE(lista.get(i))) + \" \");\n    }\n    recognizedCharacters.trim();\n  }\n catch (  IOException e) {\n    System.out.println(\"Error reading dir: \" + e.getMessage());\n  }\n}\n', '0.625', '10', '6');
INSERT INTO `case_study` VALUES ('1635', 'MatrixMlpLayer(Layer,MatrixLayer,TransferFunction)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\MatrixMlpLayer.java', 'neuroph', '18', '126', '99', '-1000', '8', '0.1111', '0.0655', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public MatrixMlpLayer(Layer sourceLayer,MatrixLayer previousLayer,TransferFunction transferFunction){\n  this.sourceLayer=sourceLayer;\n  this.previousLayer=previousLayer;\n  if (!(previousLayer instanceof MatrixInputLayer))   ((MatrixMlpLayer)previousLayer).setNextLayer(this);\n  this.transferFunction=transferFunction;\n  this.neuronsCount=sourceLayer.getNeuronsCount();\n  this.inputsCount=previousLayer.getOutputs().length;\n  outputs=new double[neuronsCount];\n  inputs=new double[inputsCount];\n  netInput=new double[neuronsCount];\n  weights=new double[neuronsCount][inputsCount];\n  deltaWeights=new double[neuronsCount][inputsCount];\n  errors=new double[neuronsCount];\n  copyNeuronsToMatrices();\n}\n', '1', '9', '2');
INSERT INTO `case_study` VALUES ('1640', 'copyNeuronsToMatrices()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\MatrixMlpLayer.java', 'neuroph', '11', '37', '19', '-1000', '3', '0.1919', '0.1194', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void copyNeuronsToMatrices(){\n  int neuronIdx=0, connIdx=0;\n  for (  Neuron neuron : this.sourceLayer.getNeurons()) {\n    if (neuron instanceof BiasNeuron) {\n      this.useBias=true;\n    }\n    outputs[neuronIdx]=neuron.getOutput();\n    connIdx=0;\n    for (    Connection conn : neuron.getInputConnections()) {\n      weights[neuronIdx][connIdx]=conn.getWeight().getValue();\n      connIdx++;\n    }\n    neuronIdx++;\n  }\n}\n', '0.8', '6', '4');
INSERT INTO `case_study` VALUES ('1648', 'calculate()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\MatrixMlpLayer.java', 'neuroph', '10', '34', '23', '-1000', '4', '0.2', '0.0762', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'final public void calculate(){\n  this.inputs=previousLayer.getOutputs();\n  for (int i=0; i < neuronsCount; i++) {\n    netInput[i]=0;\n    for (int j=0; j < inputs.length; j++) {\n      netInput[i]+=inputs[j] * weights[i][j];\n    }\n    outputs[i]=transferFunction.getOutput(netInput[i]);\n  }\n  if (useBias)   outputs[neuronsCount - 1]=1;\n}\n', '1', '3', '4');
INSERT INTO `case_study` VALUES ('1658', 'calculateErrorAndUpdateOutputNeurons(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\MatrixMomentumBackpropagation.java', 'neuroph', '10', '24', '3', '-1000', '3', '0.2222', '0.1396', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * This method implements weights update procedure for the output neurons\n * @param patternErrorsingle pattern error vector\n */\n@Override protected void calculateErrorAndUpdateOutputNeurons(double[] patternError){\n  MatrixMlpLayer outputLayer=(MatrixMlpLayer)matrixLayers[matrixLayers.length - 1];\n  TransferFunction transferFunction=outputLayer.getTransferFunction();\n  double[] outputs=outputLayer.getOutputs();\n  double[] netInputs=outputLayer.getNetInput();\n  double[] neuronErrors=outputLayer.getErrors();\n  for (int i=0; i < outputs.length; i++) {\n    neuronErrors[i]=patternError[i] * transferFunction.getDerivative(netInputs[i]);\n  }\n  this.updateLayerWeights(outputLayer,neuronErrors);\n  System.out.println(\"MSE:\" + getErrorFunction().getTotalError());\n}\n', '0.5714285714285714', '7', '2');
INSERT INTO `case_study` VALUES ('1659', 'updateLayerWeights(MatrixMlpLayer,double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\MatrixMomentumBackpropagation.java', 'neuroph', '9', '19', '2', '-1000', '2', '0.2556', '0.1482', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'protected void updateLayerWeights(MatrixMlpLayer layer,double[] errors){\n  double[] inputs=layer.getInputs();\n  double[][] weights=layer.getWeights();\n  double[][] deltaWeights=layer.getDeltaWeights();\n  for (int neuronIdx=0; neuronIdx < layer.getNeuronsCount(); neuronIdx++) {\n    for (int weightIdx=0; weightIdx < weights[neuronIdx].length; weightIdx++) {\n      double deltaWeight=this.learningRate * errors[neuronIdx] * inputs[weightIdx] + momentum * (deltaWeights[neuronIdx][weightIdx]);\n      deltaWeights[neuronIdx][weightIdx]=deltaWeight;\n      weights[neuronIdx][weightIdx]+=deltaWeight;\n    }\n  }\n}\n', '0.25', '10', '3');
INSERT INTO `case_study` VALUES ('1660', 'calculateErrorAndUpdateHiddenNeurons()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\MatrixMomentumBackpropagation.java', 'neuroph', '18', '112', '71', '-1000', '4', '0.1319', '0.077', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * backpropogate errors through all hidden layers and update conneciion weights\n * for those layers.\n */\n@Override protected void calculateErrorAndUpdateHiddenNeurons(){\n  int layersCount=matrixMlp.getLayersCount();\n  for (int layerIdx=layersCount - 2; layerIdx > 0; layerIdx--) {\n    MatrixMlpLayer currentLayer=(MatrixMlpLayer)matrixLayers[layerIdx];\n    TransferFunction transferFunction=currentLayer.getTransferFunction();\n    int neuronsCount=currentLayer.getNeuronsCount();\n    double[] neuronErrors=currentLayer.getErrors();\n    double[] netInputs=currentLayer.getNetInput();\n    MatrixMlpLayer nextLayer=(MatrixMlpLayer)currentLayer.getNextLayer();\n    double[] nextLayerErrors=nextLayer.getErrors();\n    double[][] nextLayerWeights=nextLayer.getWeights();\n    for (int neuronIdx=0; neuronIdx < neuronsCount; neuronIdx++) {\n      double weightedErrorsSum=0;\n      for (int nextLayerNeuronIdx=0; nextLayerNeuronIdx < nextLayer.getNeuronsCount(); nextLayerNeuronIdx++) {\n        weightedErrorsSum+=nextLayerErrors[nextLayerNeuronIdx] * nextLayerWeights[nextLayerNeuronIdx][neuronIdx];\n      }\n      neuronErrors[neuronIdx]=transferFunction.getDerivative(netInputs[neuronIdx]) * weightedErrorsSum;\n    }\n    this.updateLayerWeights(currentLayer,neuronErrors);\n  }\n}\n', '0.375', '13', '4');
INSERT INTO `case_study` VALUES ('1663', 'createMatrixLayers()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\MatrixMultiLayerPerceptron.java', 'neuroph', '10', '29', '13', '-1000', '3', '0.2333', '0.108', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void createMatrixLayers(){\n  matrixLayers=new MatrixLayer[sourceNetwork.getLayersCount()];\n  matrixLayers[0]=new MatrixInputLayer(sourceNetwork.getLayerAt(0).getNeuronsCount());\n  MatrixLayer prevLayer=matrixLayers[0];\n  for (int i=1; i < sourceNetwork.getLayersCount(); i++) {\n    Layer layer=sourceNetwork.getLayerAt(i);\n    MatrixMlpLayer newBpLayer=new MatrixMlpLayer(layer,prevLayer,new Tanh());\n    matrixLayers[i]=newBpLayer;\n    prevLayer=newBpLayer;\n  }\n}\n', '0.8333333333333334', '4', '2');
INSERT INTO `case_study` VALUES ('1668', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\matrixmlp\\TestMatrixMLP.java', 'neuroph', '9', '19', '2', '-1000', '2', '0.2963', '0.1944', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Create and run MLP with XOR training set\n */\npublic static void main(String[] args){\n  DataSet trainingSet=new DataSet(2,1);\n  trainingSet.addRow(new DataSetRow(new double[]{0,0},new double[]{0}));\n  trainingSet.addRow(new DataSetRow(new double[]{0,1},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,0},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,1},new double[]{0}));\n  MultiLayerPerceptron nnet=new MultiLayerPerceptron(TransferFunctionType.TANH,2,3,1);\n  MatrixMultiLayerPerceptron mnet=new MatrixMultiLayerPerceptron(nnet);\n  System.out.println(\"Training network...\");\n  mnet.learn(trainingSet);\n  System.out.println(\"Done training network.\");\n}\n', '0.8333333333333334', '4', '1');
INSERT INTO `case_study` VALUES ('1669', 'normalizeSunspots(double,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\SunSpots.java', 'neuroph', '13', '45', '12', '-1000', '3', '0.2115', '0.1116', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Normalize the sunspots.\n * @param lo Low range for normalization.\n * @param hi High range for normalization.\n */\npublic void normalizeSunspots(double lo,double hi){\n  double min=Double.MAX_VALUE;\n  double max=Double.MIN_VALUE;\n  for (int year=0; year < SUNSPOTS.length; year++) {\n    min=Math.min(min,SUNSPOTS[year]);\n    max=Math.max(max,SUNSPOTS[year]);\n  }\n  normalizedSunspots=new double[SUNSPOTS.length];\n  closedLoopSunspots=new double[SUNSPOTS.length];\n  mean=0;\n  for (int year=0; year < SUNSPOTS.length; year++) {\n    normalizedSunspots[year]=closedLoopSunspots[year]=((SUNSPOTS[year] - min) / (max - min)) * (hi - lo) + lo;\n    mean+=normalizedSunspots[year] / SUNSPOTS.length;\n  }\n}\n', '0', '6', '3');
INSERT INTO `case_study` VALUES ('1670', 'generateTrainingData()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\SunSpots.java', 'neuroph', '12', '50', '34', '-1000', '3', '0.1667', '0.0546', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Generate the training data for the training sunspot years.\n * @return The training data.\n */\npublic DataSet generateTrainingData(){\n  DataSet result=new DataSet(WINDOW_SIZE,1);\n  for (int year=TRAIN_START; year < TRAIN_END; year++) {\n    double[] input=new double[WINDOW_SIZE];\n    double[] ideal=new double[1];\n    int index=0;\n    for (int i=year - WINDOW_SIZE; i < year; i++) {\n      input[index++]=this.normalizedSunspots[i];\n    }\n    ideal[0]=this.normalizedSunspots[year];\n    result.addRow(new DataSetRow(input,ideal));\n  }\n  return result;\n}\n', '0.6666666666666666', '8', '3');
INSERT INTO `case_study` VALUES ('1671', 'predict(NeuralNetwork)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\SunSpots.java', 'neuroph', '22', '178', '125', '-1000', '4', '0.1222', '0.0854', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '/** \n * Predict sunspots.\n * @param network Neural network to use.\n */\npublic void predict(NeuralNetwork network){\n  NumberFormat f=NumberFormat.getNumberInstance();\n  f.setMaximumFractionDigits(4);\n  f.setMinimumFractionDigits(4);\n  System.out.println(\"Year\\tActual\\tPredict\\tClosed Loop Predict\");\n  for (int year=EVALUATE_START; year < EVALUATE_END; year++) {\n    double[] input=new double[WINDOW_SIZE];\n    for (int i=0; i < input.length; i++) {\n      input[i]=this.normalizedSunspots[(year - WINDOW_SIZE) + i];\n    }\n    network.setInput(input);\n    network.calculate();\n    double[] output=network.getOutput();\n    double prediction=output[0];\n    this.closedLoopSunspots[year]=prediction;\n    for (int i=0; i < input.length; i++) {\n      input[i]=this.closedLoopSunspots[(year - WINDOW_SIZE) + i];\n    }\n    network.setInput(input);\n    network.calculate();\n    output=network.getOutput();\n    double closedLoopPrediction=output[0];\n    System.out.println((STARTING_YEAR + year) + \"\\t\" + f.format(this.normalizedSunspots[year])+ \"\\t\"+ f.format(prediction)+ \"\\t\"+ f.format(closedLoopPrediction));\n  }\n}\n', '0.3333333333333333', '13', '4');
INSERT INTO `case_study` VALUES ('1676', 'BufferedDataSet(File,int,int,String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\BufferedDataSet.java', 'neuroph', '9', '34', '32', '-1000', '7', '0.1313', '0.0136', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '/** \n * Creates new buffered data set with specified file, input and output size.\n * Data set file is assumed to be txt value with data set rows in a single line,\n * with input and output vector values delimited by delimiter.\n * @param file datas et file\n * @param inputSize size of input vector\n * @param outputSize size of outut vector\n * @param delimiter delimiter for vector values\n * @throws FileNotFoundException \n */\npublic BufferedDataSet(File file,int inputSize,int outputSize,String delimiter) throws FileNotFoundException {\n  super(inputSize,outputSize);\n  this.delimiter=delimiter;\n  this.file=file;\n  this.fileReader=new FileReader(file);\n  this.bufferedReader=new BufferedReader(fileReader);\n  fileLinesNumber=countFileLines();\n  loadNextBuffer();\n}\n', '0', '8', '1');
INSERT INTO `case_study` VALUES ('1677', 'countFileLines()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\BufferedDataSet.java', 'neuroph', '8', '24', '20', '-1000', '5', '0.2', '0.0933', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Counts and returns number of lines in a file\n * @return number of lines in a file\n * @throws FileNotFoundException \n */\nprivate long countFileLines() throws FileNotFoundException {\n  LineNumberReader lnr=new LineNumberReader(new FileReader(file));\n  try {\n    while (lnr.skip(Long.MAX_VALUE) > 0) {\n    }\n    ;\n  }\n catch (  IOException ex) {\n    Logger.getLogger(BufferedDataSet.class.getName()).log(Level.SEVERE,null,ex);\n  }\n  return lnr.getLineNumber() + 1;\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('1682', 'loadNextBuffer()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\BufferedDataSet.java', 'neuroph', '35', '540', '485', '-1000', '7', '0.0756', '0.066', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', '/** \n * Loads next bufferSize rows from file into buffer\n */\nprivate void loadNextBuffer(){\n  try {\n    String line=\"\";\n    this.clear();\n    rowsLoaded=0;\n    while (rowsLoaded < bufferSize) {\n      line=bufferedReader.readLine();\n      if (line == null) {\n        break;\n      }\n      rowsLoaded++;\n      double[] inputs=new double[getInputSize()];\n      double[] outputs=new double[getOutputSize()];\n      String[] values=line.split(delimiter);\n      if (values[0].equals(\"\")) {\n        continue;\n      }\n      for (int i=0; i < getInputSize(); i++) {\n        inputs[i]=Double.parseDouble(values[i]);\n      }\n      for (int i=0; i < getOutputSize(); i++) {\n        outputs[i]=Double.parseDouble(values[getInputSize() + i]);\n      }\n      if (getOutputSize() > 0) {\n        this.addRow(new DataSetRow(inputs,outputs));\n      }\n else {\n        this.addRow(new DataSetRow(inputs));\n      }\n    }\n    bufferedRows=this.getRows();\n    bufferIterator=bufferedRows.iterator();\n  }\n catch (  FileNotFoundException ex) {\n    ex.printStackTrace();\n  }\ncatch (  IOException ex) {\n    if (fileReader != null) {\n      try {\n        fileReader.close();\n      }\n catch (      IOException ex1) {\n      }\n    }\n    ex.printStackTrace();\n  }\ncatch (  NumberFormatException ex) {\n    if (fileReader != null) {\n      try {\n        fileReader.close();\n      }\n catch (      IOException ex1) {\n      }\n    }\n    ex.printStackTrace();\n    throw ex;\n  }\n}\n', '0.3333333333333333', '11', '14');
INSERT INTO `case_study` VALUES ('1683', 'DataSet(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSet.java', 'neuroph', '8', '28', '28', '-1000', '8', '0.125', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '/** \n * Creates an instance of new empty training set\n * @param inputSize  Length of the input vector\n * @param outputSize Length of the output vector\n */\npublic DataSet(int inputSize,int outputSize){\n  this.rows=new ArrayList();\n  this.inputSize=inputSize;\n  this.outputSize=outputSize;\n  this.isSupervised=true;\n  setDefaultColumnNames();\n  setDefaultColumnTypes();\n}\n', '0', '6', '1');
INSERT INTO `case_study` VALUES ('1685', 'addRow(DataSetRow)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSet.java', 'neuroph', '6', '12', '9', '-1000', '4', '0.25', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Adds a new dataset row with specified input and output\n * @param input\n * @param output\n */\npublic void addRow(double[] input,double[] output){\n  this.addRow(new DataSetRow(input,output));\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('1707', 'toString()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSet.java', 'neuroph', '13', '47', '16', '-1000', '3', '0.2051', '0.2554', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Returns string representation of this data set\n * @return string representation of this data set\n */\n@Override public String toString(){\n  StringBuilder sb=new StringBuilder();\n  sb.append(\"Dataset Label: \").append(label).append(System.lineSeparator());\n  if (columnNames != null) {\n    sb.append(\"Columns: \");\n    for (    String columnName : columnNames) {\n      sb.append(columnName).append(\", \");\n    }\n    sb.delete(sb.length() - 2,sb.length() - 1);\n    sb.append(System.lineSeparator());\n  }\n  for (  DataSetRow row : rows) {\n    sb.append(row).append(System.lineSeparator());\n  }\n  return sb.toString();\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1708', 'toCSV()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSet.java', 'neuroph', '12', '42', '18', '-1000', '3', '0.2333', '0.2538', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Returns enire dataset in csv format\n * @return\n */\npublic String toCSV(){\n  StringBuilder sb=new StringBuilder();\n  if ((columnNames != null) && (columnNames.length > 0)) {\n    for (    String columnName : columnNames) {\n      sb.append(columnName).append(\", \");\n    }\n    sb.delete(sb.length() - 2,sb.length() - 1);\n    sb.append(System.lineSeparator());\n  }\n  for (  DataSetRow row : rows) {\n    sb.append(row.toCSV());\n    sb.append(System.lineSeparator());\n  }\n  return sb.toString();\n}\n', '1', '3', '5');
INSERT INTO `case_study` VALUES ('1715', 'createTrainingAndTestSubsets(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSet.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2667', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Returns training and test subsets in the specified percent ratio\n * @param trainSetPercent\n * @param testSetPercent\n * @return\n */\npublic DataSet[] createTrainingAndTestSubsets(int trainSetPercent,int testSetPercent){\n  SubSampling sampling=new SubSampling(trainSetPercent,testSetPercent);\n  DataSet[] trainAndTestSet=new DataSet[2];\n  sampling.sample(this).toArray(trainAndTestSet);\n  return trainAndTestSet;\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('1754', 'toString()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSetRow.java', 'neuroph', '13', '48', '18', '-1000', '4', '0.2154', '0.2933', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public String toString(){\n  StringBuilder sb=new StringBuilder();\n  sb.append(\"Input: \");\n  for (  double in : input) {\n    sb.append(in).append(\", \");\n  }\n  sb.delete(sb.length() - 2,sb.length() - 1);\n  if (isSupervised()) {\n    sb.append(\" Desired output: \");\n    for (    double out : desiredOutput) {\n      sb.append(out).append(\", \");\n    }\n    sb.delete(sb.length() - 2,sb.length() - 1);\n  }\n  return sb.toString();\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1755', 'toArray()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSetRow.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.3889', '0.2381', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public double[] toArray(){\n  double[] row=new double[input.length + desiredOutput.length];\n  System.arraycopy(input,0,row,0,input.length);\n  System.arraycopy(desiredOutput,0,row,input.length,desiredOutput.length);\n  return row;\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('1756', 'toCSV()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSetRow.java', 'neuroph', '10', '33', '21', '-1000', '4', '0.22', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public String toCSV(){\n  StringBuilder sb=new StringBuilder();\n  for (  double in : input) {\n    sb.append(in).append(\", \");\n  }\n  if (isSupervised()) {\n    for (    double out : desiredOutput) {\n      sb.append(out).append(\", \");\n    }\n  }\n  sb.delete(sb.length() - 2,sb.length() - 1);\n  return sb.toString();\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('1758', 'equals(Object)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\data\\DataSetRow.java', 'neuroph', '9', '24', '12', '-1000', '3', '0.2222', '0.1786', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public boolean equals(Object obj){\n  if (this == obj) {\n    return true;\n  }\n  if (obj == null) {\n    return false;\n  }\n  if (getClass() != obj.getClass()) {\n    return false;\n  }\n  final DataSetRow other=(DataSetRow)obj;\n  if (!Objects.equals(this.label,other.label)) {\n    return false;\n  }\n  if (!Arrays.equals(this.input,other.input)) {\n    return false;\n  }\n  if (!Arrays.equals(this.desiredOutput,other.desiredOutput)) {\n    return false;\n  }\n  return true;\n}\n', '0', '5', '7');
INSERT INTO `case_study` VALUES ('1801', 'learn(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\IterativeLearning.java', 'neuroph', '22', '223', '215', '-1000', '15', '0.0852', '0.0313', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Trains network for the specified training set and number of iterations\n * @param trainingSet training set to learn\n * @param maxIterations maximum numberof iterations to learn\n */\npublic void learn(DataSet trainingSet,int maxIterations){\n  this.setMaxIterations(maxIterations);\n  this.learn(trainingSet);\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('1804', 'doOneLearningIteration(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\IterativeLearning.java', 'neuroph', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Runs one learning iteration with the specified training set and fires\n * event to notify observers. This method does the the doLearningEpoch() and in addtion\n * notifes observrs when iteration is done.\n * @param trainingSet training set to learn\n */\npublic void doOneLearningIteration(DataSet trainingSet){\n  beforeEpoch();\n  doLearningEpoch(trainingSet);\n  afterEpoch();\n  fireLearningEvent(new LearningEvent(this,LearningEvent.Type.LEARNING_STOPPED));\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('1822', 'learn(DataSet,double,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\SupervisedLearning.java', 'neuroph', '6', '14', '13', '-1000', '5', '0.2', '0.0357', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '/** \n * Trains network for the specified training set, maxError and number of iterations\n * @param trainingSet   training set to learn\n * @param maxError      learning stop condition. if maxError is reached learning stops\n * @param maxIterations maximum number of learning iterations\n */\npublic void learn(DataSet trainingSet,double maxError,int maxIterations){\n  this.trainingSet=trainingSet;\n  this.maxError=maxError;\n  setMaxIterations(maxIterations);\n  learn(trainingSet);\n}\n', '0.5', '5', '1');
INSERT INTO `case_study` VALUES ('1825', 'afterEpoch()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\SupervisedLearning.java', 'neuroph', '7', '19', '17', '-1000', '5', '0.1837', '0.06', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override protected void afterEpoch(){\n  double absErrorChange=Math.abs(previousEpochError - errorFunction.getTotalError());\n  if (absErrorChange <= this.minErrorChange) {\n    minErrorChangeIterationsCount++;\n  }\n else {\n    minErrorChangeIterationsCount=0;\n  }\n  if (batchMode == true) {\n    doBatchWeightsUpdate();\n  }\n}\n', '1', '2', '3');
INSERT INTO `case_study` VALUES ('1826', 'doLearningEpoch(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\SupervisedLearning.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3333', '0.131', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method implements basic logic for one learning epoch for the\n * supervised learning algorithms. Epoch is the one pass through the\n * training set. This method  iterates through the training set\n * and trains network for each element. It also sets flag if conditions\n * to stop learning has been reached: network error below some allowed\n * value, or maximum iteration count\n * @param trainingSet training set for training network\n */\n@Override public void doLearningEpoch(DataSet trainingSet){\n  Iterator<DataSetRow> iterator=trainingSet.iterator();\n  while (iterator.hasNext() && !isStopped()) {\n    DataSetRow dataSetRow=iterator.next();\n    learnPattern(dataSetRow);\n  }\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('1827', 'learnPattern(DataSetRow)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\SupervisedLearning.java', 'neuroph', '7', '15', '9', '-1000', '3', '0.2619', '0.0944', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Trains network with the input and desired output pattern from the specified training element\n * @param trainingElement supervised training element which contains input and desired output\n */\nprotected void learnPattern(DataSetRow trainingElement){\n  neuralNetwork.setInput(trainingElement.getInput());\n  neuralNetwork.calculate();\n  double[] output=neuralNetwork.getOutput();\n  double[] patternError=errorFunction.addPatternError(output,trainingElement.getDesiredOutput());\n  calculateWeightChanges(patternError);\n  if (!batchMode)   applyWeightChanges();\n}\n', '0.5', '3', '2');
INSERT INTO `case_study` VALUES ('1828', 'doBatchWeightsUpdate()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\SupervisedLearning.java', 'neuroph', '8', '20', '12', '-1000', '2', '0.2708', '0.122', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * This method updates network weights in batch mode - use accumulated weights change stored in Weight.deltaWeight\n * It is executed after each learning epoch, only if learning is done in batch mode.\n * @see SupervisedLearning#doLearningEpoch(org.neuroph.core.data.DataSet)\n */\nprotected void doBatchWeightsUpdate(){\n  List<Layer> layers=neuralNetwork.getLayers();\n  for (int i=neuralNetwork.getLayersCount() - 1; i > 0; i--) {\n    for (    Neuron neuron : layers.get(i).getNeurons()) {\n      for (      Connection connection : neuron.getInputConnections()) {\n        Weight weight=connection.getWeight();\n        weight.value+=weight.weightChange / getTrainingSet().size();\n        weight.weightChange=0;\n      }\n    }\n  }\n}\n', '0.8571428571428571', '5', '4');
INSERT INTO `case_study` VALUES ('1843', 'applyWeightChanges()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\SupervisedLearning.java', 'neuroph', '11', '44', '33', '-1000', '4', '0.2121', '0.1138', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void applyWeightChanges(){\n  List<Layer> layers=neuralNetwork.getLayers();\n  for (int i=neuralNetwork.getLayersCount() - 1; i > 0; i--) {\n    for (    Neuron neuron : layers.get(i).getNeurons()) {\n      for (      Connection connection : neuron.getInputConnections()) {\n        Weight weight=connection.getWeight();\n        if (!isBatchMode()) {\n          weight.value+=weight.weightChange;\n        }\n else {\n          weight.value+=(weight.weightChange / getTrainingSet().size());\n        }\n        weight.weightChange=0;\n      }\n    }\n  }\n}\n', '0.8571428571428571', '5', '5');
INSERT INTO `case_study` VALUES ('1845', 'doLearningEpoch(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\UnsupervisedLearning.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3333', '0.131', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method does one learning epoch for the unsupervised learning rules.\n * It iterates through the training set and trains network weights for each\n * element\n * @param trainingSettraining set for training network\n */\n@Override public void doLearningEpoch(DataSet trainingSet){\n  Iterator<DataSetRow> iterator=trainingSet.iterator();\n  while (iterator.hasNext() && !isStopped()) {\n    DataSetRow trainingSetRow=iterator.next();\n    learnPattern(trainingSetRow);\n  }\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('1846', 'learnPattern(DataSetRow)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\UnsupervisedLearning.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3333', '0.125', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Trains network with the pattern from the specified training element\n * @param DataSetItemunsupervised training element which contains network input\n */\nprotected void learnPattern(DataSetRow trainingElement){\n  double[] input=trainingElement.getInput();\n  this.neuralNetwork.setInput(input);\n  this.neuralNetwork.calculate();\n  this.updateNetworkWeights();\n}\n', '0.6666666666666666', '4', '1');
INSERT INTO `case_study` VALUES ('1849', 'Gaussian(Properties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\transfer\\Gaussian.java', 'neuroph', '6', '14', '13', '-1000', '5', '0.2222', '0.0833', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates an instance of Gaussian neuron transfer function with the\n * specified properties.\n * @param properties properties of the Gaussian function\n */\npublic Gaussian(Properties properties){\n  try {\n    this.sigma=(Double)properties.getProperty(\"transferFunction.sigma\");\n  }\n catch (  NullPointerException e) {\n  }\ncatch (  NumberFormatException e) {\n    System.err.println(\"Invalid transfer function properties! Using default values.\");\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('1856', 'Linear(Properties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\transfer\\Linear.java', 'neuroph', '6', '14', '13', '-1000', '5', '0.2222', '0.0833', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates an instance of Linear transfer function with specified properties\n */\npublic Linear(Properties properties){\n  try {\n    this.slope=(Double)properties.getProperty(\"transferFunction.slope\");\n  }\n catch (  NullPointerException e) {\n  }\ncatch (  NumberFormatException e) {\n    System.err.println(\"Invalid transfer function properties! Using default values.\");\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('1864', 'Ramp(double,double,double,double,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\transfer\\Ramp.java', 'neuroph', '7', '20', '19', '-1000', '6', '0.1571', '0.0238', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates an instance of Ramp transfer function with specified properties.\n */\npublic Ramp(Properties properties){\n  try {\n    this.slope=(Double)properties.getProperty(\"transferFunction.slope\");\n    this.yHigh=(Double)properties.getProperty(\"transferFunction.yHigh\");\n    this.yLow=(Double)properties.getProperty(\"transferFunction.yLow\");\n    this.xHigh=(Double)properties.getProperty(\"transferFunction.xHigh\");\n    this.xLow=(Double)properties.getProperty(\"transferFunction.xLow\");\n  }\n catch (  NullPointerException e) {\n  }\ncatch (  NumberFormatException e) {\n    System.err.println(\"Invalid transfer function properties! Using default values.\");\n  }\n}\n', '1', '8', '3');
INSERT INTO `case_study` VALUES ('1881', 'Sigmoid(Properties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\transfer\\Sigmoid.java', 'neuroph', '6', '14', '13', '-1000', '5', '0.2222', '0.0833', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates an instance of Sigmoid neuron transfer function with the\n * specified properties.\n * @param properties properties of the sigmoid function\n */\npublic Sigmoid(Properties properties){\n  try {\n    this.slope=(Double)properties.getProperty(\"transferFunction.slope\");\n  }\n catch (  NullPointerException e) {\n  }\ncatch (  NumberFormatException e) {\n    System.err.println(\"Invalid transfer function properties! Using default values.\");\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('1889', 'Step(Properties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\transfer\\Step.java', 'neuroph', '7', '19', '17', '-1000', '5', '0.2143', '0.0741', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates an instance of Step transfer function with specified properties\n */\npublic Step(Properties properties){\n  try {\n    this.yHigh=(Double)properties.getProperty(\"transferFunction.yHigh\");\n    this.yLow=(Double)properties.getProperty(\"transferFunction.yLow\");\n  }\n catch (  NullPointerException e) {\n  }\ncatch (  NumberFormatException e) {\n    System.err.println(\"Invalid transfer function properties! Using default values.\");\n  }\n}\n', '1', '5', '3');
INSERT INTO `case_study` VALUES ('1898', 'Tanh(Properties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\transfer\\Tanh.java', 'neuroph', '7', '20', '19', '-1000', '6', '0.1905', '0.0667', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates an instance of Tanh neuron transfer function with the\n * specified properties.\n * @param properties properties of the Tanh function\n */\npublic Tanh(Properties properties){\n  try {\n    this.slope=(Double)properties.getProperty(\"transferFunction.slope\");\n  }\n catch (  NullPointerException e) {\n  }\ncatch (  NumberFormatException e) {\n    System.err.println(\"Invalid transfer function properties! Using default values.\");\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('1907', 'Trapezoid()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\transfer\\Trapezoid.java', 'neuroph', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Creates an instance of Trapezoid transfer function with the specified\n * properties.\n */\npublic Trapezoid(Properties properties){\n  try {\n    this.leftLow=(Double)properties.getProperty(\"transferFunction.leftLow\");\n    this.leftHigh=(Double)properties.getProperty(\"transferFunction.leftHigh\");\n    this.rightLow=(Double)properties.getProperty(\"transferFunction.rightLow\");\n    this.rightHigh=(Double)properties.getProperty(\"transferFunction.rightHigh\");\n  }\n catch (  NullPointerException e) {\n  }\ncatch (  NumberFormatException e) {\n    System.err.println(\"Invalid transfer function properties! Using default values.\");\n  }\n}\n', '1', '7', '3');
INSERT INTO `case_study` VALUES ('1919', 'ClassificationMetrics(int,int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\ClassificationMetrics.java', 'neuroph', '7', '17', '13', '-1000', '3', '0.2', '0.0286', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Constructs a new measure using arguments\n * TODO: add class to which measure corresponds?\n * @param truePositive\n * @param trueNegative\n * @param falsePositive\n * @param falseNegative\n */\npublic ClassificationMetrics(int truePositive,int trueNegative,int falsePositive,int falseNegative){\n  this.truePositive=truePositive;\n  this.trueNegative=trueNegative;\n  this.falsePositive=falsePositive;\n  this.falseNegative=falseNegative;\n  this.total=falseNegative + falsePositive + trueNegative+ truePositive;\n}\n', '0', '9', '1');
INSERT INTO `case_study` VALUES ('1937', 'toString()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\ClassificationMetrics.java', 'neuroph', '27', '198', '45', '-1000', '10', '0.0895', '0.3271', '0', '0', '0', '0', '0', '1', '1', '0', '0', '1', '@Override public String toString(){\n  return \"Stats{\" + \"accuracy=\" + accuracy + \", precision=\"+ precision+ \", recall=\"+ recall+ \", fScore=\"+ fScore+ \", mserror=\"+ mserror+ \", corelationCoefficient=\"+ correlationCoefficient+ \'}\';\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('1939', 'createFromMatrix(ConfusionMatrix)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\ClassificationMetrics.java', 'neuroph', '21', '131', '52', '-1000', '1', '0.1397', '0.1244', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static ClassificationMetrics[] createFromMatrix(ConfusionMatrix confusionMatrix){\n  int classCount=confusionMatrix.getClassCount();\n  if (classCount == 2) {\n    ClassificationMetrics[] measures=new ClassificationMetrics[1];\n    String[] classLabels=confusionMatrix.getClassLabels();\n    int tp=confusionMatrix.get(0,0);\n    int tn=confusionMatrix.get(1,1);\n    int fp=confusionMatrix.get(1,0);\n    int fn=confusionMatrix.get(0,1);\n    measures[0]=new ClassificationMetrics(tp,tn,fp,fn);\n    measures[0].setClassLabel(classLabels[0]);\n    return measures;\n  }\n else {\n    ClassificationMetrics[] measures=new ClassificationMetrics[classCount];\n    String[] classLabels=confusionMatrix.getClassLabels();\n    for (int clsIdx=0; clsIdx < confusionMatrix.getClassCount(); clsIdx++) {\n      int tp=confusionMatrix.getTruePositive(clsIdx);\n      int tn=confusionMatrix.getTrueNegative(clsIdx);\n      int fp=confusionMatrix.getFalsePositive(clsIdx);\n      int fn=confusionMatrix.getFalseNegative(clsIdx);\n      measures[clsIdx]=new ClassificationMetrics(tp,tn,fp,fn);\n      measures[clsIdx].setClassLabel(classLabels[clsIdx]);\n    }\n    return measures;\n  }\n}\n', '0.14285714285714285', '15', '3');
INSERT INTO `case_study` VALUES ('1947', 'classify(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\Classifier.java', 'neuroph', '12', '46', '26', '-1000', '3', '0.2361', '0.1372', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public String classify(double[] pattern){\n  NeuralNetwork<?> nnet=getParentNetwork();\n  nnet.setInput(pattern);\n  nnet.calculate();\n  Neuron maxNeuron=null;\n  double maxOutput=Double.MIN_VALUE;\n  for (  Neuron neuron : nnet.getOutputNeurons()) {\n    if (neuron.getOutput() > maxOutput) {\n      maxOutput=neuron.getOutput();\n      maxNeuron=neuron;\n    }\n  }\n  if (maxOutput > threshold)   return maxNeuron.getLabel();\n else   return null;\n}\n', '0.5', '5', '4');
INSERT INTO `case_study` VALUES ('1953', 'toString()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\ConfusionMatrix.java', 'neuroph', '14', '51', '11', '-1000', '3', '0.2013', '0.1823', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public String toString(){\n  StringBuilder builder=new StringBuilder();\n  int maxColumnLenght=STRING_DEFAULT_WIDTH;\n  for (  String label : classLabels)   maxColumnLenght=Math.max(maxColumnLenght,label.length());\n  builder.append(String.format(\"%1$\" + maxColumnLenght + \"s\",\"\"));\n  for (  String label : classLabels)   builder.append(String.format(\"%1$\" + maxColumnLenght + \"s\",label));\n  builder.append(\"\\n\");\n  for (int i=0; i < values.length; i++) {\n    builder.append(String.format(\"%1$\" + maxColumnLenght + \"s\",classLabels[i]));\n    for (int j=0; j < values[0].length; j++) {\n      builder.append(String.format(\"%1$\" + maxColumnLenght + \"s\",values[i][j]));\n    }\n    builder.append(\"\\n\");\n  }\n  return builder.toString();\n}\n', '0', '7', '5');
INSERT INTO `case_study` VALUES ('1961', 'evaluateNetworks(NeuralNetwork,NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\McNemarTest.java', 'neuroph', '25', '260', '220', '-1000', '7', '0.1067', '0.064', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * @param network1 first trained neurl netowrk\n * @param network2 second trained neural network\n * @param dataSet  data set used for performance evaluation\n * @return if there exists significant difference between two classification models\n */\npublic boolean evaluateNetworks(NeuralNetwork network1,NeuralNetwork network2,DataSet dataSet){\n  for (  DataSetRow dataRow : dataSet.getRows()) {\n    forwardPass(network1,dataRow);\n    forwardPass(network2,dataRow);\n    double[] networkOutput1=network1.getOutput();\n    double[] networkOutput2=network2.getOutput();\n    int maxNeuronIdx1=Utils.maxIdx(networkOutput1);\n    int maxNeuronIdx2=Utils.maxIdx(networkOutput2);\n    ClassificationResult output1=new ClassificationResult(maxNeuronIdx1,networkOutput1[maxNeuronIdx1]);\n    ClassificationResult output2=new ClassificationResult(maxNeuronIdx2,networkOutput2[maxNeuronIdx2]);\n    if (output1.getClassIdx() != output2.getClassIdx()) {\n      if (output1.getClassIdx() == getDesiredClass(dataRow.getDesiredOutput())) {\n        contigencyMatrix[1][0]++;\n      }\n else {\n        contigencyMatrix[0][1]++;\n      }\n    }\n else {\n      if (output1.getClassIdx() == getDesiredClass(dataRow.getDesiredOutput())) {\n        contigencyMatrix[1][1]++;\n      }\n else {\n        contigencyMatrix[0][0]++;\n      }\n    }\n  }\n  printContingencyMatrix();\n  double a=Math.abs(contigencyMatrix[0][1] - contigencyMatrix[1][0]) - 1;\n  double hiSquare=(a * a) / (contigencyMatrix[0][1] + contigencyMatrix[1][0]);\n  System.out.println(hiSquare);\n  return hiSquare > 3.841;\n}\n', '0.8333333333333334', '12', '5');
INSERT INTO `case_study` VALUES ('1962', 'printContingencyMatrix()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\McNemarTest.java', 'neuroph', '6', '14', '13', '-1000', '5', '0.2222', '0.0417', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'private void printContingencyMatrix(){\n  for (int i=0; i < 2; i++) {\n    for (int j=0; j < 2; j++) {\n      System.out.print(contigencyMatrix[i][j] + \" \");\n    }\n    System.out.println();\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('1966', 'average(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\Utils.java', 'neuroph', '6', '10', '5', '-1000', '3', '0.3889', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public static double average(double[] array){\n  double accumulator=0;\n  for (  double element : array) {\n    accumulator+=element;\n  }\n  return accumulator / array.length;\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('1967', 'maxIdx(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\eval\\classification\\Utils.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3889', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static int maxIdx(double[] array){\n  int maxIdx=0;\n  for (int i=1; i < array.length; i++) {\n    if (array[i] > array[maxIdx])     maxIdx=i;\n  }\n  return maxIdx;\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('1977', 'processImageTest(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\ImageFilterChain.java', 'neuroph', '11', '42', '29', '-1000', '3', '0.2045', '0.0932', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Returns images of all stages in processing\n * Used for testing \n * @param image\n * @return \n */\npublic List<FilteredImage> processImageTest(BufferedImage image){\n  List<FilteredImage> list=new ArrayList<FilteredImage>();\n  BufferedImage tempImage=image;\n  for (  ImageFilter filter : filters) {\n    BufferedImage processedImage=filter.processImage(tempImage);\n    String filterName=filter.toString();\n    FilteredImage filteredImage=new FilteredImage(processedImage,filterName);\n    list.add(filteredImage);\n    tempImage=processedImage;\n  }\n  return list;\n}\n', '1', '7', '2');
INSERT INTO `case_study` VALUES ('2017', 'imageTypeToBitmapConfig(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\image\\ImageAndroid.java', 'neuroph', '12', '56', '46', '-1000', '3', '0.4167', '0.2222', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private Bitmap.Config imageTypeToBitmapConfig(int imageType) throws IllegalArgumentException {\n  Bitmap.Config bitmapConfig=null;\nswitch (imageType) {\ncase ImageType.ANDROID_TYPE_ALPHA_8:\n    bitmapConfig=Bitmap.Config.ALPHA_8;\n  break;\ncase ImageType.ANDROID_TYPE_ARGB_8888:\nbitmapConfig=Bitmap.Config.ARGB_8888;\nbreak;\ncase ImageType.ANDROID_TYPE_RGB_565:\nbitmapConfig=Bitmap.Config.RGB_565;\nbreak;\ndefault :\nthrow new IllegalArgumentException(\"Illegal image type, image type: \" + imageType);\n}\nreturn bitmapConfig;\n}\n', '0', '2', '4');
INSERT INTO `case_study` VALUES ('2019', 'createImage(Integer,Integer,Integer)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\image\\ImageFactory.java', 'neuroph', '8', '25', '22', '-1000', '5', '0.1719', '0.0537', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static Image createImage(Integer width,Integer height,Integer imageType){\n  try {\n    constructor=imageClass.getDeclaredConstructor(new Class[]{Integer.class,Integer.class,Integer.class});\n    constructor.setAccessible(true);\n    image=(Image)constructor.newInstance(width,height,imageType);\n  }\n catch (  Exception e) {\n    handleException(e);\n  }\n  return image;\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('2043', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\samples\\ImageRecognitionSample.java', 'neuroph', '7', '20', '19', '-1000', '6', '0.1786', '0.0278', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public static void main(String[] args){\n  NeuralNetwork nnet=NeuralNetwork.createFromFile(\"MyImageRecognition.nnet\");\n  ImageRecognitionPlugin imageRecognition=(ImageRecognitionPlugin)nnet.getPlugin(ImageRecognitionPlugin.class);\n  try {\n    HashMap<String,Double> output=imageRecognition.recognizeImage(new File(\"someImage.jpg\"));\n    System.out.println(output.toString());\n  }\n catch (  IOException ioe) {\n    System.out.println(\"Error: could not read file!\");\n  }\ncatch (  VectorSizeMismatchException vsme) {\n    System.out.println(\"Error: Image dimensions dont !\");\n  }\n}\n', '0.6666666666666666', '6', '3');
INSERT INTO `case_study` VALUES ('2045', 'fullConnectMapLayers(FeatureMapsLayer,FeatureMapsLayer)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\ConvolutionalUtils.java', 'neuroph', '12', '38', '10', '-1000', '3', '0.2315', '0.1426', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates full connectivity between feature maps in two layers\n * @param fromLayer from feature maps layer\n * @param toLayer   to feature maps layer\n */\npublic static void fullConnectMapLayers(FeatureMapsLayer fromLayer,FeatureMapsLayer toLayer){\n  if (toLayer instanceof ConvolutionalLayer) {\n    for (int i=0; i < fromLayer.getNumberOfMaps(); i++) {\n      for (int j=0; j < toLayer.getNumberOfMaps(); j++) {\n        FeatureMapLayer fromMap=fromLayer.getFeatureMap(i);\n        FeatureMapLayer toMap=toLayer.getFeatureMap(j);\n        toLayer.connectMaps(fromMap,toMap);\n      }\n    }\n  }\n else   if (toLayer instanceof PoolingLayer) {\n    for (int i=0; i < toLayer.getNumberOfMaps(); i++) {\n      FeatureMapLayer fromMap=fromLayer.getFeatureMap(i);\n      FeatureMapLayer toMap=toLayer.getFeatureMap(i);\n      toLayer.connectMaps(fromMap,toMap);\n    }\n  }\n}\n', '0.3333333333333333', '9', '6');
INSERT INTO `case_study` VALUES ('2066', 'initWeights(double,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\Kernel.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.2222', '0.0627', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void initWeights(double min,double max){\n  weights=new Weight[height][width];\n  for (int i=0; i < height; i++) {\n    for (int j=0; j < width; j++) {\n      Weight weight=new Weight();\n      weight.randomize(min,max);\n      weights[i][j]=weight;\n    }\n  }\n}\n', '0.5', '5', '3');
INSERT INTO `case_study` VALUES ('2067', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\AntiHebbianLearning.java', 'neuroph', '7', '14', '7', '-1000', '3', '0.3143', '0.1042', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights\n */\n@Override protected void updateNeuronWeights(Neuron neuron){\n  double output=neuron.getOutput();\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    double deltaWeight=input * output * this.learningRate;\n    connection.getWeight().dec(deltaWeight);\n  }\n}\n', '0.6', '6', '2');
INSERT INTO `case_study` VALUES ('2070', 'calculateErrorAndUpdateOutputNeurons(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\BackPropagation.java', 'neuroph', '14', '66', '41', '-1000', '4', '0.1786', '0.1398', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weights update procedure for the output neurons\n * Calculates delta/error and calls updateNeuronWeights to update neuron\'s weights\n * for each output neuron\n * @param outputError error vector for output neurons\n */\nprotected void calculateErrorAndUpdateOutputNeurons(double[] outputError){\n  int i=0;\n  List<Neuron> outputNeurons=neuralNetwork.getOutputNeurons();\n  for (  Neuron neuron : outputNeurons) {\n    if (outputError[i] == 0) {\n      neuron.setError(0);\n      i++;\n      continue;\n    }\n    TransferFunction transferFunction=neuron.getTransferFunction();\n    double neuronInput=neuron.getNetInput();\n    double delta=outputError[i] * transferFunction.getDerivative(neuronInput);\n    neuron.setError(delta);\n    updateNeuronWeights(neuron);\n    i++;\n  }\n}\n', '0.6666666666666666', '7', '3');
INSERT INTO `case_study` VALUES ('2071', 'calculateErrorAndUpdateHiddenNeurons()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\BackPropagation.java', 'neuroph', '8', '19', '10', '-1000', '3', '0.3', '0.1512', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weights adjustment for the hidden layers\n */\nprotected void calculateErrorAndUpdateHiddenNeurons(){\n  List<Layer> layers=neuralNetwork.getLayers();\n  for (int layerIdx=layers.size() - 2; layerIdx > 0; layerIdx--) {\n    for (    Neuron neuron : layers.get(layerIdx).getNeurons()) {\n      double delta=calculateHiddenNeuronError(neuron);\n      neuron.setError(delta);\n      updateNeuronWeights(neuron);\n    }\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('2072', 'calculateHiddenNeuronError(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\BackPropagation.java', 'neuroph', '11', '43', '31', '-1000', '3', '0.2045', '0.0701', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Calculates and returns the neuron\'s error (neuron\'s delta) for the given neuron param\n * @param neuron neuron to calculate error for\n * @return neuron error (delta) for the specified neuron\n */\nprotected double calculateHiddenNeuronError(Neuron neuron){\n  double deltaSum=0d;\n  for (  Connection connection : neuron.getOutConnections()) {\n    double delta=connection.getToNeuron().getError() * connection.getWeight().value;\n    deltaSum+=delta;\n  }\n  TransferFunction transferFunction=neuron.getTransferFunction();\n  double netInput=neuron.getNetInput();\n  double f1=transferFunction.getDerivative(netInput);\n  double delta=f1 * deltaSum;\n  return delta;\n}\n', '0.42857142857142855', '9', '2');
INSERT INTO `case_study` VALUES ('2074', 'calculateWeightChanges(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\BinaryDeltaRule.java', 'neuroph', '14', '73', '55', '-1000', '4', '0.1429', '0.0742', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weight update procedure for the whole network for\n * this learning rule\n * @param patternErrorsingle pattern error vector\n * if the output is 0 and required value is 1, increase rthe weights\n * if the output is 1 and required value is 0, decrease the weights\n * otherwice leave weights unchanged\n */\n@Override protected void calculateWeightChanges(double[] patternError){\n  int i=0;\n  List<Neuron> outputNeurons=neuralNetwork.getOutputNeurons();\n  for (  Neuron outputNeuron : outputNeurons) {\n    ThresholdNeuron neuron=(ThresholdNeuron)outputNeuron;\n    double outErr=patternError[i];\n    double thresh=neuron.getThresh();\n    double netInput=neuron.getNetInput();\n    double threshError=thresh - netInput;\n    double neuronError=outErr * (Math.abs(threshError) + errorCorrection);\n    neuron.setError(neuronError);\n    updateNeuronWeights(neuron);\n    i++;\n  }\n}\n', '0.8', '10', '2');
INSERT INTO `case_study` VALUES ('2078', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\BinaryHebbianLearning.java', 'neuroph', '8', '19', '10', '-1000', '3', '0.3', '0.1358', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights\n */\n@Override protected void updateNeuronWeights(Neuron neuron){\n  double output=neuron.getOutput();\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    if (((input > 0) && (output > 0)) || ((input <= 0) && (output <= 0))) {\n      connection.getWeight().inc(this.learningRate);\n    }\n else {\n      connection.getWeight().dec(this.learningRate);\n    }\n  }\n}\n', '0.5', '6', '6');
INSERT INTO `case_study` VALUES ('2081', 'updateNetworkWeights()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\CompetitiveLearning.java', 'neuroph', '6', '6', '0', '-1000', '2', '0.3667', '0.1833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Adjusts weights for the winning neuron\n */\nprotected void updateNetworkWeights(){\n  CompetitiveNeuron winningNeuron=((CompetitiveLayer)neuralNetwork.getLayerAt(1)).getWinner();\n  List<Connection> inputConnections=winningNeuron.getConnectionsFromOtherLayers();\n  for (  Connection connection : inputConnections) {\n    double weight=connection.getWeight().getValue();\n    double input=connection.getInput();\n    double deltaWeight=this.learningRate * (input - weight);\n    connection.getWeight().inc(deltaWeight);\n  }\n}\n', '0.7142857142857143', '7', '2');
INSERT INTO `case_study` VALUES ('2082', 'calculateErrorAndUpdateHiddenNeurons()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\ConvolutionalBackpropagation.java', 'neuroph', '9', '24', '12', '-1000', '3', '0.2963', '0.1605', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override protected void calculateErrorAndUpdateHiddenNeurons(){\n  List<Layer> layers=neuralNetwork.getLayers();\n  for (int layerIdx=layers.size() - 2; layerIdx > 0; layerIdx--) {\n    for (    Neuron neuron : layers.get(layerIdx).getNeurons()) {\n      double neuronError=this.calculateHiddenNeuronError(neuron);\n      neuron.setError(neuronError);\n      if (layers.get(layerIdx) instanceof ConvolutionalLayer) {\n        this.updateNeuronWeights(neuron);\n      }\n    }\n  }\n}\n', '1', '4', '4');
INSERT INTO `case_study` VALUES ('2083', 'calculateHiddenNeuronError(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\ConvolutionalBackpropagation.java', 'neuroph', '8', '20', '12', '-1000', '2', '0.3125', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override protected double calculateHiddenNeuronError(Neuron neuron){\n  if (neuron.getParentLayer() instanceof ConvolutionalLayer) {\n    return super.calculateHiddenNeuronError(neuron);\n  }\n  double deltaSum=0d;\n  for (  Connection connection : neuron.getOutConnections()) {\n    double delta=connection.getToNeuron().getError() * connection.getWeight().value;\n    deltaSum+=delta;\n  }\n  return deltaSum;\n}\n', '0.4', '5', '3');
INSERT INTO `case_study` VALUES ('2104', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\GeneralizedHebbianLearning.java', 'neuroph', '8', '18', '8', '-1000', '3', '0.2917', '0.1037', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights\n */\n@Override protected void updateNeuronWeights(Neuron neuron){\n  double output=neuron.getOutput();\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    double netInput=neuron.getNetInput();\n    double deltaWeight=(input - netInput) * output * this.learningRate;\n    connection.getWeight().inc(deltaWeight);\n  }\n}\n', '0.5', '7', '2');
INSERT INTO `case_study` VALUES ('2106', 'learn(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\HopfieldLearning.java', 'neuroph', '19', '140', '109', '-1000', '3', '0.1283', '0.0536', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * Calculates weights for the hopfield net to learn the specified training\n * set\n * @param trainingSettraining set to learn\n */\npublic void learn(DataSet trainingSet){\n  int M=trainingSet.size();\n  int N=neuralNetwork.getLayerAt(0).getNeuronsCount();\n  Layer hopfieldLayer=neuralNetwork.getLayerAt(0);\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      if (j == i)       continue;\n      Neuron ni=hopfieldLayer.getNeuronAt(i);\n      Neuron nj=hopfieldLayer.getNeuronAt(j);\n      Connection cij=nj.getConnectionFrom(ni);\n      Connection cji=ni.getConnectionFrom(nj);\n      double w=0;\n      for (int k=0; k < M; k++) {\n        DataSetRow trainingSetRow=trainingSet.getRowAt(k);\n        double pki=trainingSetRow.getInput()[i];\n        double pkj=trainingSetRow.getInput()[j];\n        w=w + pki * pkj;\n      }\n      cij.getWeight().setValue(w);\n      cji.getWeight().setValue(w);\n    }\n  }\n}\n', '0.7777777777777778', '15', '5');
INSERT INTO `case_study` VALUES ('2108', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\InstarLearning.java', 'neuroph', '8', '19', '10', '-1000', '3', '0.2321', '0.1049', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights for\n */\n@Override protected void updateNeuronWeights(Neuron neuron){\n  double output=neuron.getOutput();\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    double weight=connection.getWeight().getValue();\n    double deltaWeight=this.learningRate * output * (input - weight);\n    connection.getWeight().inc(deltaWeight);\n  }\n}\n', '0.5', '7', '2');
INSERT INTO `case_study` VALUES ('2110', 'learn(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\KohonenLearning.java', 'neuroph', '11', '47', '39', '-1000', '4', '0.1405', '0.05', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void learn(DataSet trainingSet){\n  for (int phase=0; phase < 2; phase++) {\n    for (int k=0; k < iterations[phase]; k++) {\n      Iterator<DataSetRow> iterator=trainingSet.iterator();\n      while (iterator.hasNext() && !isStopped()) {\n        DataSetRow trainingSetRow=iterator.next();\n        learnPattern(trainingSetRow,nR[phase]);\n      }\n      currentIteration=k;\n      fireLearningEvent(new LearningEvent(this,LearningEvent.Type.EPOCH_ENDED));\n      if (isStopped())       return;\n    }\n    learningRate=learningRate * 0.5;\n  }\n}\n', '0.75', '5', '6');
INSERT INTO `case_study` VALUES ('2111', 'learnPattern(DataSetRow,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\KohonenLearning.java', 'neuroph', '14', '66', '41', '-1000', '2', '0.1905', '0.1092', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void learnPattern(DataSetRow dataSetRow,int neighborhood){\n  neuralNetwork.setInput(dataSetRow.getInput());\n  neuralNetwork.calculate();\n  Neuron winner=getClosestNeuron();\n  if (winner.getOutput() == 0)   return;\n  Layer mapLayer=neuralNetwork.getLayerAt(1);\n  int winnerIdx=mapLayer.indexOf(winner);\n  adjustCellWeights(winner,0);\n  int cellNum=mapLayer.getNeuronsCount();\n  for (int p=0; p < cellNum; p++) {\n    if (p == winnerIdx)     continue;\n    if (isNeighbor(winnerIdx,p,neighborhood)) {\n      Neuron cell=mapLayer.getNeuronAt(p);\n      adjustCellWeights(cell,1);\n    }\n  }\n}\n', '0.5', '8', '5');
INSERT INTO `case_study` VALUES ('2114', 'isNeighbor(int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\KohonenLearning.java', 'neuroph', '24', '199', '122', '-1000', '4', '0.1577', '0.0939', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private boolean isNeighbor(int i,int j,int n){\n  n=1;\n  int d=mapSize;\n  int rt=n;\n  while ((i - rt * d) < 0) {\n    rt--;\n  }\n  int rb=n;\n  while ((i + rb * d) > (d * d - 1)) {\n    rb--;\n  }\n  for (int g=-rt; g <= rb; g++) {\n    int rl=n;\n    int rlMod=(i - rl) % d;\n    int i_mod=i % d;\n    while (rlMod > i_mod) {\n      rl--;\n      rlMod=(i - rl) % d;\n    }\n    int rd=n;\n    int rdMod=(i + rd) % d;\n    while (rdMod < i_mod) {\n      rd--;\n      rdMod=(i + rd) % d;\n    }\n    if ((j >= (i + g * d - rl)) && (j <= (i + g * d + rd)))     return true;\n  }\n  return false;\n}\n', '0', '12', '8');
INSERT INTO `case_study` VALUES ('2122', 'calculateWeightChanges(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\LMS.java', 'neuroph', '8', '21', '14', '-1000', '3', '0.25', '0.1142', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements the weights update procedure for the whole network\n * for the given output error vector.\n * @param outputErroroutput error vector for some network input- the difference between desired and actual output\n * @see SupervisedLearning#learnPattern(org.neuroph.core.data.DataSetRow)  learnPattern\n */\n@Override protected void calculateWeightChanges(double[] outputError){\n  int i=0;\n  List<Neuron> outputNeurons=neuralNetwork.getOutputNeurons();\n  for (  Neuron neuron : outputNeurons) {\n    neuron.setError(outputError[i]);\n    updateNeuronWeights(neuron);\n    i++;\n  }\n}\n', '1', '4', '2');
INSERT INTO `case_study` VALUES ('2125', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\MomentumBackpropagation.java', 'neuroph', '15', '86', '67', '-1000', '6', '0.175', '0.0811', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', '/** \n * This method implements weights update procedure for the single neuron for\n * the back propagation with momentum factor\n * @param neuron neuron to update weights\n */\n@Override public void updateNeuronWeights(Neuron neuron){\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    if (input == 0) {\n      continue;\n    }\n    double neuronDelta=neuron.getError();\n    Weight<MomentumTrainingData> weight=connection.getWeight();\n    MomentumTrainingData weightTrainingData=weight.getTrainingData();\n    double weightChange=-learningRate * neuronDelta * input + momentum * weightTrainingData.previousWeightChange;\n    weightTrainingData.previousWeightChange=weight.weightChange;\n    if (isBatchMode() == false) {\n      weight.weightChange=weightChange;\n    }\n else {\n      weight.weightChange+=weightChange;\n    }\n  }\n}\n', '0.6666666666666666', '7', '4');
INSERT INTO `case_study` VALUES ('2130', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\OjaLearning.java', 'neuroph', '8', '17', '6', '-1000', '3', '0.2917', '0.116', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights\n */\n@Override protected void updateNeuronWeights(Neuron neuron){\n  double output=neuron.getOutput();\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    double weight=connection.getWeight().getValue();\n    double deltaWeight=(input - output * weight) * output * this.learningRate;\n    connection.getWeight().inc(deltaWeight);\n  }\n}\n', '0.5', '7', '2');
INSERT INTO `case_study` VALUES ('2132', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\OutstarLearning.java', 'neuroph', '8', '19', '10', '-1000', '3', '0.2321', '0.1049', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights for\n */\n@Override protected void updateNeuronWeights(Neuron neuron){\n  double output=neuron.getOutput();\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    double weight=connection.getWeight().getValue();\n    double deltaWeight=this.learningRate * input * (output - weight);\n    connection.getWeight().inc(deltaWeight);\n  }\n}\n', '0.5', '7', '2');
INSERT INTO `case_study` VALUES ('2135', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\QuickPropagation.java', 'neuroph', '30', '333', '231', '-1000', '9', '0.1639', '0.0898', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', '@Override public void updateNeuronWeights(Neuron neuron){\n  double delta=neuron.getError();\n  for (  Connection con : neuron.getInputConnections()) {\n    Weight<QuickPropData> w=con.getWeight();\n    QuickPropData qpData=w.getTrainingData();\n    double input=con.getInput();\n    if (input == 0)     continue;\n    double gradient=delta * input;\n    double previousWeightChange=qpData.previousWeightChange;\n    double prevGradient=qpData.prevGradient;\n    double currentWeightChange=0;\n    if ((prevGradient * gradient > 0) && (gradient < prevGradient)) {\n      currentWeightChange=(gradient / (prevGradient - gradient)) * previousWeightChange;\n      if (Math.abs(currentWeightChange) >= Math.abs((maximumGrowthFactor * previousWeightChange))) {\n        currentWeightChange=maximumGrowthFactor * previousWeightChange;\n      }\n    }\n else     if ((prevGradient * gradient > 0) && (gradient >= prevGradient)) {\n      currentWeightChange=maximumGrowthFactor * previousWeightChange;\n    }\n else     if (prevGradient * gradient < 0) {\n      currentWeightChange=(gradient / (prevGradient - gradient)) * previousWeightChange;\n      if (Math.abs(currentWeightChange) >= Math.abs((maximumGrowthFactor * previousWeightChange))) {\n        currentWeightChange=maximumGrowthFactor * previousWeightChange;\n      }\n    }\n else {\n      currentWeightChange=-learningRate * delta * input;\n    }\n    w.weightChange+=currentWeightChange;\n    qpData.previousWeightChange=currentWeightChange;\n    qpData.prevGradient=gradient;\n  }\n}\n', '0.6', '10', '10');
INSERT INTO `case_study` VALUES ('2138', 'calculateSigma(KVector,KVector[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\RBFLearning.java', 'neuroph', '7', '13', '5', '-1000', '3', '0.3143', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Calculates and returns  width of a gaussian function\n * @param centroid\n * @param nearestNeighbours\n * @return \n */\nprivate double calculateSigma(KVector centroid,KVector[] nearestNeighbours){\n  double sigma=0;\n  for (  KVector nn : nearestNeighbours) {\n    sigma+=Math.pow(centroid.distanceFrom(nn),2);\n  }\n  sigma=Math.sqrt(1 / ((double)nearestNeighbours.length) * sigma);\n  return sigma;\n}\n', '1', '4', '2');
INSERT INTO `case_study` VALUES ('2142', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\ResilientPropagation.java', 'neuroph', '9', '26', '16', '-1000', '3', '0.2593', '0.0929', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '/** \n * Calculate and sum gradients for each neuron\'s weight, the actual weight update is done in batch mode.\n * @see ResilientPropagation#resillientWeightUpdate(org.neuroph.core.Weight) \n */\n@Override public void updateNeuronWeights(Neuron neuron){\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    if (input == 0) {\n      continue;\n    }\n    double neuronError=neuron.getError();\n    Weight weight=connection.getWeight();\n    ResilientWeightTrainingtData weightData=(ResilientWeightTrainingtData)weight.getTrainingData();\n    weightData.gradient+=-neuronError * input;\n  }\n}\n', '0.6', '6', '3');
INSERT INTO `case_study` VALUES ('2143', 'doBatchWeightsUpdate()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\ResilientPropagation.java', 'neuroph', '7', '15', '9', '-1000', '2', '0.2857', '0.0913', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override protected void doBatchWeightsUpdate(){\n  List<Layer> layers=neuralNetwork.getLayers();\n  for (int i=neuralNetwork.getLayersCount() - 1; i > 0; i--) {\n    for (    Neuron neuron : layers.get(i).getNeurons()) {\n      for (      Connection connection : neuron.getInputConnections()) {\n        Weight weight=connection.getWeight();\n        resillientWeightUpdate(weight);\n      }\n    }\n  }\n}\n', '0.8', '5', '4');
INSERT INTO `case_study` VALUES ('2144', 'resillientWeightUpdate(Weight)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\ResilientPropagation.java', 'neuroph', '17', '47', '0', '-1000', '3', '0.2157', '0.3161', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Weight update by done by ResilientPropagation  learning rule\n * Executed at the end of epoch (in batch mode)\n * @param weight \n */\nprotected void resillientWeightUpdate(Weight weight){\n  ResilientWeightTrainingtData weightData=(ResilientWeightTrainingtData)weight.getTrainingData();\n  int gradientSignChange=sign(weightData.previousGradient * weightData.gradient);\n  double weightChange=0;\n  double delta;\n  if (gradientSignChange > 0) {\n    delta=Math.min(weightData.previousDelta * increaseFactor,maxDelta);\n    weightChange=sign(weightData.gradient) * delta;\n    weightData.previousDelta=delta;\n  }\n else   if (gradientSignChange < 0) {\n    delta=Math.max(weightData.previousDelta * decreaseFactor,minDelta);\n    weightChange=-weightData.previousWeightChange;\n    weightData.gradient=0;\n    weightData.previousGradient=0;\n    weightData.previousDelta=delta;\n  }\n else   if (gradientSignChange == 0) {\n    delta=weightData.previousDelta;\n    weightChange=sign(weightData.gradient) * delta;\n  }\n  weightData.previousWeightChange=weightChange;\n  weightData.previousGradient=weightData.gradient;\n  weightData.gradient=0;\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('2157', 'calculateWeightChanges(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\SigmoidDeltaRule.java', 'neuroph', '13', '54', '30', '-1000', '4', '0.1978', '0.1591', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * This method implements weight update procedure for the whole network for\n * this learning rule\n * @param outputErroroutput error vector\n */\n@Override protected void calculateWeightChanges(double[] outputError){\n  int i=0;\n  for (  Neuron neuron : neuralNetwork.getOutputNeurons()) {\n    if (outputError[i] == 0) {\n      neuron.setError(0);\n      i++;\n      continue;\n    }\n    TransferFunction transferFunction=neuron.getTransferFunction();\n    double neuronInput=neuron.getNetInput();\n    double delta=outputError[i] * transferFunction.getDerivative(neuronInput);\n    neuron.setError(delta);\n    updateNeuronWeights(neuron);\n    i++;\n  }\n}\n', '0.6666666666666666', '6', '3');
INSERT INTO `case_study` VALUES ('2158', 'SimulatedAnnealingLearning(NeuralNetwork,double,double,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\SimulatedAnnealingLearning.java', 'neuroph', '11', '43', '31', '-1000', '5', '0.1901', '0.1073', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public SimulatedAnnealingLearning(final NeuralNetwork network){\n  this(network,10,2,1000);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('2161', 'randomize(double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\SimulatedAnnealingLearning.java', 'neuroph', '7', '11', '1', '-1000', '2', '0.2679', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Randomize the weights and thresholds. This function does most of the work\n * of the class. Each call to this class will randomize the data according\n * to the current temperature. The higher the temperature the more\n * randomness.\n * @param randomChance \n */\npublic void randomize(double randomChance){\n  for (int i=0; i < this.weights.length; i++)   if (Math.random() < randomChance) {\n    double add=0.5 - (Math.random());\n    add/=this.startTemperature;\n    add*=this.temperature;\n    this.weights[i]=this.weights[i] + add;\n  }\n  NeuralNetworkCODEC.array2network(this.weights,getNetwork());\n}\n', '1', '10', '3');
INSERT INTO `case_study` VALUES ('2162', 'determineError(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\SimulatedAnnealingLearning.java', 'neuroph', '17', '117', '98', '-1000', '3', '0.1412', '0.0541', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Used internally to calculate the error for a training set.\n * @param trainingSet The training set to calculate for.\n * @return The error value.\n */\nprivate double determineError(DataSet trainingSet){\n  double result=0d;\n  Iterator<DataSetRow> iterator=trainingSet.iterator();\n  while (iterator.hasNext() && !isStopped()) {\n    DataSetRow trainingSetRow=iterator.next();\n    double[] input=trainingSetRow.getInput();\n    getNetwork().setInput(input);\n    getNetwork().calculate();\n    double[] output=getNetwork().getOutput();\n    double[] desiredOutput=trainingSetRow.getDesiredOutput();\n    double[] patternError=getErrorFunction().addPatternError(desiredOutput,output);\n    double sqrErrorSum=0;\n    for (    double error : patternError) {\n      sqrErrorSum+=(error * error);\n    }\n    result+=sqrErrorSum / (2 * patternError.length);\n  }\n  return result;\n}\n', '0.6666666666666666', '10', '4');
INSERT INTO `case_study` VALUES ('2164', 'doLearningEpoch(DataSet,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\SimulatedAnnealingLearning.java', 'neuroph', '13', '68', '58', '-1000', '7', '0.1302', '0.0547', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public void doLearningEpoch(DataSet trainingSet,double randomChance){\n  System.arraycopy(this.weights,0,this.bestWeights,0,this.weights.length);\n  double bestError=determineError(trainingSet);\n  this.temperature=this.startTemperature;\n  for (int i=0; i < this.cycles; i++) {\n    randomize(randomChance);\n    double currentError=determineError(trainingSet);\n    if (currentError < bestError) {\n      System.arraycopy(this.weights,0,this.bestWeights,0,this.weights.length);\n      bestError=currentError;\n    }\n else     System.arraycopy(this.bestWeights,0,this.weights,0,this.weights.length);\n    NeuralNetworkCODEC.array2network(this.bestWeights,getNetwork());\n    final double ratio=Math.exp(Math.log(this.stopTemperature / this.startTemperature) / (this.cycles - 1));\n    this.temperature*=ratio;\n  }\n  this.previousEpochError=getErrorFunction().getTotalError();\n  if (hasReachedStopCondition()) {\n    stopLearning();\n  }\n}\n', '1', '27', '4');
INSERT INTO `case_study` VALUES ('2168', 'updateNeuronWeights(Neuron,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\SupervisedHebbianLearning.java', 'neuroph', '6', '10', '5', '-1000', '3', '0.3', '0.1071', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights\n * desiredOutput\n * desired output of the neuron\n */\nprotected void updateNeuronWeights(Neuron neuron,double desiredOutput){\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    double deltaWeight=input * desiredOutput * this.learningRate;\n    connection.getWeight().inc(deltaWeight);\n  }\n}\n', '0.75', '6', '2');
INSERT INTO `case_study` VALUES ('2172', 'updateNeuronWeights(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\UnsupervisedHebbianLearning.java', 'neuroph', '7', '14', '7', '-1000', '3', '0.3143', '0.1042', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * This method implements weights update procedure for the single neuron\n * @param neuronneuron to update weights\n */\nprotected void updateNeuronWeights(Neuron neuron){\n  double output=neuron.getOutput();\n  for (  Connection connection : neuron.getInputConnections()) {\n    double input=connection.getInput();\n    double deltaWeight=input * output * this.learningRate;\n    connection.getWeight().inc(deltaWeight);\n  }\n}\n', '0.6', '6', '2');
INSERT INTO `case_study` VALUES ('2173', 'OCRCropLetter(BufferedImage,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRCropLetter.java', 'neuroph', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * You <b>must</b> set newHeight and newWidth parameters\n */\npublic OCRCropLetter(){\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('2176', 'processImage()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRCropLetter.java', 'neuroph', '7', '17', '13', '-1000', '3', '0.2571', '0.0476', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * You <b>must</b> set newHeight and newWidth before calling this method\n * @param image image with single letter on it\n * @return image with centered letter\n */\npublic BufferedImage processImage(BufferedImage image){\n  this.originalImage=image;\n  prepareParameters();\n  return processImage();\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('2177', 'createStartH()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRCropLetter.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createStartH(){\n  int color;\n  int black=0;\n  int startH=0;\n  loop:   for (int i=0; i < height; i++) {\n    for (int j=0; j < width; j++) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        startH=i;\n        break loop;\n      }\n    }\n  }\n  return startH;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2178', 'createStartW()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRCropLetter.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createStartW(){\n  int color;\n  int black=0;\n  int startW=0;\n  loop:   for (int j=0; j < width; j++) {\n    for (int i=0; i < height; i++) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        startW=j;\n        break loop;\n      }\n    }\n  }\n  return startW;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2179', 'createEndH()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRCropLetter.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createEndH(){\n  int color;\n  int black=0;\n  int endH=0;\n  loop:   for (int i=height - 1; i >= 0; i--) {\n    for (int j=width - 1; j >= 0; j--) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        endH=i;\n        break loop;\n      }\n    }\n  }\n  return endH;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2180', 'createEndW()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRCropLetter.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createEndW(){\n  int color;\n  int black=0;\n  int endW=0;\n  loop:   for (int j=width - 1; j >= 0; j--) {\n    for (int i=height - 1; i >= 0; i--) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        endW=j;\n        break loop;\n      }\n    }\n  }\n  return endW;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2181', 'fillImage(int,int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRCropLetter.java', 'neuroph', '32', '434', '372', '-1000', '5', '0.0689', '0.0349', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void fillImage(int startH,int startW,int endH,int endW){\n  int alpha=new Color(originalImage.getRGB(width / 2,height / 2)).getRed();\n  int whiteRGB=ImageUtilities.colorToRGB(alpha,255,255,255);\n  for (int i=0; i < newHeight; i++) {\n    for (int j=0; j < newWidth; j++) {\n      filteredImage.setRGB(j,i,whiteRGB);\n    }\n  }\n  int oldCenterH=(startH + endH) / 2;\n  int oldCenterW=(startW + endW) / 2;\n  int newCenterH=newHeight / 2;\n  int newCenterW=newWidth / 2;\n  boolean[][] visited=new boolean[newHeight][newWidth];\n  LinkedList<String> queue=new LinkedList<String>();\n  String pos=newCenterH + \" \" + newCenterW+ \" \"+ oldCenterH+ \" \"+ oldCenterW;\n  queue.addLast(pos);\n  visited[newCenterH][newCenterW]=true;\n  try {\n    while (!queue.isEmpty()) {\n      String tmp=queue.removeFirst();\n      int nh=Integer.parseInt(tmp.split(\" \")[0]);\n      int nw=Integer.parseInt(tmp.split(\" \")[1]);\n      int oh=Integer.parseInt(tmp.split(\" \")[2]);\n      int ow=Integer.parseInt(tmp.split(\" \")[3]);\n      filteredImage.setRGB(nw,nh,originalImage.getRGB(ow,oh));\n      for (int i=-1; i <= 1; i++) {\n        for (int j=-1; j <= 1; j++) {\n          int n_tmpH=nh + i;\n          int n_tmpW=nw + j;\n          int o_tmpH=oh + i;\n          int o_tmpW=ow + j;\n          if (!visited[n_tmpH][n_tmpW]) {\n            visited[n_tmpH][n_tmpW]=true;\n            queue.addLast(n_tmpH + \" \" + n_tmpW+ \" \"+ o_tmpH+ \" \"+ o_tmpW);\n          }\n        }\n      }\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n  }\n}\n', '1', '27', '8');
INSERT INTO `case_study` VALUES ('2190', 'extraxtLetter(BufferedImage,boolean[][],int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\filter\\OCRExtractLetter.java', 'neuroph', '38', '612', '521', '-1000', '4', '0.0763', '0.0393', '0', '0', '0', '1', '0', '0', '1', '1', '1', '1', '/** \n * @param image image with whole text\n * @param visited matrix of boolean, size of the matrix should correspond to size of the image with text. This matrix is used like in BFS traversal.\n * @param startX starting point on X coordinate where the black pixel is found\n * @param startY starting point on Y coordinate where the black pixel is found\n * @return new image with extracted letter only if number of pixel in that letter is greater than trashSize \n */\npublic BufferedImage extraxtLetter(BufferedImage image,boolean[][] visited,int startX,int startY){\n  int gapWidth=cropWidth / 5 * 2;\n  int gapHeight=cropHeight / 5 * 2;\n  LinkedList<String> queue=new LinkedList<String>();\n  BufferedImage letter=new BufferedImage(cropWidth,cropHeight,image.getType());\n  Color white=Color.WHITE;\n  Color black=Color.BLACK;\n  for (int i=0; i < cropHeight; i++) {\n    for (int j=0; j < cropWidth; j++) {\n      letter.setRGB(j,i,white.getRGB());\n    }\n  }\n  int countPixels=0;\n  String positions=startX + \" \" + startY;\n  visited[startX][startY]=true;\n  queue.addLast(positions);\n  while (!queue.isEmpty()) {\n    String pos=queue.removeFirst();\n    String[] posArray=pos.split(\" \");\n    int H=Integer.parseInt(posArray[0]);\n    int W=Integer.parseInt(posArray[1]);\n    visited[H][W]=true;\n    int posW=W - startY + gapWidth;\n    int posH=H - startX + gapHeight;\n    countPixels++;\n    letter.setRGB(posW,posH,black.getRGB());\n    int color;\n    int blackInt=0;\n    for (int i=H - 1; i <= H + 1; i++) {\n      for (int j=W - 1; j <= W + 1; j++) {\n        if (i >= 0 && j >= 0 && i < image.getHeight() && j < image.getWidth()) {\n          if (!visited[i][j]) {\n            color=new Color(image.getRGB(j,i)).getRed();\n            if (color == blackInt) {\n              visited[i][j]=true;\n              String tmpPos=i + \" \" + j;\n              queue.addLast(tmpPos);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (countPixels < trashSize) {\n    return null;\n  }\n  return letter;\n}\n', '0', '25', '13');
INSERT INTO `case_study` VALUES ('2191', 'OCRProperties(Letter,Text)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\properties\\OCRProperties.java', 'neuroph', '7', '17', '13', '-1000', '4', '0.2041', '0.0667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public OCRProperties(Letter letterInformation,Text textInformation){\n  this.letterInformation=letterInformation;\n  this.textInformation=textInformation;\n  this.image=textInformation.getImage();\n  this.scanQuality=letterInformation.getScanQuality();\n  this.fontSize=letterInformation.getScanQuality();\n}\n', '1', '7', '1');
INSERT INTO `case_study` VALUES ('2195', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\samples\\RecognitionSample.java', 'neuroph', '19', '151', '131', '-1000', '7', '0.0936', '0.0414', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public static void main(String[] args) throws IOException {\n  String imagePath=\"C:/Users/Mihailo/Desktop/OCR/tekst.png\";\n  String textPath=\"C:/Users/Mihailo/Desktop/OCR/tekst.txt\";\n  String networkPath=\"C:/Users/Mihailo/Desktop/OCR/network.nnet\";\n  int fontSize=12;\n  int scanQuality=300;\n  BufferedImage image=ImageIO.read(new File(imagePath));\n  ImageFilterChain chain=new ImageFilterChain();\n  chain.addFilter(new GrayscaleFilter());\n  chain.addFilter(new OtsuBinarizeFilter());\n  BufferedImage binarizedImage=chain.processImage(image);\n  Letter letterInfo=new Letter(scanQuality,binarizedImage);\n  Text textInfo=new Text(binarizedImage,letterInfo);\n  OCRTextRecognition recognition=new OCRTextRecognition(letterInfo,textInfo);\n  recognition.setNetworkPath(networkPath);\n  recognition.recognize();\n  System.out.println(recognition.getRecognizedText());\n}\n', '0.5454545454545454', '12', '1');
INSERT INTO `case_study` VALUES ('2196', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\samples\\RecognizeLetter.java', 'neuroph', '6', '11', '7', '-1000', '2', '0.25', '0.0722', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static void main(String[] args) throws IOException {\n  String networkPath=\"C:/Users/Mihailo/Desktop/OCR/nnet/nnet-12-0.01.nnet\";\n  String letterPath=\"C:/Users/Mihailo/Desktop/OCR/letters/259.png\";\n  NeuralNetwork nnet=NeuralNetwork.createFromFile(networkPath);\n  ImageRecognitionPlugin imageRecognition=(ImageRecognitionPlugin)nnet.getPlugin(ImageRecognitionPlugin.class);\n  Map<String,Double> output=imageRecognition.recognizeImage(new File(letterPath));\n  System.out.println(\"Recognized letter: \" + OCRUtilities.getCharacter(output));\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2197', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\samples\\TrainingSample.java', 'neuroph', '34', '511', '461', '-1000', '7', '0.0662', '0.0315', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', 'public static void main(String[] args) throws IOException {\n  String imagePath=\"C:/Users/Mihailo/Desktop/OCR/slova.png\";\n  String folderPath=\"C:/Users/Mihailo/Desktop/OCR/ImagesDir/\";\n  String textPath=\"C:/Users/Mihailo/Desktop/OCR/slova.txt\";\n  String networkPath=\"C:/Users/Mihailo/Desktop/OCR/network.nnet\";\n  int fontSize=12;\n  int scanQuality=300;\n  BufferedImage image=ImageIO.read(new File(imagePath));\n  ImageFilterChain chain=new ImageFilterChain();\n  chain.addFilter(new GrayscaleFilter());\n  chain.addFilter(new OtsuBinarizeFilter());\n  BufferedImage binarizedImage=chain.processImage(image);\n  Letter letterInfo=new Letter(scanQuality,binarizedImage);\n  Text texTInfo=new Text(binarizedImage,letterInfo);\n  OCRTraining ocrTraining=new OCRTraining(letterInfo,texTInfo);\n  ocrTraining.setFolderPath(folderPath);\n  ocrTraining.setTrainingTextPath(textPath);\n  ocrTraining.prepareTrainingSet();\n  List<String> characterLabels=ocrTraining.getCharacterLabels();\n  Map<String,FractionRgbData> map=ImageRecognitionHelper.getFractionRgbDataForDirectory(new File(folderPath),new Dimension(20,20));\n  DataSet dataSet=ImageRecognitionHelper.createBlackAndWhiteTrainingSet(characterLabels,map);\n  dataSet.setFilePath(\"C:/Users/Mihailo/Desktop/OCR/DataSet1.tset\");\n  dataSet.save();\n  List<Integer> hiddenLayers=new ArrayList<Integer>();\n  hiddenLayers.add(12);\n  NeuralNetwork nnet=ImageRecognitionHelper.createNewNeuralNetwork(\"someNetworkName\",new Dimension(20,20),ColorMode.BLACK_AND_WHITE,characterLabels,hiddenLayers,TransferFunctionType.SIGMOID);\n  BackPropagation bp=(BackPropagation)nnet.getLearningRule();\n  bp.setLearningRate(0.3);\n  bp.setMaxError(0.1);\n  System.out.println(\"Start learning...\");\n  nnet.learn(dataSet);\n  System.out.println(\"NNet learned\");\n  nnet.save(networkPath);\n}\n', '0.5217391304347826', '19', '1');
INSERT INTO `case_study` VALUES ('2198', 'Letter(int,BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\Letter.java', 'neuroph', '11', '45', '35', '-1000', '4', '0.157', '0.104', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public Letter(int scanQuality,BufferedImage image){\n  this.scanQuality=scanQuality;\n  this.image=image;\n  heightHistogram=Histogram.heightHistogram(image);\n  gradient=Histogram.gradient(heightHistogram);\n  calculateSmallestSizeLetter();\n  List<Integer> rowHeights=OCRUtilities.rowHeights(gradient,smallestSizeLetter);\n  int meanHeight=(int)caluclateMean(rowHeights);\n  calculateDimensions(meanHeight);\n  calculateLetterSize(meanHeight);\n  calculateSpaceGap(meanHeight);\n}\n', '0.6666666666666666', '6', '1');
INSERT INTO `case_study` VALUES ('2200', 'calculateSmallestSizeLetter()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\Letter.java', 'neuroph', '8', '22', '16', '-1000', '4', '0.375', '0.2222', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private void calculateSmallestSizeLetter(){\n  if (scanQuality == 300) {\n    smallestSizeLetter=9;\n  }\n  if (scanQuality == 600) {\n    smallestSizeLetter=18;\n  }\n  if (scanQuality == 1200) {\n    smallestSizeLetter=36;\n  }\n}\n', '0', '0', '4');
INSERT INTO `case_study` VALUES ('2219', 'caluclateMean(List<Integer>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\Letter.java', 'neuroph', '6', '10', '5', '-1000', '3', '0.3889', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'private double caluclateMean(List<Integer> list){\n  double sum=0;\n  for (  Integer element : list) {\n    sum+=element;\n  }\n  return sum / list.size();\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('2222', 'wordsPositions(BufferedImage,int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\OCRUtilities.java', 'neuroph', '16', '92', '64', '-1000', '3', '0.1442', '0.1044', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Word is class with two parameters, startPixel and endPixel. This method\n * calculates these pixels for given row and return them as List of Word\n * @param image input image, should be black-white\n * @param row given row\n * @param letterHeight predicted letter size\n * @param spaceGap predicted space size, spaces smaller that spaceGap are\n * not spaces between word, they are spaces between letter. Ignore spaces\n * between letters.\n * @return\n */\npublic static List<WordPosition> wordsPositions(BufferedImage image,int row,int letterHeight,int spaceGap){\n  List<WordPosition> words=new ArrayList<WordPosition>();\n  int[] histogram=OCRHistogram.widthRowHistogram(image,row,letterHeight);\n  int[] histogramWLS=OCRHistogram.histogramWithoutLetterSpaces(histogram,spaceGap);\n  int count=0;\n  for (int i=0; i < histogramWLS.length; i++) {\n    if (histogramWLS[i] != 0) {\n      count++;\n    }\n else {\n      if (count > 0) {\n        int start=i - count;\n        int end=i - 1;\n        WordPosition w=new WordPosition(start,end);\n        words.add(w);\n      }\n      count=0;\n    }\n  }\n  return words;\n}\n', '0.6666666666666666', '12', '4');
INSERT INTO `case_study` VALUES ('2223', 'saveToFile(BufferedImage,String,String,String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\OCRUtilities.java', 'neuroph', '7', '18', '15', '-1000', '4', '0.1964', '0.0725', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Save the image to the file\n * @param image should be cropped before the saving. Use OCRCropImage class\n * @param path path to the folder, ie C:/Users/.../ it should ended with /\n * @param letterName letter of the name\n * @param extension some of .png .jpg ...\n */\npublic static void saveToFile(BufferedImage image,String path,String letterName,String extension){\n  String imagePath=path + letterName + \".\"+ extension;\n  File outputfile=new File(imagePath);\n  try {\n    ImageIO.write(image,extension,outputfile);\n  }\n catch (  IOException ex) {\n    ex.printStackTrace();\n  }\n}\n', '0', '7', '2');
INSERT INTO `case_study` VALUES ('2225', 'linePositions(int[],int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\OCRUtilities.java', 'neuroph', '17', '99', '62', '-1000', '2', '0.1765', '0.1376', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * @param gradient gradient array calculated with method gradient(int [])\n * @param ignoredSize - noise - what is the minimum size of letter to be\n * recognized <br/>\n * With lower value you will probably find trash as separate line <br/>\n * With higher value you will probably miss the letter <br/>\n * Ideal value is less that the letter size\n * @return List of integers where each element represent center of line.\n * First element corresponds to the first line etc.\n */\npublic static List<Integer> linePositions(int[] gradient,int ignoredSize){\n  ArrayList<Integer> lines=new ArrayList<Integer>();\n  int sum=0;\n  int count=0;\n  for (int row=0; row < gradient.length; row++) {\n    sum+=gradient[row];\n    if (sum != 0) {\n      count++;\n      continue;\n    }\n    if (sum == 0) {\n      if (count < ignoredSize) {\n        count=0;\n      }\n else {\n        int startLetter=row - count;\n        int endLetter=row;\n        int line=(startLetter + endLetter) / 2;\n        lines.add(line);\n        count=0;\n      }\n    }\n  }\n  return lines;\n}\n', '0', '9', '5');
INSERT INTO `case_study` VALUES ('2226', 'rowHeights(int[],int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\OCRUtilities.java', 'neuroph', '15', '76', '47', '-1000', '3', '0.2111', '0.1678', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static List<Integer> rowHeights(int[] gradient,int ignoredSize){\n  ArrayList<Integer> heights=new ArrayList<Integer>();\n  int sum=0;\n  int count=0;\n  for (int row=0; row < gradient.length; row++) {\n    sum+=gradient[row];\n    if (sum != 0) {\n      count++;\n      continue;\n    }\n    if (sum == 0) {\n      if (count < ignoredSize) {\n        count=0;\n      }\n else {\n        heights.add(count);\n        count=0;\n      }\n    }\n  }\n  return heights;\n}\n', '0', '6', '5');
INSERT INTO `case_study` VALUES ('2227', 'Text(BufferedImage,Letter)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\Text.java', 'neuroph', '7', '19', '17', '-1000', '5', '0.1905', '0.0267', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public Text(BufferedImage image,Letter letterInformation){\n  this.letterInfo=letterInformation;\n  this.image=image;\n  linePositions=OCRUtilities.rowPositions(image,letterInformation.getSmallestSizeLetter());\n  createMap();\n  populateMap();\n}\n', '1', '4', '1');
INSERT INTO `case_study` VALUES ('2238', 'convertImageIntoData(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\adalineDigits\\Data.java', 'neuroph', '8', '20', '12', '-1000', '2', '0.2344', '0.0815', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public static DataSetRow convertImageIntoData(String[] image){\n  DataSetRow dataSetRow=new DataSetRow(Data.CHAR_HEIGHT * Data.CHAR_WIDTH);\n  double[] array=new double[Data.CHAR_WIDTH * Data.CHAR_HEIGHT];\n  for (int row=0; row < Data.CHAR_HEIGHT; row++) {\n    for (int column=0; column < Data.CHAR_WIDTH; column++) {\n      int index=(row * Data.CHAR_WIDTH) + column;\n      char ch=image[row].charAt(column);\n      array[index]=(ch == \'O\' ? 1 : -1);\n    }\n  }\n  dataSetRow.setInput(array);\n  return dataSetRow;\n}\n', '0.5', '7', '4');
INSERT INTO `case_study` VALUES ('2239', 'convertDataIntoImage(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\adalineDigits\\Data.java', 'neuroph', '11', '34', '13', '-1000', '2', '0.3182', '0.2697', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static String[] convertDataIntoImage(double[] data){\n  String[] image=new String[data.length / Data.CHAR_WIDTH];\n  String row=\"\";\n  for (int i=0; i < data.length; i++) {\n    if (data[i] == 1) {\n      row+=\"O\";\n    }\n else {\n      row+=\" \";\n    }\n    if (row.length() % 5 == 0 && row.length() != 0) {\n      image[i / 5]=row;\n      row=\"\";\n    }\n  }\n  return image;\n}\n', '0', '4', '5');
INSERT INTO `case_study` VALUES ('2240', 'main(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\adalineDigits\\DigitsRecognition.java', 'neuroph', '9', '22', '8', '-1000', '1', '0.2593', '0.2435', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', 'public static void main(String args[]){\n  DataSet dataSet=generateTraining();\n  int inputCount=Data.CHAR_HEIGHT * Data.CHAR_WIDTH;\n  int outputCount=Data.DIGITS.length;\n  int hiddenNeurons=19;\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputCount,hiddenNeurons,outputCount);\n  BackPropagation learningRule=neuralNet.getLearningRule();\n  learningRule.setLearningRate(0.5);\n  learningRule.setMaxError(0.001);\n  learningRule.setMaxIterations(5000);\n  learningRule.addListener(new LearningEventListener(){\n    @Override public void handleLearningEvent(    LearningEvent event){\n      BackPropagation bp=(BackPropagation)event.getSource();\n      if (event.getEventType().equals(LearningEvent.Type.LEARNING_STOPPED)) {\n        System.out.println();\n        System.out.println(\"Training completed in \" + bp.getCurrentIteration() + \" iterations\");\n        System.out.println(\"With total error \" + bp.getTotalNetworkError() + \'\\n\');\n      }\n else {\n        System.out.println(\"Iteration: \" + bp.getCurrentIteration() + \" | Network error: \"+ bp.getTotalNetworkError());\n      }\n    }\n  }\n);\n  neuralNet.learn(dataSet);\n  testNeuralNetwork(neuralNet,dataSet);\n}\n', '0.6', '9', '1');
INSERT INTO `case_study` VALUES ('2242', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\adalineDigits\\DigitsRecognition.java', 'neuroph', '11', '38', '21', '-1000', '3', '0.2208', '0.125', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints network output for the each element from the specified training\n * set.\n * @param neuralNet neural network\n * @param testSet test data set\n */\npublic static void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  System.out.println(\"--------------------------------------------------------------------\");\n  System.out.println(\"***********************TESTING NEURAL NETWORK***********************\");\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    int izlaz=maxOutput(neuralNet.getOutput());\n    String[] niz=Data.convertDataIntoImage(testSetRow.getInput());\n    for (int i=0; i < niz.length; i++) {\n      if (i != niz.length - 1) {\n        System.out.println(niz[i]);\n      }\n else {\n        System.out.println(niz[i] + \"----> \" + izlaz);\n      }\n    }\n    System.out.println(\"\");\n  }\n}\n', '0.6666666666666666', '6', '4');
INSERT INTO `case_study` VALUES ('2243', 'generateTraining()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\adalineDigits\\DigitsRecognition.java', 'neuroph', '11', '40', '25', '-1000', '2', '0.1919', '0.11', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public static DataSet generateTraining(){\n  DataSet dataSet=new DataSet(Data.CHAR_WIDTH * Data.CHAR_HEIGHT,Data.DIGITS.length);\n  for (int i=0; i < Data.DIGITS.length; i++) {\n    DataSetRow inputRow=Data.convertImageIntoData(Data.DIGITS[i]);\n    double[] input=inputRow.getInput();\n    double[] output=new double[Data.DIGITS.length];\n    for (int j=0; j < Data.DIGITS.length; j++) {\n      if (j == i) {\n        output[j]=1;\n      }\n else {\n        output[j]=0;\n      }\n    }\n    DataSetRow row=new DataSetRow(input,output);\n    dataSet.addRow(row);\n  }\n  return dataSet;\n}\n', '0.6', '7', '4');
INSERT INTO `case_study` VALUES ('2244', 'maxOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\adalineDigits\\DigitsRecognition.java', 'neuroph', '8', '17', '6', '-1000', '2', '0.4063', '0.2083', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public static int maxOutput(double[] array){\n  double max=array[0];\n  int index=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] > max) {\n      index=i;\n      max=array[i];\n    }\n  }\n  return index;\n}\n', '0', '4', '3');
INSERT INTO `case_study` VALUES ('2246', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\brestCancer\\BrestCancerSample.java', 'neuroph', '22', '200', '169', '-1000', '5', '0.1039', '0.0556', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training and test set from file...\");\n  String trainingSetFileName=\"data_sets/breast cancer.txt\";\n  int inputsCount=30;\n  int outputsCount=2;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\");\n  dataSet.shuffle();\n  Normalizer normalizer=new MaxNormalizer();\n  normalizer.normalize(dataSet);\n  DataSet[] trainingAndTestSet=dataSet.createTrainingAndTestSubsets(70,30);\n  DataSet trainingSet=trainingAndTestSet[0];\n  DataSet testSet=trainingAndTestSet[1];\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,16,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.3);\n  learningRule.setMaxError(0.001);\n  learningRule.setMaxIterations(5000);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(trainingSet);\n  System.out.println(\"Testing network...\\n\\n\");\n  testNeuralNetwork(neuralNet,testSet);\n  System.out.println(\"Done.\");\n  System.out.println(\"**************************************************\");\n}\n', '0.6666666666666666', '10', '1');
INSERT INTO `case_study` VALUES ('2247', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\brestCancer\\BrestCancerSample.java', 'neuroph', '19', '132', '93', '-1000', '3', '0.1498', '0.0984', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  System.out.println(\"**************************************************\");\n  System.out.println(\"**********************RESULT**********************\");\n  System.out.println(\"**************************************************\");\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    int predicted=maxOutput(networkOutput);\n    double[] networkDesiredOutput=testSetRow.getDesiredOutput();\n    int ideal=maxOutput(networkDesiredOutput);\n    keepScore(predicted,ideal);\n  }\n  System.out.println(\"Total cases: \" + this.count[2] + \". \");\n  System.out.println(\"Correctly predicted cases: \" + this.correct[2] + \". \");\n  System.out.println(\"Incorrectly predicted cases: \" + (this.count[2] - this.correct[2] - unpredicted) + \". \");\n  System.out.println(\"Unrecognized cases: \" + unpredicted + \". \");\n  double percentTotal=(double)this.correct[2] * 100 / (double)this.count[2];\n  System.out.println(\"Predicted correctly: \" + formatDecimalNumber(percentTotal) + \"%. \");\n  double percentM=(double)this.correct[0] * 100.0 / (double)this.count[0];\n  System.out.println(\"Prediction for \'M (malignant)\' => (Correct/total): \" + this.correct[0] + \"/\"+ count[0]+ \"(\"+ formatDecimalNumber(percentM)+ \"%). \");\n  double percentB=(double)this.correct[1] * 100.0 / (double)this.count[1];\n  System.out.println(\"Prediction for \'B (benign)\' => (Correct/total): \" + this.correct[1] + \"/\"+ count[1]+ \"(\"+ formatDecimalNumber(percentB)+ \"%). \");\n}\n', '0.5', '22', '2');
INSERT INTO `case_study` VALUES ('2248', 'handleLearningEvent(LearningEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\brestCancer\\BrestCancerSample.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.3333', '0.1605', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void handleLearningEvent(LearningEvent event){\n  BackPropagation bp=(BackPropagation)event.getSource();\n  if (event.getEventType().equals(LearningEvent.Type.LEARNING_STOPPED)) {\n    double error=bp.getTotalNetworkError();\n    System.out.println(\"Training completed in \" + bp.getCurrentIteration() + \" iterations, \");\n    System.out.println(\"With total error: \" + formatDecimalNumber(error));\n  }\n else {\n    System.out.println(\"Iteration: \" + bp.getCurrentIteration() + \" | Network error: \"+ bp.getTotalNetworkError());\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('2249', 'maxOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\brestCancer\\BrestCancerSample.java', 'neuroph', '10', '31', '17', '-1000', '3', '0.35', '0.1705', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static int maxOutput(double[] array){\n  double max=array[0];\n  int index=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] > max) {\n      index=i;\n      max=array[i];\n    }\n  }\n  if (max < 0.5) {\n    return -1;\n  }\n  return index;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2250', 'keepScore(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\brestCancer\\BrestCancerSample.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2222', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void keepScore(int prediction,int ideal){\n  count[ideal]++;\n  count[2]++;\n  if (prediction == ideal) {\n    correct[ideal]++;\n    correct[2]++;\n  }\n  if (prediction == -1) {\n    unpredicted++;\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('2252', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\cifar10\\Cifar10Example.java', 'neuroph', '36', '586', '542', '-1000', '17', '0.0569', '0.0255', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', 'public static void main(String[] args) throws IOException {\n  int maxIter=20;\n  double maxError=0.03;\n  double learningRate=0.3;\n  int layer1=10;\n  int layer2=15;\n  int layer3=20;\n  LOG.info(\"{}-{}-{}\",layer1,layer2,layer3);\n  List<String> labels=Arrays.asList(new String[]{\"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\"});\n  DataSet trainSet=ImageRecognitionHelper.createImageDataSetFromFile(\"D:\\\\Doktorske\\\\Beograd\\\\Neuronske mreze - Zoran Sevarac\\\\Cifar 10\\\\train\\\\train_1000\\\\\",labels,\"\",ColorMode.COLOR_RGB,new Dimension(32,32),\"cifar\",1);\n  DataSet testSet=trainSet;\n  ConvolutionalNetwork convolutionNetwork=new ConvolutionalNetwork.Builder().withInputLayer(32,32,3).withConvolutionLayer(5,5,layer1).withPoolingLayer(2,2).withConvolutionLayer(5,5,layer2).withPoolingLayer(2,2).withConvolutionLayer(5,5,layer3).withFullConnectedLayer(10).build();\n  ConvolutionalBackpropagation backPropagation=new ConvolutionalBackpropagation();\n  backPropagation.setLearningRate(learningRate);\n  backPropagation.setMaxError(maxError);\n  backPropagation.setMaxIterations(maxIter);\n  backPropagation.addListener(new LearningListener(convolutionNetwork,testSet));\n  backPropagation.setErrorFunction(new MeanSquaredError());\n  convolutionNetwork.setLearningRule(backPropagation);\n  convolutionNetwork.learn(trainSet);\n  Evaluation.runFullEvaluation(convolutionNetwork,testSet);\n}\n', '0.5789473684210527', '12', '1');
INSERT INTO `case_study` VALUES ('2255', 'testLearningOneLayer()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\SimpleLearningExample.java', 'neuroph', '20', '161', '132', '-1000', '8', '0.1182', '0.0743', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static void testLearningOneLayer(){\n  Dimension2D inputDimension=new Dimension2D(5,5);\n  Dimension2D convolutionKernel=new Dimension2D(3,3);\n  ConvolutionalNetwork convolutionNet=new ConvolutionalNetwork.Builder().withInputLayer(5,5,1).withConvolutionLayer(3,3,2).withFullConnectedLayer(2).build();\n  DataSet dataSet=new DataSet(25,2);\n  dataSet.addRow(new double[]{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0},new double[]{1,0});\n  dataSet.addRow(new double[]{0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0},new double[]{0,1});\n  convolutionNet.getLearningRule().setMaxError(0.00001);\n  convolutionNet.learn(dataSet);\n  System.out.println(\"Done training!\");\n  FeatureMapLayer featureMap1=((FeatureMapsLayer)convolutionNet.getLayerAt(1)).getFeatureMap(0);\n  FeatureMapLayer featureMap2=((FeatureMapsLayer)convolutionNet.getLayerAt(1)).getFeatureMap(1);\n  DataSet testSet=new DataSet(25,2);\n  testSet.addRow(new double[]{0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0},new double[]{1,0});\n  testSet.addRow(new double[]{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0},new double[]{1,0});\n  testSet.addRow(new double[]{0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0},new double[]{0,1});\n}\n', '0.46153846153846156', '7', '1');
INSERT INTO `case_study` VALUES ('2257', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\crossval\\IrisCrossValidationSample.java', 'neuroph', '10', '35', '25', '-1000', '3', '0.1875', '0.0769', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public static void main(String[] args) throws InterruptedException, ExecutionException {\n  MultiLayerPerceptron neuralNet=(MultiLayerPerceptron)NeuralNetwork.createFromFile(\"irisNet.nnet\");\n  DataSet dataSet=DataSet.createFromFile(\"data_sets/iris_data_normalised.txt\",4,3,\",\");\n  String[] classNames={\"Virginica\",\"Setosa\",\"Versicolor\"};\n  CrossValidation crossval=new CrossValidation(neuralNet,dataSet,10);\n  crossval.addEvaluator(new ClassifierEvaluator.MultiClass(classNames));\n  crossval.run();\n  CrossValidationResult results=crossval.getResult();\n  results.printResult();\n}\n', '0.625', '6', '1');
INSERT INTO `case_study` VALUES ('2259', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\diabetes\\DiabetesSample.java', 'neuroph', '24', '245', '214', '-1000', '7', '0.0952', '0.048', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training and test set from file...\");\n  String trainingSetFileName=\"data_sets/diabetes.txt\";\n  int inputsCount=8;\n  int outputsCount=2;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\");\n  dataSet.shuffle();\n  Normalizer normalizer=new MaxNormalizer();\n  normalizer.normalize(dataSet);\n  DataSet[] trainingAndTestSet=dataSet.createTrainingAndTestSubsets(70,30);\n  DataSet trainingSet=trainingAndTestSet[0];\n  DataSet testSet=trainingAndTestSet[1];\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,20,10,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.05);\n  learningRule.setMaxError(0.01);\n  learningRule.setMaxIterations(100000);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(trainingSet);\n  System.out.println(\"Testing network...\\n\\n\");\n  testNeuralNetwork(neuralNet,testSet);\n  System.out.println(\"Done.\");\n  System.out.println(\"**************************************************\");\n}\n', '0.6666666666666666', '10', '1');
INSERT INTO `case_study` VALUES ('2260', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\diabetes\\DiabetesSample.java', 'neuroph', '22', '175', '119', '-1000', '3', '0.1364', '0.0974', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  System.out.println(\"**************************************************\");\n  System.out.println(\"**********************RESULT**********************\");\n  System.out.println(\"**************************************************\");\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    int predicted=maxOutput(networkOutput);\n    double[] networkDesiredOutput=testSetRow.getDesiredOutput();\n    int ideal=maxOutput(networkDesiredOutput);\n    keepScore(predicted,ideal);\n  }\n  System.out.println(\"Total cases: \" + this.count[2] + \". \");\n  System.out.println(\"Correctly predicted cases: \" + this.correct[2] + \". \");\n  System.out.println(\"Incorrectly predicted cases: \" + (this.count[2] - this.correct[2] - unpredicted) + \". \");\n  System.out.println(\"Unrecognized cases: \" + unpredicted + \". \");\n  double percentTotal=(double)this.correct[2] * 100 / (double)this.count[2];\n  System.out.println(\"Predicted correctly: \" + formatDecimalNumber(percentTotal) + \"%. \");\n  double percentM=(double)this.correct[0] * 100.0 / (double)this.count[0];\n  System.out.println(\"Prediction for \'tested positive\' => (Correct/total): \" + this.correct[0] + \"/\"+ count[0]+ \"(\"+ formatDecimalNumber(percentM)+ \"%). \");\n  double percentB=(double)this.correct[1] * 100.0 / (double)this.count[1];\n  System.out.println(\"Prediction for \'tested negative\' => (Correct/total): \" + this.correct[1] + \"/\"+ count[1]+ \"(\"+ formatDecimalNumber(percentB)+ \"%). \");\n  this.count=new int[3];\n  this.correct=new int[3];\n  unpredicted=0;\n}\n', '0.5', '24', '2');
INSERT INTO `case_study` VALUES ('2261', 'handleLearningEvent(LearningEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\diabetes\\DiabetesSample.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.3333', '0.1605', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void handleLearningEvent(LearningEvent event){\n  BackPropagation bp=(BackPropagation)event.getSource();\n  if (event.getEventType().equals(LearningEvent.Type.LEARNING_STOPPED)) {\n    double error=bp.getTotalNetworkError();\n    System.out.println(\"Training completed in \" + bp.getCurrentIteration() + \" iterations, \");\n    System.out.println(\"With total error: \" + formatDecimalNumber(error));\n  }\n else {\n    System.out.println(\"Iteration: \" + bp.getCurrentIteration() + \" | Network error: \"+ bp.getTotalNetworkError());\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('2262', 'maxOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\diabetes\\DiabetesSample.java', 'neuroph', '10', '31', '17', '-1000', '3', '0.35', '0.1705', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static int maxOutput(double[] array){\n  double max=array[0];\n  int index=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] > max) {\n      index=i;\n      max=array[i];\n    }\n  }\n  if (max < 0.5) {\n    return -1;\n  }\n  return index;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2263', 'keepScore(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\diabetes\\DiabetesSample.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2222', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void keepScore(int prediction,int ideal){\n  count[ideal]++;\n  count[2]++;\n  if (prediction == ideal) {\n    correct[ideal]++;\n    correct[2]++;\n  }\n  if (prediction == -1) {\n    unpredicted++;\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('2265', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\eval\\ClassifierEvaluationSample.java', 'neuroph', '18', '131', '109', '-1000', '4', '0.1111', '0.0462', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public static void main(String[] args){\n  Evaluation evaluation=new Evaluation();\n  evaluation.addEvaluator(new ErrorEvaluator(new MeanSquaredError()));\n  String[] classNames={\"Virginica\",\"Setosa\",\"Versicolor\"};\n  MultiLayerPerceptron neuralNet=(MultiLayerPerceptron)NeuralNetwork.createFromFile(\"irisNet.nnet\");\n  DataSet dataSet=DataSet.createFromFile(\"data_sets/iris_data_normalised.txt\",4,3,\",\");\n  evaluation.addEvaluator(new ClassifierEvaluator.MultiClass(classNames));\n  evaluation.evaluateDataSet(neuralNet,dataSet);\n  ClassifierEvaluator evaluator=evaluation.getEvaluator(ClassifierEvaluator.MultiClass.class);\n  ConfusionMatrix confusionMatrix=evaluator.getResult();\n  System.out.println(\"Confusion matrrix:\\r\\n\");\n  System.out.println(confusionMatrix.toString() + \"\\r\\n\\r\\n\");\n  System.out.println(\"Classification metrics\\r\\n\");\n  ClassificationMetrics[] metrics=ClassificationMetrics.createFromMatrix(confusionMatrix);\n  ClassificationMetrics.Stats average=ClassificationMetrics.average(metrics);\n  for (  ClassificationMetrics cm : metrics) {\n    System.out.println(cm.toString() + \"\\r\\n\");\n  }\n  System.out.println(average.toString());\n}\n', '0.6666666666666666', '10', '2');
INSERT INTO `case_study` VALUES ('2267', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\evaluation\\TestBinaryClass.java', 'neuroph', '9', '13', '0', '-1000', '2', '0.3086', '0.2361', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static void main(String[] args){\n  DataSet trainingSet=new DataSet(2,1);\n  trainingSet.addRow(new DataSetRow(new double[]{0,0},new double[]{0}));\n  trainingSet.addRow(new DataSetRow(new double[]{0,1},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,0},new double[]{1}));\n  trainingSet.addRow(new DataSetRow(new double[]{1,1},new double[]{0}));\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(TransferFunctionType.TANH,2,3,1);\n  neuralNet.learn(trainingSet);\n  Evaluation.runFullEvaluation(neuralNet,trainingSet);\n}\n', '0.8333333333333334', '3', '1');
INSERT INTO `case_study` VALUES ('2271', 'Config()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\Config.java', 'neuroph', '10', '45', '45', '-1000', '10', '0.1', '0', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public Config(){\n  dataFilePath=\"data_sets/cover type.txt\";\n  trainingFileName=\"data_sets/cover_type_data/training.txt\";\n  testFileName=\"data_sets/cover_type_data/test.txt\";\n  balancedFileName=\"data_sets/cover_type_data/balanceTraining.txt\";\n  normalizedBalancedFileName=\"data_sets/cover_type_data/normalizedBalanceTraining.txt\";\n  trainedNetworkFileName=\"data_sets/cover_type_data/trainedNetwork.txt\";\n  inputCount=54;\n  firstHiddenLayerCount=40;\n  secondHiddenLayerCount=20;\n  outputCount=7;\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('2294', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\Evaluate.java', 'neuroph', '17', '107', '78', '-1000', '3', '0.1569', '0.0806', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    int predicted=maxOutput(networkOutput);\n    double[] networkDesiredOutput=testSetRow.getDesiredOutput();\n    int ideal=maxOutput(networkDesiredOutput);\n    keepScore(predicted,ideal);\n  }\n  System.out.println(\"Total cases: \" + this.count[7] + \". \");\n  System.out.println(\"Correct cases: \" + this.correct[7] + \". \");\n  System.out.println(\"Incorrectly predicted cases: \" + (this.count[7] - this.correct[7] - unpredicted) + \". \");\n  System.out.println(\"Unrecognized cases: \" + unpredicted + \". \");\n  double percentTotal=(double)this.correct[7] * 100 / (double)this.count[7];\n  System.out.println(\"Predicted correctly: \" + formatDecimalNumber(percentTotal) + \"%. \");\n  for (int i=0; i < correct.length - 1; i++) {\n    double p=(double)this.correct[i] * 100.0 / (double)this.count[i];\n    System.out.println(\"Tree type: \" + (i + 1) + \" - Correct/total: \"+ this.correct[i]+ \"/\"+ count[i]+ \"(\"+ formatDecimalNumber(p)+ \"%). \");\n  }\n}\n', '0.5', '19', '3');
INSERT INTO `case_study` VALUES ('2295', 'maxOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\Evaluate.java', 'neuroph', '10', '31', '17', '-1000', '3', '0.35', '0.1705', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static int maxOutput(double[] array){\n  double max=array[0];\n  int index=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] > max) {\n      index=i;\n      max=array[i];\n    }\n  }\n  if (max < 0.5) {\n    return -1;\n  }\n  return index;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2296', 'keepScore(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\Evaluate.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2222', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void keepScore(int actual,int ideal){\n  count[ideal]++;\n  count[7]++;\n  if (actual == ideal) {\n    correct[ideal]++;\n    correct[7]++;\n  }\n  if (actual == -1) {\n    unpredicted++;\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('2298', 'generateDataSets(Config)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\ForestCoverType.java', 'neuroph', '12', '60', '54', '-1000', '9', '0.2083', '0.1184', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void generateDataSets(Config config){\n  GenerateData generate=new GenerateData(config);\n  System.out.println(\"***************************************************\");\n  System.out.println(\"STEP 1: Generate training (75%) and test (25%) files: \");\n  generate.createTrainingAndTestSet();\n  System.out.println(\"***************************************************\");\n  System.out.println(\"STEP 2: Balancing training data set to have the same number (3000) of each tree: \");\n  generate.createBalancedTrainingSet(3000);\n  System.out.println(\"***************************************************\");\n  System.out.println(\"STEP 3: Normalizing balanced training data set: \");\n  generate.normalizeBalancedTrainingSet();\n}\n', '0.25', '2', '1');
INSERT INTO `case_study` VALUES ('2299', 'trainNetwork(Config)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\ForestCoverType.java', 'neuroph', '8', '24', '20', '-1000', '5', '0.3125', '0.1136', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void trainNetwork(Config config){\n  TrainNetwork program=new TrainNetwork(config);\n  System.out.println(\"***************************************************\");\n  System.out.println(\"STEP 4: Creating and Training neural network: \");\n  program.createNeuralNetwork();\n  program.train();\n  evaluateNetwork(config);\n}\n', '0.3333333333333333', '2', '1');
INSERT INTO `case_study` VALUES ('2300', 'evaluateNetwork(Config)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\ForestCoverType.java', 'neuroph', '6', '14', '13', '-1000', '5', '0.25', '0.0556', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public static void evaluateNetwork(Config config){\n  Evaluate evaluate=new Evaluate(config);\n  System.out.println(\"***************************************************\");\n  System.out.println(\"STEP 5: Evaluating neural network: \");\n  evaluate.evaluate();\n}\n', '0.5', '2', '1');
INSERT INTO `case_study` VALUES ('2303', 'createTrainingAndTestSet()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\GenerateData.java', 'neuroph', '22', '196', '161', '-1000', '7', '0.1263', '0.0746', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void createTrainingAndTestSet(){\n  DataSet dataSet=createDataSet();\n  dataSet.shuffle();\n  DataSet[] trainingAndTestSet=dataSet.createTrainingAndTestSubsets(75,25);\n  DataSet trainingSet=trainingAndTestSet[0];\n  System.out.println(\"Saving training set to file...\");\n  trainingSet.save(config.getTrainingFileName());\n  System.out.println(\"Training set successfully saved!\");\n  DataSet testSet=trainingAndTestSet[1];\n  System.out.println(\"Normalizing test set...\");\n  Normalizer nor=new MaxNormalizer();\n  nor.normalize(testSet);\n  System.out.println(\"Saving normalized test set to file...\");\n  testSet.shuffle();\n  testSet.save(config.getTestFileName());\n  System.out.println(\"Normalized test set successfully saved!\");\n  System.out.println(\"Training set size: \" + trainingSet.getRows().size() + \" rows. \");\n  System.out.println(\"Test set size: \" + testSet.getRows().size() + \" rows. \");\n  System.out.println(\"-----------------------------------------------\");\n  double percentTraining=(double)trainingSet.getRows().size() * 100.0 / (double)dataSet.getRows().size();\n  double percentTest=(double)testSet.getRows().size() * 100.0 / (double)dataSet.getRows().size();\n  System.out.println(\"Training set takes \" + formatDecimalNumber(percentTraining) + \"% of main data set. \");\n  System.out.println(\"Test set takes \" + formatDecimalNumber(percentTest) + \"% of main data set. \");\n}\n', '0.5', '7', '1');
INSERT INTO `case_study` VALUES ('2306', 'createBalancedTrainingSet(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\GenerateData.java', 'neuroph', '50', '1101', '977', '-1000', '5', '0.0837', '0.062', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public void createBalancedTrainingSet(int count){\n  DataSet balanced=new DataSet(54,7);\n  int firstType=0;\n  int secondType=0;\n  int thirdType=0;\n  int fourthType=0;\n  int fifthType=0;\n  int sixthType=0;\n  int seventhType=0;\n  DataSet trainingSet=DataSet.load(config.getTrainingFileName());\n  List<DataSetRow> rows=trainingSet.getRows();\n  System.out.println(\"Test set size: \" + rows.size() + \" rows. \");\n  for (  DataSetRow row : rows) {\n    double[] DesiredOutput=row.getDesiredOutput();\n    int index=-1;\n    for (int i=0; i < DesiredOutput.length; i++) {\n      if (DesiredOutput[i] == 1.0) {\n        index=i;\n        break;\n      }\n    }\nswitch (index + 1) {\ncase 1:\n      if (firstType < count) {\n        balanced.addRow(row);\n        firstType++;\n      }\n    break;\ncase 2:\n  if (secondType < count) {\n    balanced.addRow(row);\n    secondType++;\n  }\nbreak;\ncase 3:\nif (thirdType < count) {\nbalanced.addRow(row);\nthirdType++;\n}\nbreak;\ncase 4:\nif (fourthType < count) {\nbalanced.addRow(row);\nfourthType++;\n}\nbreak;\ncase 5:\nif (fifthType < count) {\nbalanced.addRow(row);\nfifthType++;\n}\nbreak;\ncase 6:\nif (sixthType < count) {\nbalanced.addRow(row);\nsixthType++;\n}\nbreak;\ncase 7:\nif (seventhType < count) {\nbalanced.addRow(row);\nseventhType++;\n}\nbreak;\ndefault :\nSystem.out.println(\"Error with output vector size! \");\n}\n}\nSystem.out.println(\"Balanced test set size: \" + balanced.getRows().size() + \" rows. \");\nSystem.out.println(\"Samples per tree: \");\nSystem.out.println(\"First type: \" + firstType + \" samples. \");\nSystem.out.println(\"Second type: \" + secondType + \" samples. \");\nSystem.out.println(\"Third type: \" + thirdType + \" samples. \");\nSystem.out.println(\"Fourth type: \" + fourthType + \" samples. \");\nSystem.out.println(\"Fifth type: \" + fifthType + \" samples. \");\nSystem.out.println(\"Sixth type: \" + sixthType + \" samples. \");\nSystem.out.println(\"Seventh type: \" + seventhType + \" samples. \");\nbalanced.save(config.getBalancedFileName());\n}\n', '0.375', '15', '18');
INSERT INTO `case_study` VALUES ('2307', 'normalizeBalancedTrainingSet()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\GenerateData.java', 'neuroph', '8', '17', '6', '-1000', '3', '0.3125', '0.2006', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', 'public void normalizeBalancedTrainingSet(){\n  DataSet dataSet=DataSet.load(config.getBalancedFileName());\n  Normalizer normalizer=new MaxNormalizer();\n  normalizer.normalize(dataSet);\n  System.out.println(\"Saving normalized training data set to file... \");\n  dataSet.shuffle();\n  dataSet.shuffle();\n  dataSet.save(config.getNormalizedBalancedFileName());\n  System.out.println(\"Normalized training data set successfully saved!\");\n}\n', '0.5714285714285714', '2', '1');
INSERT INTO `case_study` VALUES ('2309', 'createNeuralNetwork()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\TrainNetwork.java', 'neuroph', '8', '19', '10', '-1000', '3', '0.3333', '0.216', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public void createNeuralNetwork(){\n  System.out.println(\"Creating neural network... \");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(config.getInputCount(),config.getFirstHiddenLayerCount(),config.getSecondHiddenLayerCount(),config.getOutputCount());\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.setLearningRate(0.01);\n  learningRule.setMaxError(0.1);\n  learningRule.setMaxIterations(1000);\n  System.out.println(\"Saving neural network to file... \");\n  neuralNet.save(config.getTrainedNetworkFileName());\n  System.out.println(\"Neural network successfully saved!\");\n}\n', '0.45454545454545453', '2', '1');
INSERT INTO `case_study` VALUES ('2310', 'train()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\TrainNetwork.java', 'neuroph', '7', '12', '3', '-1000', '3', '0.2857', '0.1433', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void train(){\n  System.out.println(\"Training neural network... \");\n  MultiLayerPerceptron neuralNet=(MultiLayerPerceptron)NeuralNetwork.createFromFile(config.getTrainedNetworkFileName());\n  DataSet dataSet=DataSet.load(config.getNormalizedBalancedFileName());\n  neuralNet.getLearningRule().addListener(this);\n  neuralNet.learn(dataSet);\n  System.out.println(\"Saving trained neural network to file... \");\n  neuralNet.save(config.getTrainedNetworkFileName());\n  System.out.println(\"Neural network successfully saved!\");\n}\n', '0.5', '2', '1');
INSERT INTO `case_study` VALUES ('2312', 'handleLearningEvent(LearningEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\forestCover\\TrainNetwork.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.3333', '0.1605', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void handleLearningEvent(LearningEvent event){\n  BackPropagation bp=(BackPropagation)event.getSource();\n  if (event.getEventType().equals(LearningEvent.Type.LEARNING_STOPPED)) {\n    double error=bp.getTotalNetworkError();\n    System.out.println(\"Training completed in \" + bp.getCurrentIteration() + \" iterations, \");\n    System.out.println(\"With total error: \" + formatDecimalNumber(error));\n  }\n else {\n    System.out.println(\"Iteration: \" + bp.getCurrentIteration() + \" | Network error: \"+ bp.getTotalNetworkError());\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('2314', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\germanCreditData\\GermanCreditDataSample.java', 'neuroph', '22', '200', '169', '-1000', '5', '0.1039', '0.0556', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training and test set from file...\");\n  String trainingSetFileName=\"data_sets/german credit data.txt\";\n  int inputsCount=24;\n  int outputsCount=2;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\" \");\n  dataSet.shuffle();\n  Normalizer normalizer=new MaxNormalizer();\n  normalizer.normalize(dataSet);\n  DataSet[] trainingAndTestSet=dataSet.createTrainingAndTestSubsets(70,30);\n  DataSet trainingSet=trainingAndTestSet[0];\n  DataSet testSet=trainingAndTestSet[1];\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,12,6,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.01);\n  learningRule.setMaxError(0.001);\n  learningRule.setMaxIterations(10000);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(trainingSet);\n  System.out.println(\"Testing network...\\n\\n\");\n  testNeuralNetwork(neuralNet,testSet);\n  System.out.println(\"Done.\");\n  System.out.println(\"**************************************************\");\n}\n', '0.6666666666666666', '10', '1');
INSERT INTO `case_study` VALUES ('2315', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\germanCreditData\\GermanCreditDataSample.java', 'neuroph', '19', '132', '93', '-1000', '3', '0.1498', '0.0984', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  System.out.println(\"**************************************************\");\n  System.out.println(\"**********************RESULT**********************\");\n  System.out.println(\"**************************************************\");\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    int predicted=maxOutput(networkOutput);\n    double[] networkDesiredOutput=testSetRow.getDesiredOutput();\n    int ideal=maxOutput(networkDesiredOutput);\n    keepScore(predicted,ideal);\n  }\n  System.out.println(\"Total cases: \" + this.count[2] + \". \");\n  System.out.println(\"Correctly predicted cases: \" + this.correct[2] + \". \");\n  System.out.println(\"Incorrectly predicted cases: \" + (this.count[2] - this.correct[2] - unpredicted) + \". \");\n  System.out.println(\"Unrecognized cases: \" + unpredicted + \". \");\n  double percentTotal=(double)this.correct[2] * 100 / (double)this.count[2];\n  System.out.println(\"Predicted correctly: \" + formatDecimalNumber(percentTotal) + \"%. \");\n  double percentM=(double)this.correct[0] * 100.0 / (double)this.count[0];\n  System.out.println(\"Prediction for \'Good credit risk\' => (Correct/total): \" + this.correct[0] + \"/\"+ count[0]+ \"(\"+ formatDecimalNumber(percentM)+ \"%). \");\n  double percentB=(double)this.correct[1] * 100.0 / (double)this.count[1];\n  System.out.println(\"Prediction for \'Bad credit risk\' => (Correct/total): \" + this.correct[1] + \"/\"+ count[1]+ \"(\"+ formatDecimalNumber(percentB)+ \"%). \");\n}\n', '0.5', '22', '2');
INSERT INTO `case_study` VALUES ('2316', 'handleLearningEvent(LearningEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\germanCreditData\\GermanCreditDataSample.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.3333', '0.1605', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void handleLearningEvent(LearningEvent event){\n  BackPropagation bp=(BackPropagation)event.getSource();\n  if (event.getEventType().equals(LearningEvent.Type.LEARNING_STOPPED)) {\n    double error=bp.getTotalNetworkError();\n    System.out.println(\"Training completed in \" + bp.getCurrentIteration() + \" iterations, \");\n    System.out.println(\"With total error: \" + formatDecimalNumber(error));\n  }\n else {\n    System.out.println(\"Iteration: \" + bp.getCurrentIteration() + \" | Network error: \"+ bp.getTotalNetworkError());\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('2317', 'maxOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\germanCreditData\\GermanCreditDataSample.java', 'neuroph', '10', '31', '17', '-1000', '3', '0.35', '0.1705', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static int maxOutput(double[] array){\n  double max=array[0];\n  int index=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] > max) {\n      index=i;\n      max=array[i];\n    }\n  }\n  if (max < 0.5) {\n    return -1;\n  }\n  return index;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2318', 'keepScore(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\germanCreditData\\GermanCreditDataSample.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2222', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void keepScore(int prediction,int ideal){\n  count[ideal]++;\n  count[2]++;\n  if (prediction == ideal) {\n    correct[ideal]++;\n    correct[2]++;\n  }\n  if (prediction == -1) {\n    unpredicted++;\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('2321', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\ionosphere\\IonosphereSample.java', 'neuroph', '24', '245', '214', '-1000', '7', '0.0952', '0.048', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training and test set from file...\");\n  String trainingSetFileName=\"data_sets/ionosphere.txt\";\n  int inputsCount=34;\n  int outputsCount=2;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\");\n  dataSet.shuffle();\n  Normalizer normalizer=new MaxNormalizer();\n  normalizer.normalize(dataSet);\n  DataSet[] trainingAndTestSet=dataSet.createTrainingAndTestSubsets(70,30);\n  DataSet trainingSet=trainingAndTestSet[0];\n  DataSet testSet=trainingAndTestSet[1];\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,16,8,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.001);\n  learningRule.setMaxIterations(10000);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(trainingSet);\n  System.out.println(\"Testing network...\\n\\n\");\n  testNeuralNetwork(neuralNet,testSet);\n  System.out.println(\"Done.\");\n  System.out.println(\"**************************************************\");\n}\n', '0.6666666666666666', '10', '1');
INSERT INTO `case_study` VALUES ('2322', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\ionosphere\\IonosphereSample.java', 'neuroph', '22', '175', '119', '-1000', '3', '0.1364', '0.0974', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  System.out.println(\"**************************************************\");\n  System.out.println(\"**********************RESULT**********************\");\n  System.out.println(\"**************************************************\");\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    int predicted=maxOutput(networkOutput);\n    double[] networkDesiredOutput=testSetRow.getDesiredOutput();\n    int ideal=maxOutput(networkDesiredOutput);\n    keepScore(predicted,ideal);\n  }\n  System.out.println(\"Total cases: \" + this.count[2] + \". \");\n  System.out.println(\"Correctly predicted cases: \" + this.correct[2] + \". \");\n  System.out.println(\"Incorrectly predicted cases: \" + (this.count[2] - this.correct[2] - unpredicted) + \". \");\n  System.out.println(\"Unrecognized cases: \" + unpredicted + \". \");\n  double percentTotal=(double)this.correct[2] * 100 / (double)this.count[2];\n  System.out.println(\"Predicted correctly: \" + formatDecimalNumber(percentTotal) + \"%. \");\n  double percentM=(double)this.correct[0] * 100.0 / (double)this.count[0];\n  System.out.println(\"Prediction for \'Good\' => (Correct/total): \" + this.correct[0] + \"/\"+ count[0]+ \"(\"+ formatDecimalNumber(percentM)+ \"%). \");\n  double percentB=(double)this.correct[1] * 100.0 / (double)this.count[1];\n  System.out.println(\"Prediction for \'Bad\' => (Correct/total): \" + this.correct[1] + \"/\"+ count[1]+ \"(\"+ formatDecimalNumber(percentB)+ \"%). \");\n  this.count=new int[3];\n  this.correct=new int[3];\n  unpredicted=0;\n}\n', '0.5', '24', '2');
INSERT INTO `case_study` VALUES ('2323', 'handleLearningEvent(LearningEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\ionosphere\\IonosphereSample.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.3333', '0.1605', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void handleLearningEvent(LearningEvent event){\n  BackPropagation bp=(BackPropagation)event.getSource();\n  if (event.getEventType().equals(LearningEvent.Type.LEARNING_STOPPED)) {\n    double error=bp.getTotalNetworkError();\n    System.out.println(\"Training completed in \" + bp.getCurrentIteration() + \" iterations, \");\n    System.out.println(\"With total error: \" + formatDecimalNumber(error));\n  }\n else {\n    System.out.println(\"Iteration: \" + bp.getCurrentIteration() + \" | Network error: \"+ bp.getTotalNetworkError());\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('2324', 'maxOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\ionosphere\\IonosphereSample.java', 'neuroph', '10', '31', '17', '-1000', '3', '0.35', '0.1705', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static int maxOutput(double[] array){\n  double max=array[0];\n  int index=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] > max) {\n      index=i;\n      max=array[i];\n    }\n  }\n  if (max < 0.5) {\n    return -1;\n  }\n  return index;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2325', 'keepScore(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\ionosphere\\IonosphereSample.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2222', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void keepScore(int prediction,int ideal){\n  count[ideal]++;\n  count[2]++;\n  if (prediction == ideal) {\n    correct[ideal]++;\n    correct[2]++;\n  }\n  if (prediction == -1) {\n    unpredicted++;\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('2327', 'calculateMean(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\norm\\DataSetStatistics.java', 'neuroph', '10', '30', '15', '-1000', '3', '0.2667', '0.1258', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static double[] calculateMean(DataSet dataSet){\n  double[] mean=new double[dataSet.getInputSize()];\n  for (  DataSetRow row : dataSet) {\n    double[] currentInput=row.getInput();\n    for (int i=0; i < dataSet.getInputSize(); i++) {\n      mean[i]+=currentInput[i];\n    }\n  }\n  for (int i=0; i < dataSet.getInputSize(); i++) {\n    mean[i]/=dataSet.getRows().size();\n  }\n  return mean;\n}\n', '0.6666666666666666', '6', '4');
INSERT INTO `case_study` VALUES ('2328', 'calculateMaxByColumns(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\norm\\DataSetStatistics.java', 'neuroph', '10', '31', '17', '-1000', '2', '0.225', '0.1133', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static double[] calculateMaxByColumns(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  double[] maxColumnElements=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    maxColumnElements[i]=Double.MIN_VALUE;\n  }\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      maxColumnElements[i]=Math.max(maxColumnElements[i],input[i]);\n    }\n  }\n  return maxColumnElements;\n}\n', '0.6666666666666666', '7', '4');
INSERT INTO `case_study` VALUES ('2329', 'calculateMinByColumns(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\norm\\DataSetStatistics.java', 'neuroph', '10', '31', '17', '-1000', '2', '0.225', '0.1133', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static double[] calculateMinByColumns(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  double[] minColumnElements=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    minColumnElements[i]=Double.MAX_VALUE;\n  }\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      minColumnElements[i]=Math.min(minColumnElements[i],input[i]);\n    }\n  }\n  return minColumnElements;\n}\n', '0.6666666666666666', '7', '4');
INSERT INTO `case_study` VALUES ('2330', 'normalize(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\norm\\ZeroMeanNormalizer.java', 'neuroph', '9', '16', '0', '-1000', '1', '0.2963', '0.1759', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void normalize(DataSet dataSet){\n  double[] maxInput=DataSetStatistics.calculateMaxByColumns(dataSet);\n  double[] minInput=DataSetStatistics.calculateMinByColumns(dataSet);\n  double[] meanInput=DataSetStatistics.calculateMean(dataSet);\n  for (  DataSetRow row : dataSet.getRows()) {\n    double[] normalizedInput=row.getInput();\n    for (int i=0; i < dataSet.getInputSize(); i++) {\n      double divider=maxInput[i] - minInput[i] == 0 ? 1 : maxInput[i] - minInput[i];\n      normalizedInput[i]=(normalizedInput[i] - meanInput[i]) / divider;\n    }\n    row.setInput(normalizedInput);\n  }\n}\n', '0.42857142857142855', '8', '4');
INSERT INTO `case_study` VALUES ('2332', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\segmentChallenge\\SegmentChallengeSample.java', 'neuroph', '28', '318', '258', '-1000', '6', '0.1126', '0.0711', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training and test set from file...\");\n  String trainingSetFileName=\"data_sets/segment challenge.txt\";\n  String testSetFileName=\"data_sets/segment test.txt\";\n  int inputsCount=19;\n  int outputsCount=7;\n  DataSet trainingSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\");\n  System.out.println(\"Training set size: \" + trainingSet.getRows().size());\n  trainingSet.shuffle();\n  trainingSet.shuffle();\n  Normalizer normalizer=new MaxNormalizer();\n  normalizer.normalize(trainingSet);\n  DataSet testSet=DataSet.createFromFile(testSetFileName,inputsCount,outputsCount,\",\");\n  System.out.println(\"Test set size: \" + testSet.getRows().size());\n  System.out.println(\"--------------------------------------------------\");\n  testSet.shuffle();\n  testSet.shuffle();\n  normalizer.normalize(testSet);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,17,10,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.01);\n  learningRule.setMaxError(0.001);\n  learningRule.setMaxIterations(12000);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(trainingSet);\n  System.out.println(\"Testing network...\\n\\n\");\n  testNeuralNetwork(neuralNet,testSet);\n  System.out.println(\"Done.\");\n  System.out.println(\"**************************************************\");\n}\n', '0.6666666666666666', '9', '1');
INSERT INTO `case_study` VALUES ('2333', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\segmentChallenge\\SegmentChallengeSample.java', 'neuroph', '21', '165', '120', '-1000', '3', '0.127', '0.0761', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  System.out.println(\"**************************************************\");\n  System.out.println(\"**********************RESULT**********************\");\n  System.out.println(\"**************************************************\");\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    int predicted=maxOutput(networkOutput);\n    double[] networkDesiredOutput=testSetRow.getDesiredOutput();\n    int ideal=maxOutput(networkDesiredOutput);\n    keepScore(predicted,ideal);\n  }\n  System.out.println(\"Total cases: \" + this.count[7] + \". \");\n  System.out.println(\"Correctly predicted cases: \" + this.correct[7] + \". \");\n  System.out.println(\"Incorrectly predicted cases: \" + (this.count[7] - this.correct[7] - unpredicted) + \". \");\n  System.out.println(\"Unrecognized cases: \" + unpredicted + \". \");\n  double percentTotal=(double)this.correct[7] * 100 / (double)this.count[7];\n  System.out.println(\"Predicted correctly: \" + formatDecimalNumber(percentTotal) + \"%. \");\n  for (int i=0; i < correct.length - 1; i++) {\n    double p=(double)this.correct[i] * 100.0 / (double)this.count[i];\n    System.out.println(\"Segment class: \" + getClasificationClass(i + 1) + \" - Correct/total: \"+ this.correct[i]+ \"/\"+ count[i]+ \"(\"+ formatDecimalNumber(p)+ \"%). \");\n  }\n  this.count=new int[8];\n  this.correct=new int[8];\n  unpredicted=0;\n}\n', '0.5', '21', '3');
INSERT INTO `case_study` VALUES ('2334', 'handleLearningEvent(LearningEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\segmentChallenge\\SegmentChallengeSample.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.3333', '0.1605', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void handleLearningEvent(LearningEvent event){\n  BackPropagation bp=(BackPropagation)event.getSource();\n  if (event.getEventType().equals(LearningEvent.Type.LEARNING_STOPPED)) {\n    double error=bp.getTotalNetworkError();\n    System.out.println(\"Training completed in \" + bp.getCurrentIteration() + \" iterations, \");\n    System.out.println(\"With total error: \" + formatDecimalNumber(error));\n  }\n else {\n    System.out.println(\"Iteration: \" + bp.getCurrentIteration() + \" | Network error: \"+ bp.getTotalNetworkError());\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('2335', 'maxOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\segmentChallenge\\SegmentChallengeSample.java', 'neuroph', '10', '31', '17', '-1000', '3', '0.35', '0.1705', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static int maxOutput(double[] array){\n  double max=array[0];\n  int index=0;\n  for (int i=0; i < array.length; i++) {\n    if (array[i] > max) {\n      index=i;\n      max=array[i];\n    }\n  }\n  if (max < 0.5) {\n    return -1;\n  }\n  return index;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2336', 'keepScore(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\segmentChallenge\\SegmentChallengeSample.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2222', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void keepScore(int prediction,int ideal){\n  count[ideal]++;\n  count[7]++;\n  if (prediction == ideal) {\n    correct[ideal]++;\n    correct[7]++;\n  }\n  if (prediction == -1) {\n    unpredicted++;\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('2340', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\AnimalsClassificationSample.java', 'neuroph', '18', '129', '105', '-1000', '7', '0.142', '0.0657', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/animals_data.txt\";\n  int inputsCount=20;\n  int outputsCount=7;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\"\\t\",true);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,22,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetAnimals.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2341', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\AnimalsClassificationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2344', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\BalanceScaleSample.java', 'neuroph', '18', '129', '105', '-1000', '7', '0.142', '0.0657', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/balance_scale_data.txt\";\n  int inputsCount=20;\n  int outputsCount=3;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\"\\t\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,22,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetBalanceScale.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2345', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\BalanceScaleSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2348', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\CarEvaluationSample.java', 'neuroph', '18', '129', '105', '-1000', '7', '0.142', '0.0657', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/car_evaluation_data.txt\";\n  int inputsCount=21;\n  int outputsCount=4;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\"\\t\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,22,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetCarEvaluation.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2349', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\CarEvaluationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2352', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ConceptLearningAndClassificationSample.java', 'neuroph', '20', '162', '134', '-1000', '8', '0.1333', '0.0714', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/concept_learning_and_classification_data_1.txt\";\n  int inputsCount=15;\n  int outputsCount=3;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,10,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMomentum(0.7);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetConceptLearning.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.7777777777777778', '6', '1');
INSERT INTO `case_study` VALUES ('2353', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ConceptLearningAndClassificationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2356', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ConcreteStrenghtTestSample.java', 'neuroph', '18', '129', '105', '-1000', '7', '0.142', '0.0657', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/concrete_strenght_test_data.txt\";\n  int inputsCount=8;\n  int outputsCount=1;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,22,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralConcreteStrenght.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2357', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ConcreteStrenghtTestSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2360', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ForestFiresSample.java', 'neuroph', '17', '112', '88', '-1000', '6', '0.1503', '0.072', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/forest_fires_data.txt\";\n  int inputsCount=29;\n  int outputsCount=1;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,25,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetForestFires.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2361', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ForestFiresSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2364', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\GlassIdentificationSample.java', 'neuroph', '18', '129', '105', '-1000', '7', '0.142', '0.0657', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/glass_identification_data.txt\";\n  int inputsCount=9;\n  int outputsCount=7;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\"\\t\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,22,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.1);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralGlassIdentification.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2365', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\GlassIdentificationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2368', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\LensesClassificationSample.java', 'neuroph', '18', '129', '105', '-1000', '7', '0.142', '0.0657', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/lenses_data.txt\";\n  int inputsCount=9;\n  int outputsCount=3;\n  System.out.println(\"Creating training set...\");\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\" \",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,16,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetLenses.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2369', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\LensesClassificationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2372', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\PredictingPerformanceOfCPUSample.java', 'neuroph', '20', '162', '134', '-1000', '7', '0.13', '0.0594', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/cpu_data.txt\";\n  int inputsCount=7;\n  int outputsCount=1;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\",false);\n  Normalizer normalizer=new MaxNormalizer();\n  normalizer.normalize(dataSet);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,16,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetCPU.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.8', '7', '1');
INSERT INTO `case_study` VALUES ('2373', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\PredictingPerformanceOfCPUSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2376', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\PredictingPokerHandsSample.java', 'neuroph', '17', '112', '88', '-1000', '6', '0.1503', '0.072', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/predicting_poker_hands_data.txt\";\n  int inputsCount=85;\n  int outputsCount=9;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\"\\t\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,65,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetPokerHands.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2377', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\PredictingPokerHandsSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2380', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\PredictingTheReligionSample.java', 'neuroph', '17', '112', '88', '-1000', '6', '0.1503', '0.072', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/religion_data.txt\";\n  int inputsCount=54;\n  int outputsCount=5;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\"\\t\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,22,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetReligion.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2381', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\PredictingTheReligionSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2384', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ShuttleLandingControlSample.java', 'neuroph', '17', '112', '88', '-1000', '6', '0.1503', '0.072', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/shuttle_landing_control_data.txt\";\n  int inputsCount=15;\n  int outputsCount=2;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\",\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,16,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetShuttle.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2385', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\ShuttleLandingControlSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2388', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\WineClassificationSample.java', 'neuroph', '17', '112', '88', '-1000', '6', '0.1503', '0.072', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  System.out.println(\"Creating training set...\");\n  String trainingSetFileName=\"data_sets/wine_classification_data.txt\";\n  int inputsCount=13;\n  int outputsCount=3;\n  DataSet dataSet=DataSet.createFromFile(trainingSetFileName,inputsCount,outputsCount,\"\\t\",false);\n  System.out.println(\"Creating neural network...\");\n  MultiLayerPerceptron neuralNet=new MultiLayerPerceptron(inputsCount,22,outputsCount);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.addListener(this);\n  learningRule.setLearningRate(0.2);\n  learningRule.setMaxError(0.01);\n  System.out.println(\"Training network...\");\n  neuralNet.learn(dataSet);\n  System.out.println(\"Training completed.\");\n  System.out.println(\"Testing network...\");\n  testNeuralNetwork(neuralNet,dataSet);\n  System.out.println(\"Saving network\");\n  neuralNet.save(\"MyNeuralNetWineClassification.nnet\");\n  System.out.println(\"Done.\");\n}\n', '0.75', '6', '1');
INSERT INTO `case_study` VALUES ('2389', 'testNeuralNetwork(NeuralNetwork,DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\uci\\WineClassificationSample.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void testNeuralNetwork(NeuralNetwork neuralNet,DataSet testSet){\n  for (  DataSetRow testSetRow : testSet.getRows()) {\n    neuralNet.setInput(testSetRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testSetRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '4', '2');
INSERT INTO `case_study` VALUES ('2393', 'runTask(BenchmarkTask)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\benchmark\\Benchmark.java', 'neuroph', '19', '119', '67', '-1000', '3', '0.1842', '0.2304', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '/** \n * Runs specified benchmark tasks, the basic benchmarking workflow.\n * Prepares benchmark, run warming up iterations, measures the execution\n * time for specified number of benchmarking iterations, and gets the benchmarking results\n * @param task \n */\npublic static void runTask(BenchmarkTask task){\n  System.out.println(\"Preparing task \" + task.getName());\n  task.prepareTest();\n  System.out.println(\"Warming up \" + task.getName());\n  for (int i=0; i < task.getWarmupIterations(); i++) {\n    task.runTest();\n  }\n  System.out.println(\"Runing \" + task.getName());\n  Stopwatch timer=new Stopwatch();\n  BenchmarkTaskResults results=new BenchmarkTaskResults(task.getTestIterations());\n  for (int i=0; i < task.getTestIterations(); i++) {\n    timer.reset();\n    timer.start();\n    task.runTest();\n    timer.stop();\n    results.addElapsedTime(timer.getElapsedTime());\n  }\n  results.calculateStatistics();\n  System.out.println(task.getName() + \" results\");\n  System.out.println(results);\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('2413', 'calculateStatistics()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\benchmark\\BenchmarkTaskResults.java', 'neuroph', '15', '58', '11', '-1000', '2', '0.2182', '0.1549', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void calculateStatistics(){\n  this.minTestTime=elapsedTimes[0];\n  this.maxTestTime=elapsedTimes[0];\n  long sum=0;\n  for (int i=0; i < timesCounter; i++) {\n    sum+=elapsedTimes[i];\n    if (elapsedTimes[i] < minTestTime) {\n      minTestTime=elapsedTimes[i];\n    }\n    if (elapsedTimes[i] > maxTestTime) {\n      maxTestTime=elapsedTimes[i];\n    }\n  }\n  this.averageTestTime=sum / (double)timesCounter;\n  long sqrSum=0;\n  for (int i=0; i < timesCounter; i++) {\n    sqrSum+=(elapsedTimes[i] - averageTestTime) * (elapsedTimes[i] - averageTestTime);\n  }\n  this.standardDeviation=Math.sqrt(sqrSum / (double)timesCounter);\n}\n', '0', '8', '5');
INSERT INTO `case_study` VALUES ('2416', 'prepareTest()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\benchmark\\MyBenchmarkTask.java', 'neuroph', '14', '69', '47', '-1000', '3', '0.1345', '0.0499', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * Benchmrk preparation consists of training set and neural networ creatiion.\n * This method generates training set with 100 rows, where every row has 10 input and 5 output elements\n * Neural network has two hiddden layers with 8 and 7 neurons, and runs learning rule for 2000 iterations\n */\n@Override public void prepareTest(){\n  int trainingSetSize=100;\n  int inputSize=10;\n  int outputSize=5;\n  this.trainingSet=new DataSet(inputSize,outputSize);\n  for (int i=0; i < trainingSetSize; i++) {\n    double[] input=new double[inputSize];\n    for (int j=0; j < inputSize; j++)     input[j]=Math.random();\n    double[] output=new double[outputSize];\n    for (int j=0; j < outputSize; j++)     output[j]=Math.random();\n    DataSetRow trainingSetRow=new DataSetRow(input,output);\n    trainingSet.addRow(trainingSetRow);\n  }\n  network=new MultiLayerPerceptron(inputSize,8,7,outputSize);\n  ((MomentumBackpropagation)network.getLearningRule()).setMaxIterations(2000);\n}\n', '0.8333333333333334', '10', '4');
INSERT INTO `case_study` VALUES ('2431', 'readInput()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\io\\InputStreamAdapter.java', 'neuroph', '8', '23', '18', '-1000', '4', '0.225', '0.0895', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public double[] readInput(){\n  try {\n    String inputLine=bufferedReader.readLine();\n    if (inputLine != null) {\n      double[] inputBuffer=VectorParser.parseDoubleArray(inputLine);\n      return inputBuffer;\n    }\n    return null;\n  }\n catch (  IOException ex) {\n    throw new NeurophInputException(\"Error reading input from stream!\",ex);\n  }\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('2433', 'process(NeuralNetwork,InputAdapter,OutputAdapter)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\io\\IOHelper.java', 'neuroph', '9', '27', '18', '-1000', '2', '0.2667', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Feeds specified neural network with data from InputAdapter and writes\n * output using OutputAdapter\n * @param neuralNet neural network\n * @param in input data source\n * @param out output data target  \n */\npublic static void process(NeuralNetwork neuralNet,InputAdapter in,OutputAdapter out){\n  double[] input;\n  while ((input=in.readInput()) != null) {\n    neuralNet.setInput(input);\n    neuralNet.calculate();\n    double[] output=neuralNet.getOutput();\n    out.writeOutput(output);\n  }\n  in.close();\n  out.close();\n}\n', '0.42857142857142855', '5', '2');
INSERT INTO `case_study` VALUES ('2434', 'JDBCInputAdapter(Connection,String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\io\\JDBCInputAdapter.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.1728', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public JDBCInputAdapter(Connection connection,String sql){\n  try {\n    Statement stmt=connection.createStatement();\n    resultSet=stmt.executeQuery(sql);\n    ResultSetMetaData rsmd=resultSet.getMetaData();\n    inputSize=rsmd.getColumnCount();\n  }\n catch (  SQLException ex) {\n    Logger.getLogger(JDBCInputAdapter.class.getName()).log(Level.SEVERE,null,ex);\n    throw new NeurophInputException(\"Error executing query at JdbcInputAdapter\",ex);\n  }\n}\n', '1', '5', '2');
INSERT INTO `case_study` VALUES ('2435', 'readInput()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\io\\JDBCInputAdapter.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2222', '0.0929', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Reads next row from result set and returns input for neural network as array of doubles.\n * @return neural network input as array of doubles\n */\n@Override public double[] readInput(){\n  try {\n    while (resultSet.next()) {\n      double[] inputBuffer=new double[inputSize];\n      for (int i=1; i <= inputSize; i++) {\n        inputBuffer[i - 1]=resultSet.getDouble(i);\n      }\n      return inputBuffer;\n    }\n  }\n catch (  SQLException ex) {\n    throw new NeurophInputException(\"Error reading input value from the result set!\",ex);\n  }\n  return null;\n}\n', '1', '3', '4');
INSERT INTO `case_study` VALUES ('2438', 'writeOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\io\\JDBCOutputAdapter.java', 'neuroph', '22', '202', '173', '-1000', '10', '0.1136', '0.0708', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '/** \n * Writes specified output to table in database\n * @param output \n */\n@Override public void writeOutput(double[] output){\n  try {\n    String sql=\"INSERT \" + tableName + \" VALUES(\";\n    for (int i=0; i < output.length; i++) {\n      sql+=\"?\";\n      if (i < (output.length - 1)) {\n        sql=\", \";\n      }\n    }\n    sql+=\")\";\n    PreparedStatement stmt=connection.prepareStatement(sql);\n    for (int i=0; i < output.length; i++) {\n      stmt.setDouble(i,output[i]);\n    }\n    stmt.executeUpdate(sql);\n    stmt.close();\n  }\n catch (  SQLException ex) {\n    Logger.getLogger(JDBCOutputAdapter.class.getName()).log(Level.SEVERE,null,ex);\n    throw new NeurophInputException(\"Error executing query at JDBCOutputAdapter\",ex);\n  }\n}\n', '1', '6', '5');
INSERT INTO `case_study` VALUES ('2452', 'writeOutput(double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\io\\OutputStreamAdapter.java', 'neuroph', '9', '28', '20', '-1000', '4', '0.2222', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Writes specified output to output stream\n * @param output output vector to write\n */\n@Override public void writeOutput(double[] output){\n  try {\n    StringBuilder outputLine=new StringBuilder();\n    for (int i=0; i < output.length; i++) {\n      outputLine.append(output[i]).append(\' \').append(outputLine);\n    }\n    outputLine.append(System.lineSeparator());\n    bufferedWriter.write(outputLine.toString());\n  }\n catch (  IOException ex) {\n    throw new NeurophOutputException(\"Error writing output to stream!\",ex);\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('2467', 'boxMuller(double,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\random\\GaussianRandomizer.java', 'neuroph', '15', '74', '43', '-1000', '4', '0.1867', '0.1139', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Compute a Gaussian random number.\n * @param meanThe mean.\n * @param stdThe standard deviation.\n * @return The random number.\n */\nprivate double boxMuller(double mean,double std){\n  double x1, x2, w, y1;\n  if (this.useLast) {\n    y1=this.y2;\n    this.useLast=false;\n  }\n else {\n    do {\n      x1=2.0 * randomGen.nextDouble() - 1.0;\n      x2=2.0 * randomGen.nextDouble() - 1.0;\n      w=x1 * x1 + x2 * x2;\n    }\n while (w >= 1.0);\n    w=Math.sqrt((-2.0 * Math.log(w)) / w);\n    y1=x1 * w;\n    this.y2=x2 * w;\n    this.useLast=true;\n  }\n  return (mean + y1 * std);\n}\n', '0', '11', '3');
INSERT INTO `case_study` VALUES ('2470', 'randomize(NeuralNetwork)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\random\\NguyenWidrowRandomizer.java', 'neuroph', '20', '155', '120', '-1000', '2', '0.13', '0.0648', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public void randomize(NeuralNetwork neuralNetwork){\n  super.randomize(neuralNetwork);\n  int inputNeuronsCount=neuralNetwork.getInputNeurons().size();\n  int hiddenNeuronsCount=0;\n  for (int i=1; i < neuralNetwork.getLayersCount() - 1; i++) {\n    hiddenNeuronsCount+=neuralNetwork.getLayerAt(i).getNeuronsCount();\n  }\n  double beta=0.7 * Math.pow(hiddenNeuronsCount,1.0 / inputNeuronsCount);\n  List<Layer> layers=neuralNetwork.getLayers();\n  for (  Layer layer : layers) {\n    double norm=0.0;\n    for (    Neuron neuron : layer.getNeurons()) {\n      for (      Connection connection : neuron.getInputConnections()) {\n        double weight=connection.getWeight().getValue();\n        norm+=weight * weight;\n      }\n    }\n    norm=Math.sqrt(norm);\n    for (    Neuron neuron : layer.getNeurons()) {\n      for (      Connection connection : neuron.getInputConnections()) {\n        double weight=connection.getWeight().getValue();\n        weight=beta * weight / norm;\n        connection.getWeight().setValue(weight);\n      }\n    }\n  }\n}\n', '0.5', '14', '7');
INSERT INTO `case_study` VALUES ('2479', 'randomize(Neuron)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\random\\WeightsRandomizer.java', 'neuroph', '6', '12', '9', '-1000', '3', '0.2667', '0.0774', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '/** \n * Iterates and randomizes all connection weights in specified neuron\n * @param neuron neuron to randomize\n */\nprotected void randomize(Neuron neuron){\n  int numberOfInputConnections=neuron.getInputConnections().size();\n  double coefficient=1d / Math.sqrt(numberOfInputConnections);\n  coefficient=coefficient == 0 ? 1 : coefficient;\n  for (  Connection connection : neuron.getInputConnections()) {\n    connection.getWeight().setValue(nextRandomWeight());\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('2509', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\stockmarket\\Main.java', 'neuroph', '38', '458', '213', '-1000', '4', '0.1483', '0.2654', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static void main(String[] args){\n  System.out.println(\"Time stamp N1:\" + new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss:MM\").format(new Date()));\n  int maxIterations=10000;\n  NeuralNetwork neuralNet=new MultiLayerPerceptron(4,9,1);\n  ((LMS)neuralNet.getLearningRule()).setMaxError(0.001);\n  ((LMS)neuralNet.getLearningRule()).setLearningRate(0.7);\n  ((LMS)neuralNet.getLearningRule()).setMaxIterations(maxIterations);\n  DataSet trainingSet=new DataSet(4,1);\n  double daxmax=10000.0D;\n  trainingSet.addRow(new DataSetRow(new double[]{3710.0D / daxmax,3690.0D / daxmax,3890.0D / daxmax,3695.0D / daxmax},new double[]{3666.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3690.0D / daxmax,3890.0D / daxmax,3695.0D / daxmax,3666.0D / daxmax},new double[]{3692.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3890.0D / daxmax,3695.0D / daxmax,3666.0D / daxmax,3692.0D / daxmax},new double[]{3886.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3695.0D / daxmax,3666.0D / daxmax,3692.0D / daxmax,3886.0D / daxmax},new double[]{3914.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3666.0D / daxmax,3692.0D / daxmax,3886.0D / daxmax,3914.0D / daxmax},new double[]{3956.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3692.0D / daxmax,3886.0D / daxmax,3914.0D / daxmax,3956.0D / daxmax},new double[]{3953.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3886.0D / daxmax,3914.0D / daxmax,3956.0D / daxmax,3953.0D / daxmax},new double[]{4044.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3914.0D / daxmax,3956.0D / daxmax,3953.0D / daxmax,4044.0D / daxmax},new double[]{3987.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3956.0D / daxmax,3953.0D / daxmax,4044.0D / daxmax,3987.0D / daxmax},new double[]{3996.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3953.0D / daxmax,4044.0D / daxmax,3987.0D / daxmax,3996.0D / daxmax},new double[]{4043.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{4044.0D / daxmax,3987.0D / daxmax,3996.0D / daxmax,4043.0D / daxmax},new double[]{4068.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3987.0D / daxmax,3996.0D / daxmax,4043.0D / daxmax,4068.0D / daxmax},new double[]{4176.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{3996.0D / daxmax,4043.0D / daxmax,4068.0D / daxmax,4176.0D / daxmax},new double[]{4187.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{4043.0D / daxmax,4068.0D / daxmax,4176.0D / daxmax,4187.0D / daxmax},new double[]{4223.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{4068.0D / daxmax,4176.0D / daxmax,4187.0D / daxmax,4223.0D / daxmax},new double[]{4259.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{4176.0D / daxmax,4187.0D / daxmax,4223.0D / daxmax,4259.0D / daxmax},new double[]{4203.0D / daxmax}));\n  trainingSet.addRow(new DataSetRow(new double[]{4187.0D / daxmax,4223.0D / daxmax,4259.0D / daxmax,4203.0D / daxmax},new double[]{3989.0D / daxmax}));\n  neuralNet.learn(trainingSet);\n  System.out.println(\"Time stamp N2:\" + new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss:MM\").format(new Date()));\n  DataSet testSet=new DataSet(4,1);\n  testSet.addRow(new DataSetRow(new double[]{4223.0D / daxmax,4259.0D / daxmax,4203.0D / daxmax,3989.0D / daxmax}));\n  for (  DataSetRow testDataRow : testSet.getRows()) {\n    neuralNet.setInput(testDataRow.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(testDataRow.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n  System.out.println(\"Time stamp N3:\" + new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss:MM\").format(new Date()));\n  System.exit(0);\n}\n', '0.42857142857142855', '8', '2');
INSERT INTO `case_study` VALUES ('2516', 'read(String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\stockmarket\\StockFileReader.java', 'neuroph', '36', '580', '530', '-1000', '10', '0.0661', '0.0315', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', '@SuppressWarnings(\"static-access\") public void read(String fileName){\n  HashMap hm=new HashMap();\n  File file=new File(fileName);\n  System.out.println(\"file = \" + fileName + \". It will be filtered the values for the moment of the market opened\");\n  int counter=0;\n  try {\n    FileInputStream fis=new FileInputStream(file);\n    BufferedReader dis=new BufferedReader(new InputStreamReader(fis));\n    String s;\n    while ((s=dis.readLine()) != null) {\n      String[] s1=s.split(\",\");\n      String s00=s1[0].replace(\'\\\"\',\' \').trim();\n      String s01=s1[1].replace(\'\\\"\',\' \').trim();\n      hm.put(s00,s.replace(\'\\\"\',\' \').trim());\n      counter=counter + 1;\n    }\n    fis.close();\n  }\n catch (  IOException ioe) {\n    System.out.println(\"Oops- an IOException happened.\");\n    ioe.printStackTrace();\n    System.exit(1);\n  }\n  System.out.println(\"full number of values = \" + counter);\n  Set s=hm.keySet();\n  Iterator i=s.iterator();\n  valuesRow=new String[this.getMaxCounter()];\n  int n=0;\n  while (i.hasNext()) {\n    String key=(String)i.next();\n    String value=(String)hm.get(key);\n    n=n + 1;\n    if (counter - n < this.getMaxCounter()) {\n      valuesRow[counter - n]=value;\n      System.out.println(counter + \" \" + n+ \" \"+ valuesRow[counter - n]+ \" \"+ (counter - n));\n    }\n  }\n  System.out.println(\"valuesRow.length=\" + valuesRow.length);\n}\n', '0', '16', '5');
INSERT INTO `case_study` VALUES ('2525', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\stockmarket\\StockSocketReader.java', 'neuroph', '23', '235', '217', '-1000', '10', '0.087', '0.0337', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '@SuppressWarnings(\"static-access\") public void run(){\n  valuesRow=new String[this.getMaxCounter()];\n  for (int i=0; i < this.getMaxCounter(); i++) {\n    InputStream is=null;\n    try {\n      String surl=\"http://download.finance.yahoo.com/d/quotes.csv?s=^GDAXI&f=sl1d1t1c1ohgv&e=.csv\";\n      URL url=new URL(surl);\n      is=url.openStream();\n      BufferedReader dis=new BufferedReader(new InputStreamReader(is));\n      String s=dis.readLine();\n      System.out.println(s);\n      valuesRow[i]=s;\n      is.close();\n    }\n catch (    MalformedURLException mue) {\n      System.out.println(\"Ouch - a MalformedURLException happened.\");\n      mue.printStackTrace();\n      System.exit(1);\n    }\ncatch (    IOException ioe) {\n      System.out.println(\"Oops- an IOException happened.\");\n      ioe.printStackTrace();\n      System.exit(1);\n    }\n    try {\n      Thread.currentThread().sleep(this.getTsleep());\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  System.out.println(\"valuesRow.length=\" + valuesRow.length);\n}\n', '0', '9', '5');
INSERT INTO `case_study` VALUES ('2526', 'importFromArray(double[],int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\stockmarket\\StockTrainingSetImport.java', 'neuroph', '15', '69', '33', '-1000', '3', '0.24', '0.1213', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates and returns training set for stock market prediction using the provided data from array\n * @param values an array containing stock data\n * @param inputsCount training element (neural net) inputs count\n * @param outputsCount training element (neural net) ouputs count\n * @return training set with stock data\n */\npublic static DataSet importFromArray(double[] values,int inputsCount,int outputsCount){\n  DataSet trainingSet=new DataSet(inputsCount,outputsCount);\n  for (int i=0; i < values.length - inputsCount; i++) {\n    ArrayList<Double> inputs=new ArrayList<Double>();\n    for (int j=i; j < i + inputsCount; j++) {\n      inputs.add(values[j]);\n    }\n    ArrayList<Double> outputs=new ArrayList<Double>();\n    if (outputsCount > 0 && i + inputsCount + outputsCount <= values.length) {\n      for (int j=i + inputsCount; j < i + inputsCount + outputsCount; j++) {\n        outputs.add(values[j]);\n      }\n      if (outputsCount > 0) {\n        trainingSet.addRow(new DataSetRow(inputs,outputs));\n      }\n else {\n        trainingSet.addRow(new DataSetRow(inputs));\n      }\n    }\n  }\n  return trainingSet;\n}\n', '0.6666666666666666', '9', '7');
INSERT INTO `case_study` VALUES ('2536', 'doIt()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\timeseries\\GenerateSet.java', 'neuroph', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', '/** \n * Does the data set generation\n * @throws IOException\n */\npublic void doIt() throws IOException {\n  if (simple) {\n    doItSimple();\n  }\n else {\n    doItSupposition();\n  }\n}\n', '0', '0', '2');
INSERT INTO `case_study` VALUES ('2537', 'doItSimple()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\timeseries\\GenerateSet.java', 'neuroph', '19', '142', '113', '-1000', '5', '0.1134', '0.0848', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '/** \n * Generates simple sine wave data set\n * @throws IOException\n */\nprivate void doItSimple() throws IOException {\n  double buffer[]=new double[memorySize + 1];\n  int bufferSize=buffer.length;\n  int bufferFull=buffer.length;\n  GenerateSineWave gsw=new GenerateSineWave(1,1);\n  BufferedWriter out=new BufferedWriter(new FileWriter(filename));\n  for (int samples=0; samples < 1000; samples++) {\n    for (int j=0; j < sampleEvery; j++) {\n      gsw.getNextSample();\n    }\n    for (int i=1; i < bufferSize; i++) {\n      buffer[i - 1]=buffer[i];\n    }\n    buffer[bufferSize - 1]=gsw.getNextSample();\n    bufferFull--;\n    if (bufferFull <= 0) {\n      for (int i=0; i < bufferSize; i++) {\n        out.write(buffer[i] + \"\\t\");\n      }\n      out.write(\"\\n\");\n    }\n  }\n  out.flush();\n  out.close();\n}\n', '0.5', '9', '6');
INSERT INTO `case_study` VALUES ('2538', 'doItSupposition()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\timeseries\\GenerateSet.java', 'neuroph', '20', '162', '134', '-1000', '5', '0.1167', '0.075', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '/** \n * Generates supposition sine wave data set\n * @throws IOException\n */\nprivate void doItSupposition() throws IOException {\n  BufferedWriter out=new BufferedWriter(new FileWriter(filename));\n  double buffer[]=new double[memorySize + 1];\n  int bufferSize=buffer.length;\n  int bufferFull=buffer.length;\n  GenerateSineWave gsw1=new GenerateSineWave(1,0.5);\n  GenerateSineWave gsw2=new GenerateSineWave(4,0.5);\n  for (int samples=0; samples < 1000; samples++) {\n    for (int j=0; j < sampleEvery; j++) {\n      gsw1.getNextSample();\n      gsw2.getNextSample();\n    }\n    for (int i=1; i < bufferSize; i++) {\n      buffer[i - 1]=buffer[i];\n    }\n    buffer[bufferSize - 1]=gsw1.getNextSample() + gsw2.getNextSample();\n    bufferFull--;\n    if (bufferFull <= 0) {\n      for (int i=0; i < bufferSize; i++) {\n        out.write(buffer[i] + \"\\t\");\n      }\n      out.write(\"\\n\");\n    }\n  }\n  out.flush();\n  out.close();\n}\n', '0.5', '10', '6');
INSERT INTO `case_study` VALUES ('2541', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\timeseries\\GenerateTrainingSets.java', 'neuroph', '24', '85', '0', '-1000', '4', '0.4167', '0.4545', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '/** \n * Generates datasets used in time series prediction tutorial\n */\npublic static void main(String[] args){\n  final String directory=\"C:\\\\java\\\\Neuroph_2.3\\\\Neuroph\\\\tutorial\\\\\";\n  try {\n    GenerateSet gs=new GenerateSet(directory + \"BSW15\",true,1,5);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"BSW120\",true,1,20);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"BSW210\",true,2,10);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"BSW220\",true,2,20);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"BSW55\",true,5,5);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"SSW15\",false,1,5);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"SSW120\",false,1,20);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"SSW210\",false,2,10);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"SSW540\",false,5,40);\n    gs.doIt();\n    gs=new GenerateSet(directory + \"SSW1010\",false,10,10);\n    gs.doIt();\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n    System.out.println(\"Failed to generate all data sets.\");\n    System.exit(1);\n  }\n  System.out.println(\"Generated data sets.\");\n}\n', '0.5', '4', '2');
INSERT INTO `case_study` VALUES ('2543', 'train()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\timeseries\\TestTimeSeries.java', 'neuroph', '8', '18', '8', '-1000', '2', '0.2188', '0.1577', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void train(){\n  String inputFileName=\"C:\\\\timeseries\\\\BSW15\";\n  neuralNet=new MultiLayerPerceptron(TransferFunctionType.TANH,5,10,1);\n  MomentumBackpropagation learningRule=(MomentumBackpropagation)neuralNet.getLearningRule();\n  learningRule.setLearningRate(0.2);\n  learningRule.setMomentum(0.5);\n  learningRule.addListener(this);\n  trainingSet=DataSet.createFromFile(inputFileName,5,1,\"\\t\",false);\n  neuralNet.learn(trainingSet);\n  System.out.println(\"Done training.\");\n}\n', '0.8571428571428571', '2', '1');
INSERT INTO `case_study` VALUES ('2544', 'testNeuralNetwork()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\contrib\\samples\\timeseries\\TestTimeSeries.java', 'neuroph', '7', '14', '7', '-1000', '2', '0.3214', '0.1508', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Prints network output for the each element from the specified training set.\n * @param neuralNet neural network\n * @param trainingSet training set\n */\npublic void testNeuralNetwork(){\n  System.out.println(\"Testing network...\");\n  for (  DataSetRow trainingElement : trainingSet.getRows()) {\n    neuralNet.setInput(trainingElement.getInput());\n    neuralNet.calculate();\n    double[] networkOutput=neuralNet.getOutput();\n    System.out.print(\"Input: \" + Arrays.toString(trainingElement.getInput()));\n    System.out.println(\" Output: \" + Arrays.toString(networkOutput));\n  }\n}\n', '0.6', '2', '2');
INSERT INTO `case_study` VALUES ('2550', 'addPatternError(double[],double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\core\\learning\\error\\MeanSquaredError.java', 'neuroph', '7', '13', '5', '-1000', '3', '0.2857', '0.1579', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public double[] addPatternError(double[] predictedOutput,double[] targetOutput){\n  double[] patternError=new double[targetOutput.length];\n  for (int i=0; i < predictedOutput.length; i++) {\n    patternError[i]=predictedOutput[i] - targetOutput[i];\n    totalError+=patternError[i] * patternError[i];\n  }\n  patternCount++;\n  return patternError;\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('2560', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\AdaptiveThresholdBinarizeFilter.java', 'neuroph', '55', '1207', '929', '-1000', '2', '0.078', '0.0507', '0', '1', '1', '1', '0', '0', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int alpha;\n  double gray;\n  double[][] G=new double[width][height];\n  gray=new Color(originalImage.getRGB(0,0)).getRed();\n  G[0][0]=gray / 255;\n  for (int i=1; i < width; i++) {\n    gray=new Color(originalImage.getRGB(i,0)).getRed();\n    G[i][0]=G[i - 1][0] + gray / 255;\n  }\n  for (int j=1; j < height; j++) {\n    gray=new Color(originalImage.getRGB(0,j)).getRed();\n    G[0][j]=G[0][j - 1] + gray / 255;\n  }\n  for (int i=1; i < width; i++) {\n    for (int j=1; j < height; j++) {\n      gray=new Color(originalImage.getRGB(i,j)).getRed();\n      G[i][j]=gray / 255 + G[i][j - 1] + G[i - 1][j] - G[i - 1][j - 1];\n    }\n  }\n  int d=windowSize / 2;\n  int A=0;\n  int B=0;\n  int C=0;\n  int D=0;\n  double s;\n  double m;\n  double delta;\n  double treshold;\n  int newColor;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      if (i + d - 1 >= width) {\n        A=width - 1;\n      }\n else {\n        A=i + d - 1;\n      }\n      if (j + d - 1 >= height) {\n        B=height - 1;\n      }\n else {\n        B=j + d - 1;\n      }\n      if (i - d < 0) {\n        C=0;\n      }\n else {\n        C=i - d;\n      }\n      if (j - d < 0) {\n        D=0;\n      }\n else {\n        D=j - d;\n      }\n      s=(G[A][B] + G[C][D]) - (G[C][B] + G[A][D]);\n      m=s / (windowSize * windowSize);\n      gray=new Color(originalImage.getRGB(i,j)).getRed();\n      delta=gray / 255 - m;\n      treshold=m * (1 + k * (delta / (1.0 - delta) - 1));\n      if (gray / 255 > treshold) {\n        newColor=255;\n      }\n else {\n        newColor=0;\n      }\n      alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      newColor=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      filteredImage.setRGB(i,j,newColor);\n    }\n  }\n  return filteredImage;\n}\n', '1', '22', '12');
INSERT INTO `case_study` VALUES ('2565', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '30', '341', '247', '-1000', '2', '0.1016', '0.0802', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  int width=image.getWidth();\n  int height=image.getHeight();\n  while (width % N != 0) {\n    width--;\n  }\n  while (height % N != 0) {\n    height--;\n  }\n  originalImage=resize(image,width,height);\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int numXpatches=width / N;\n  int numYpatches=height / N;\n  double[][] T=createT();\n  double[][] Tinv=null;\n  if (N == 8)   Tinv=createTinv();\n  if (N == 16)   Tinv=createTinv16X16();\n  for (int i=0; i < numXpatches; i++) {\n    for (int j=0; j < numYpatches; j++) {\n      double[][] M=createM(i,j);\n      double[][] D=multiply(multiply(T,M),Tinv);\n      int[][] Q=null;\n      if (N == 8) {\n        Q=createQ50();\n        updateQ(Q);\n      }\n      if (N == 16) {\n        Q=createQ16X16();\n      }\n      int[][] C=createC(D,Q);\n      double[][] R=createR(Q,C);\n      int[][] Nmatrix=createN(Tinv,R,T);\n      fillFilteredImage(i,j,Nmatrix);\n    }\n  }\n  return filteredImage;\n}\n', '0', '15', '9');
INSERT INTO `case_study` VALUES ('2566', 'resize(BufferedImage,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '10', '33', '21', '-1000', '3', '0.2286', '0.1245', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public BufferedImage resize(BufferedImage img,int newW,int newH){\n  int w=img.getWidth();\n  int h=img.getHeight();\n  BufferedImage dimg=dimg=new BufferedImage(newW,newH,img.getType());\n  Graphics2D g=dimg.createGraphics();\n  g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,RenderingHints.VALUE_INTERPOLATION_BILINEAR);\n  g.drawImage(img,0,0,newW,newH,0,0,w,h,null);\n  g.dispose();\n  return dimg;\n}\n', '0', '7', '1');
INSERT INTO `case_study` VALUES ('2567', 'createT()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '9', '21', '6', '-1000', '3', '0.3148', '0.1505', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public double[][] createT(){\n  double[][] T=new double[N][N];\n  for (int i=0; i < N; i++) {\n    T[0][i]=roundFourDecimals(1.0 / Math.sqrt(N));\n  }\n  for (int i=1; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      T[i][j]=roundFourDecimals(Math.sqrt(2.0 / N) * Math.cos(((2.0 * j + 1) * i * Math.PI) / (2.0 * N)));\n    }\n  }\n  return T;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2568', 'createM(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '12', '51', '36', '-1000', '3', '0.1667', '0.0988', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public double[][] createM(int i,int j){\n  double[][] M=new double[N][N];\n  int xx=0;\n  int yy=0;\n  for (int x=i * N; x < i * N + N; x++) {\n    for (int y=j * N; y < j * N + N; y++) {\n      M[xx][yy]=new Color(originalImage.getRGB(x,y)).getRed() - 128;\n      yy++;\n    }\n    xx++;\n    yy=0;\n  }\n  return M;\n}\n', '0', '7', '3');
INSERT INTO `case_study` VALUES ('2572', 'multiply(double[][],double[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '10', '36', '27', '-1000', '3', '0.19', '0.0616', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public double[][] multiply(double[][] m1,double[][] m2){\n  int m1rows=m1.length;\n  int m1cols=m1[0].length;\n  int m2rows=m2.length;\n  int m2cols=m2[0].length;\n  if (m1cols != m2rows)   throw new IllegalArgumentException(\"matrices don\'t match: \" + m1cols + \" != \"+ m2rows);\n  double[][] result=new double[m1rows][m2cols];\n  for (int i=0; i < m1rows; i++)   for (int j=0; j < m2cols; j++)   for (int k=0; k < m1cols; k++)   result[i][j]+=m1[i][k] * m2[k][j];\n  return result;\n}\n', '0', '12', '5');
INSERT INTO `case_study` VALUES ('2574', 'createC(double[][],int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '7', '15', '9', '-1000', '3', '0.2449', '0.0976', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public int[][] createC(double[][] D,int[][] Q){\n  int[][] C=new int[N][N];\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      C[i][j]=(int)Math.round(D[i][j] / Q[i][j]);\n    }\n  }\n  return C;\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('2575', 'createR(int[][],int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '7', '15', '9', '-1000', '3', '0.2619', '0.1033', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public double[][] createR(int[][] Q,int[][] C){\n  double[][] R=new double[N][N];\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      R[i][j]=Q[i][j] * C[i][j];\n    }\n  }\n  return R;\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('2576', 'createN(double[][],double[][],double[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '8', '21', '14', '-1000', '3', '0.2', '0.0807', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public int[][] createN(double[][] Tinv,double[][] R,double[][] T){\n  int[][] Nmatrix=new int[N][N];\n  double[][] tmp=multiply(multiply(Tinv,R),T);\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      Nmatrix[i][j]=(int)(Math.round(tmp[i][j]) + 128);\n    }\n  }\n  return Nmatrix;\n}\n', '0', '7', '3');
INSERT INTO `case_study` VALUES ('2577', 'fillFilteredImage(int,int,int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '13', '68', '58', '-1000', '5', '0.1346', '0.0672', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public void fillFilteredImage(int i,int j,int[][] Nmatrix){\n  int xx=0;\n  int yy=0;\n  for (int x=i * N; x < i * N + N; x++) {\n    for (int y=j * N; y < j * N + N; y++) {\n      int alpha=new Color(originalImage.getRGB(x,y)).getAlpha();\n      int color=Nmatrix[xx][yy];\n      int rgb=ImageUtilities.colorToRGB(alpha,color,color,color);\n      yy++;\n      filteredImage.setRGB(x,y,rgb);\n    }\n    xx++;\n    yy=0;\n  }\n}\n', '1', '10', '3');
INSERT INTO `case_study` VALUES ('2578', 'updateQ(int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DCTgrayscale.java', 'neuroph', '10', '25', '5', '-1000', '2', '0.2625', '0.1621', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void updateQ(int[][] Q){\n  if (qualityLevel == 50)   return;\n  if (qualityLevel > 50) {\n    for (int i=0; i < N; i++) {\n      for (int j=0; j < N; j++) {\n        Q[i][j]=(int)Math.round(Q[i][j] * (100 - qualityLevel) * 1.0 / 50);\n      }\n    }\n  }\n  if (qualityLevel < 50) {\n    for (int i=0; i < N; i++) {\n      for (int j=0; j < N; j++) {\n        Q[i][j]=(int)Math.round(Q[i][j] * 50.0 / qualityLevel);\n      }\n    }\n  }\n}\n', '0', '5', '8');
INSERT INTO `case_study` VALUES ('2584', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '34', '463', '365', '-1000', '2', '0.087', '0.0727', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  int width=image.getWidth();\n  int height=image.getHeight();\n  while (width % N != 0) {\n    width--;\n  }\n  while (height % N != 0) {\n    height--;\n  }\n  originalImage=resize(image,width,height);\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int numXpatches=width / N;\n  int numYpatches=height / N;\n  double treshold=3 * sigma;\n  double[][] T=createT();\n  double[][] Tinv=null;\n  if (N == 16) {\n    Tinv=createTinv16X16();\n  }\n  if (N == 8) {\n    Tinv=createTinv();\n  }\n  for (int i=0; i < numXpatches; i++) {\n    for (int j=0; j < numYpatches; j++) {\n      double[][] M=createM(i,j);\n      double[][] D=multiply(multiply(T,M),Tinv);\n      tresholdDmatrix(D,treshold);\n      int[][] Q=null;\n      if (N == 16) {\n        Q=createQ16X16();\n      }\n      if (N == 8) {\n        Q=createQ50();\n        updateQ(Q);\n      }\n      int[][] C=createC(D,Q);\n      double[][] R=createR(Q,C);\n      int[][] Nmatrix=createN(Tinv,R,T);\n      fillFilteredImage(i,j,Nmatrix);\n    }\n  }\n  return filteredImage;\n}\n', '0', '16', '9');
INSERT INTO `case_study` VALUES ('2585', 'resize(BufferedImage,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '10', '33', '21', '-1000', '3', '0.2286', '0.1245', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public BufferedImage resize(BufferedImage img,int newW,int newH){\n  int w=img.getWidth();\n  int h=img.getHeight();\n  BufferedImage dimg=dimg=new BufferedImage(newW,newH,img.getType());\n  Graphics2D g=dimg.createGraphics();\n  g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,RenderingHints.VALUE_INTERPOLATION_BILINEAR);\n  g.drawImage(img,0,0,newW,newH,0,0,w,h,null);\n  g.dispose();\n  return dimg;\n}\n', '0', '7', '1');
INSERT INTO `case_study` VALUES ('2586', 'createT()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '9', '21', '6', '-1000', '3', '0.3148', '0.1505', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public double[][] createT(){\n  double[][] T=new double[N][N];\n  for (int i=0; i < N; i++) {\n    T[0][i]=roundFourDecimals(1.0 / Math.sqrt(N));\n  }\n  for (int i=1; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      T[i][j]=roundFourDecimals(Math.sqrt(2.0 / N) * Math.cos(((2.0 * j + 1) * i * Math.PI) / (2.0 * N)));\n    }\n  }\n  return T;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2587', 'createM(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '12', '51', '36', '-1000', '3', '0.1667', '0.0988', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public double[][] createM(int i,int j){\n  double[][] M=new double[N][N];\n  int xx=0;\n  int yy=0;\n  for (int x=i * N; x < i * N + N; x++) {\n    for (int y=j * N; y < j * N + N; y++) {\n      M[xx][yy]=new Color(originalImage.getRGB(x,y)).getRed() - 128;\n      yy++;\n    }\n    xx++;\n    yy=0;\n  }\n  return M;\n}\n', '0', '7', '3');
INSERT INTO `case_study` VALUES ('2591', 'multiply(double[][],double[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '10', '36', '27', '-1000', '3', '0.19', '0.0616', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public double[][] multiply(double[][] m1,double[][] m2){\n  int m1rows=m1.length;\n  int m1cols=m1[0].length;\n  int m2rows=m2.length;\n  int m2cols=m2[0].length;\n  if (m1cols != m2rows)   throw new IllegalArgumentException(\"matrices don\'t match: \" + m1cols + \" != \"+ m2rows);\n  double[][] result=new double[m1rows][m2cols];\n  for (int i=0; i < m1rows; i++)   for (int j=0; j < m2cols; j++)   for (int k=0; k < m1cols; k++)   result[i][j]+=m1[i][k] * m2[k][j];\n  return result;\n}\n', '0', '12', '5');
INSERT INTO `case_study` VALUES ('2593', 'createC(double[][],int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '7', '15', '9', '-1000', '3', '0.2449', '0.0976', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public int[][] createC(double[][] D,int[][] Q){\n  int[][] C=new int[N][N];\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      C[i][j]=(int)Math.round(D[i][j] / Q[i][j]);\n    }\n  }\n  return C;\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('2594', 'createR(int[][],int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '7', '15', '9', '-1000', '3', '0.2619', '0.1033', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public double[][] createR(int[][] Q,int[][] C){\n  double[][] R=new double[N][N];\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      R[i][j]=Q[i][j] * C[i][j];\n    }\n  }\n  return R;\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('2595', 'createN(double[][],double[][],double[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '8', '21', '14', '-1000', '3', '0.2', '0.0807', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public int[][] createN(double[][] Tinv,double[][] R,double[][] T){\n  int[][] Nmatrix=new int[N][N];\n  double[][] tmp=multiply(multiply(Tinv,R),T);\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      Nmatrix[i][j]=(int)(Math.round(tmp[i][j]) + 128);\n    }\n  }\n  return Nmatrix;\n}\n', '0', '7', '3');
INSERT INTO `case_study` VALUES ('2596', 'fillFilteredImage(int,int,int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '13', '68', '58', '-1000', '5', '0.1346', '0.0672', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public void fillFilteredImage(int i,int j,int[][] Nmatrix){\n  int xx=0;\n  int yy=0;\n  for (int x=i * N; x < i * N + N; x++) {\n    for (int y=j * N; y < j * N + N; y++) {\n      int alpha=new Color(originalImage.getRGB(x,y)).getAlpha();\n      int color=Nmatrix[xx][yy];\n      int rgb=ImageUtilities.colorToRGB(alpha,color,color,color);\n      yy++;\n      filteredImage.setRGB(x,y,rgb);\n    }\n    xx++;\n    yy=0;\n  }\n}\n', '1', '10', '3');
INSERT INTO `case_study` VALUES ('2597', 'tresholdDmatrix(double[][],double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2619', '0.0561', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void tresholdDmatrix(double[][] D,double treshold){\n  for (int i=0; i < N; i++) {\n    for (int j=0; j < N; j++) {\n      double coef=D[i][j];\n      if (Math.abs(coef) < treshold)       D[i][j]=0;\n    }\n  }\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2598', 'updateQ(int[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\DenoiseDCTFilter.java', 'neuroph', '10', '25', '5', '-1000', '2', '0.2625', '0.1621', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void updateQ(int[][] Q){\n  if (qualityLevel == 50)   return;\n  if (qualityLevel > 50) {\n    for (int i=0; i < N; i++) {\n      for (int j=0; j < N; j++) {\n        Q[i][j]=(int)Math.round(Q[i][j] * (100 - qualityLevel) * 1.0 / 50);\n      }\n    }\n  }\n  if (qualityLevel < 50) {\n    for (int i=0; i < N; i++) {\n      for (int j=0; j < N; j++) {\n        Q[i][j]=(int)Math.round(Q[i][j] * 50.0 / qualityLevel);\n      }\n    }\n  }\n}\n', '0', '5', '8');
INSERT INTO `case_study` VALUES ('2604', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\Dilation.java', 'neuroph', '17', '116', '96', '-1000', '4', '0.1255', '0.0421', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  width=originalImage.getWidth();\n  height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  kernel=createKernel();\n  int white=255;\n  int black=0;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int color=new Color(originalImage.getRGB(i,j)).getRed();\n      if (color == black) {\n        convolve(i,j);\n      }\n else {\n        int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n        int rgb=ImageUtilities.colorToRGB(alpha,white,white,white);\n        filteredImage.setRGB(i,j,rgb);\n      }\n    }\n  }\n  return filteredImage;\n}\n', '1', '8', '4');
INSERT INTO `case_study` VALUES ('2606', 'convolve(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\Dilation.java', 'neuroph', '9', '28', '20', '-1000', '3', '0.1818', '0.0507', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void convolve(int i,int j){\n  for (int x=i - 2; x <= i + 2; x++) {\n    for (int y=j - 2; y <= j + 2; y++) {\n      if (x >= 0 && y >= 0 && x < width && y < height) {\n        int black=0;\n        int alpha=new Color(originalImage.getRGB(x,y)).getAlpha();\n        int rgb=ImageUtilities.colorToRGB(alpha,black,black,black);\n        filteredImage.setRGB(x,y,rgb);\n      }\n    }\n  }\n}\n', '1', '7', '7');
INSERT INTO `case_study` VALUES ('2608', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\EdgeDetection.java', 'neuroph', '27', '310', '269', '-1000', '6', '0.0899', '0.0259', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  setAttributes(image);\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int[][] filter1={{-1,0,1},{-2,0,2},{-1,0,1}};\n  int[][] filter2={{1,2,1},{0,0,0},{-1,-2,-1}};\n  for (int y=1; y < height - 1; y++) {\n    for (int x=1; x < width - 1; x++) {\n      int[][] gray=new int[3][3];\n      for (int i=0; i < 3; i++) {\n        for (int j=0; j < 3; j++) {\n          gray[i][j]=(int)lum(new Color(originalImage.getRGB(x - 1 + i,y - 1 + j)));\n        }\n      }\n      int gray1=0, gray2=0;\n      for (int i=0; i < 3; i++) {\n        for (int j=0; j < 3; j++) {\n          gray1+=gray[i][j] * filter1[i][j];\n          gray2+=gray[i][j] * filter2[i][j];\n        }\n      }\n      int magnitude=255 - truncate((int)Math.sqrt(gray1 * gray1 + gray2 * gray2));\n      Color grayscale=new Color(magnitude,magnitude,magnitude);\n      filteredImage.setRGB(x,y,grayscale.getRGB());\n    }\n  }\n  return filteredImage;\n}\n', '0', '16', '7');
INSERT INTO `case_study` VALUES ('2611', 'lum(Color)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\EdgeDetection.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.375', '0.125', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Return the  luminance of a given color\n * @param color - color of one pixel in image. \n * @return - luminance of a color\n */\npublic double lum(Color color){\n  int r=color.getRed();\n  int g=color.getGreen();\n  int b=color.getBlue();\n  return .299 * r + .587 * g + .114 * b;\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('2613', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\EraseBlackBorderFilter.java', 'neuroph', '32', '387', '278', '-1000', '2', '0.0961', '0.0551', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int centerI=width / 2;\n  int centerJ=height / 2;\n  int lengthI=width / 4;\n  int lengthJ=height / 6;\n  int startI=centerI - lengthI / 2;\n  int goalI=centerI + lengthI / 2;\n  int startJ=centerJ - lengthJ / 2;\n  int goalJ=centerJ + lengthJ / 2;\n  boolean[][] visited;\n  visited=new boolean[width][height];\n  int color;\n  for (int i=startI; i < goalI; i++) {\n    for (int j=startJ; j < goalJ; j++) {\n      color=new Color(originalImage.getRGB(i,j)).getRed();\n      if (color == 0) {\n        if (!visited[i][j]) {\n          BFS(i,j,visited);\n        }\n      }\n    }\n  }\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      if (!visited[i][j]) {\n        int white=255;\n        color=ImageUtilities.colorToRGB(alpha,white,white,white);\n        filteredImage.setRGB(i,j,color);\n      }\n else {\n        int black=0;\n        color=ImageUtilities.colorToRGB(alpha,black,black,black);\n        filteredImage.setRGB(i,j,color);\n      }\n    }\n  }\n  return filteredImage;\n}\n', '1', '20', '8');
INSERT INTO `case_study` VALUES ('2614', 'BFS(int,int,boolean[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\EraseBlackBorderFilter.java', 'neuroph', '20', '133', '76', '-1000', '2', '0.1733', '0.0993', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void BFS(int startI,int startJ,boolean[][] visited){\n  LinkedList<String> queue=new LinkedList<String>();\n  String positions=startI + \" \" + startJ;\n  visited[startI][startJ]=true;\n  queue.addLast(positions);\n  while (!queue.isEmpty()) {\n    String pos=queue.removeFirst();\n    String[] posArray=pos.split(\" \");\n    int x=Integer.parseInt(posArray[0]);\n    int y=Integer.parseInt(posArray[1]);\n    visited[x][y]=true;\n    for (int i=x - 1; i <= x + 1; i++) {\n      for (int j=y - 1; j <= y + 1; j++) {\n        if (i >= 0 && j >= 0 && i < originalImage.getWidth() && j < originalImage.getHeight() && i != x && j != y) {\n          if (!visited[i][j]) {\n            int color=new Color(originalImage.getRGB(i,j)).getRed();\n            if (color == 0) {\n              visited[i][j]=true;\n              String tmpPos=i + \" \" + j;\n              queue.addLast(tmpPos);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n', '0', '13', '12');
INSERT INTO `case_study` VALUES ('2617', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GaussianBluring.java', 'neuroph', '16', '84', '48', '-1000', '3', '0.1424', '0.0689', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int oldWidth=image.getWidth();\n  int oldHeight=image.getHeight();\n  int width=image.getWidth() - 2 * radius;\n  int height=image.getHeight() - 2 * radius;\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  createKernel();\n  for (int i=radius; i < oldWidth - radius; i++) {\n    for (int j=radius; j < oldHeight - radius; j++) {\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      int newColor=getNewColor(i,j);\n      int rgb=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      int x=i - radius;\n      int y=j - radius;\n      filteredImage.setRGB(x,y,rgb);\n    }\n  }\n  return filteredImage;\n}\n', '1', '12', '3');
INSERT INTO `case_study` VALUES ('2618', 'createKernel()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GaussianBluring.java', 'neuroph', '12', '29', '0', '-1000', '1', '0.2179', '0.1592', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'protected void createKernel(){\n  int size=radius * 2 + 1;\n  int center=radius;\n  kernel=new double[size][size];\n  for (int i=0; i < kernel.length; i++) {\n    for (int j=0; j < kernel[0].length; j++) {\n      int distanceX=Math.abs(center - i);\n      int distanceY=Math.abs(center - j);\n      kernel[i][j]=gaussianFormula(distanceX,distanceY);\n    }\n  }\n  double noralizationValue=getNormalizationValue(kernel);\n  for (int i=0; i < kernel.length; i++) {\n    for (int j=0; j < kernel[0].length; j++) {\n      kernel[i][j]=kernel[i][j] * noralizationValue;\n    }\n  }\n}\n', '0', '11', '5');
INSERT INTO `case_study` VALUES ('2619', 'gaussianFormula(double,double)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GaussianBluring.java', 'neuroph', '8', '21', '14', '-1000', '3', '0.25', '0.1049', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public double gaussianFormula(double x,double y){\n  double one=1.0;\n  double value=one / (2 * Math.PI * sigma* sigma);\n  double exp=-(x * x + y * y) / (2 * sigma * sigma);\n  exp=Math.pow(Math.E,exp);\n  value=value * exp;\n  return value;\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('2627', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GaussianNoise.java', 'neuroph', '19', '140', '109', '-1000', '2', '0.11', '0.0475', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  double variance=sigma * sigma;\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  double a=0.0;\n  double b=0.0;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      while (a == 0.0)       a=Math.random();\n      b=Math.random();\n      double x=Math.sqrt(-2 * Math.log(a)) * Math.cos(2 * Math.PI * b);\n      double noise=mean + Math.sqrt(variance) * x;\n      int gray=new Color(originalImage.getRGB(i,j)).getRed();\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      double color=gray + noise;\n      if (color > 255)       color=255;\n      if (color < 0)       color=0;\n      int newColor=(int)Math.round(color);\n      int rgb=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      filteredImage.setRGB(i,j,rgb);\n    }\n  }\n  return filteredImage;\n}\n', '1', '15', '6');
INSERT INTO `case_study` VALUES ('2632', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GenericConvolution.java', 'neuroph', '16', '97', '74', '-1000', '4', '0.1287', '0.0454', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int radius=kernel.length / 2;\n  if (normalize) {\n    normalizeKernel();\n  }\n  for (int x=0; x < width; x++) {\n    for (int y=0; y < height; y++) {\n      double result=convolve(x,y,radius);\n      int gray=(int)Math.round(result);\n      int alpha=new Color(originalImage.getRGB(x,y)).getAlpha();\n      int rgb=ImageUtilities.colorToRGB(alpha,gray,gray,gray);\n      filteredImage.setRGB(x,y,rgb);\n    }\n  }\n  return filteredImage;\n}\n', '1', '10', '4');
INSERT INTO `case_study` VALUES ('2633', 'convolve(int,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GenericConvolution.java', 'neuroph', '13', '65', '52', '-1000', '4', '0.1469', '0.0649', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'protected double convolve(int x,int y,int radius){\n  double sum=0;\n  int kernelI=0;\n  for (int i=x - radius; i <= x + radius; i++) {\n    int kernelJ=0;\n    for (int j=y - radius; j <= y + radius; j++) {\n      if (i >= 0 && i < originalImage.getWidth() && j > 0 && j < originalImage.getHeight()) {\n        int color=new Color(originalImage.getRGB(i,j)).getRed();\n        sum=sum + color * kernel[kernelI][kernelJ];\n      }\n      kernelJ++;\n    }\n    kernelI++;\n  }\n  return sum;\n}\n', '0', '9', '7');
INSERT INTO `case_study` VALUES ('2634', 'normalizeKernel()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GenericConvolution.java', 'neuroph', '9', '19', '2', '-1000', '3', '0.3148', '0.161', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void normalizeKernel(){\n  int n=0;\n  for (int i=0; i < kernel.length; i++) {\n    for (int j=0; j < kernel.length; j++) {\n      n+=kernel[i][j];\n    }\n  }\n  for (int i=0; i < kernel.length; i++) {\n    for (int j=0; j < kernel.length; j++) {\n      kernel[i][j]=kernel[i][j] / n;\n    }\n  }\n}\n', '0', '5', '5');
INSERT INTO `case_study` VALUES ('2638', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GrayscaleFilter.java', 'neuroph', '21', '143', '76', '-1000', '3', '0.1577', '0.0769', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int alpha;\n  int red;\n  int green;\n  int blue;\n  int gray;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      red=new Color(originalImage.getRGB(i,j)).getRed();\n      green=new Color(originalImage.getRGB(i,j)).getGreen();\n      blue=new Color(originalImage.getRGB(i,j)).getBlue();\n      gray=(int)(0.21 * red + 0.71 * green + 0.07 * blue);\n      gray=ImageUtilities.colorToRGB(alpha,gray,gray,gray);\n      filteredImage.setRGB(i,j,gray);\n    }\n  }\n  return filteredImage;\n}\n', '1', '10', '3');
INSERT INTO `case_study` VALUES ('2640', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GuoHallThiningFilter.java', 'neuroph', '33', '427', '326', '-1000', '4', '0.0886', '0.052', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * @param image The input image should be binary\n * @return\n */\n@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  width=originalImage.getWidth();\n  height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  imageM=new int[width][height];\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int col=new Color(originalImage.getRGB(i,j)).getRed();\n      if (blackLetters) {\n        imageM[i][j]=1 - (col / 255);\n      }\n else {\n        imageM[i][j]=col / 255;\n      }\n    }\n  }\n  while (true) {\n    int[][] start=new int[width][height];\n    for (int i=0; i < width; i++) {\n      for (int j=0; j < height; j++) {\n        start[i][j]=imageM[i][j];\n      }\n    }\n    thiningGuoHallIteration(0);\n    thiningGuoHallIteration(1);\n    boolean same=true;\n    MainforLoop:     for (int i=0; i < width; i++) {\n      for (int j=0; j < height; j++) {\n        if (start[i][j] != imageM[i][j]) {\n          same=false;\n          break MainforLoop;\n        }\n      }\n    }\n    if (same) {\n      break;\n    }\n  }\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      int col;\n      if (blackLetters) {\n        col=255 - imageM[i][j] * 255;\n      }\n else {\n        col=imageM[i][j] * 255;\n      }\n      int rgb=ImageUtilities.colorToRGB(alpha,col,col,col);\n      filteredImage.setRGB(i,j,rgb);\n    }\n  }\n  return filteredImage;\n}\n', '1', '15', '14');
INSERT INTO `case_study` VALUES ('2642', 'thiningGuoHallIteration(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\GuoHallThiningFilter.java', 'neuroph', '25', '261', '222', '-1000', '3', '0.0991', '0.0355', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public void thiningGuoHallIteration(int iter){\n  int[][] marker=new int[width][height];\n  for (int i=1; i < width - 1; i++) {\n    for (int j=1; j < height - 1; j++) {\n      int p2=imageM[i - 1][j];\n      int p3=imageM[i - 1][j + 1];\n      int p4=imageM[i][j + 1];\n      int p5=imageM[i + 1][j + 1];\n      int p6=imageM[i + 1][j];\n      int p7=imageM[i + 1][j - 1];\n      int p8=imageM[i][j - 1];\n      int p9=imageM[i - 1][j - 1];\n      int C=(~p2 & (p3 | p4)) + (~p4 & (p5 | p6)) + (~p6 & (p7 | p8))+ (~p8 & (p9 | p2));\n      int N1=(p9 | p2) + (p3 | p4) + (p5 | p6)+ (p7 | p8);\n      int N2=(p2 | p3) + (p4 | p5) + (p6 | p7)+ (p8 | p9);\n      int N=N1 < N2 ? N1 : N2;\n      int m=iter == 0 ? ((p6 | p7 | ~p9) & p8) : ((p2 | p3 | ~p5) & p4);\n      if (C == 1 && (N >= 2 && N <= 3) & m == 0) {\n        marker[i][j]=1;\n      }\n    }\n  }\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int tmp=1 - marker[i][j];\n      if (imageM[i][j] == tmp && imageM[i][j] == 1) {\n        imageM[i][j]=1;\n      }\n else {\n        imageM[i][j]=0;\n      }\n    }\n  }\n}\n', '0', '20', '12');
INSERT INTO `case_study` VALUES ('2644', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\HistogramEqualizationFilter.java', 'neuroph', '21', '150', '90', '-1000', '2', '0.1402', '0.0661', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int[] histogram=imageHistogram(originalImage);\n  int[] histogramCumulative=new int[histogram.length];\n  histogramCumulative[0]=histogram[0];\n  for (int i=1; i < histogramCumulative.length; i++) {\n    histogramCumulative[i]=histogramCumulative[i - 1] + histogram[i];\n  }\n  int G=256;\n  int gray;\n  int alpha;\n  int newColor;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      gray=new Color(originalImage.getRGB(i,j)).getRed();\n      alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      newColor=(G - 1) * histogramCumulative[gray] / (width * height);\n      newColor=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      filteredImage.setRGB(i,j,newColor);\n    }\n  }\n  return filteredImage;\n}\n', '1', '12', '4');
INSERT INTO `case_study` VALUES ('2645', 'imageHistogram(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\HistogramEqualizationFilter.java', 'neuroph', '6', '12', '9', '-1000', '3', '0.2667', '0.0889', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public int[] imageHistogram(BufferedImage image){\n  int[] histogram=new int[256];\n  for (int i=0; i < histogram.length; i++)   histogram[i]=0;\n  for (int i=0; i < image.getWidth(); i++) {\n    for (int j=0; j < image.getHeight(); j++) {\n      int gray=new Color(image.getRGB(i,j)).getRed();\n      histogram[gray]++;\n    }\n  }\n  return histogram;\n}\n', '0', '6', '4');
INSERT INTO `case_study` VALUES ('2647', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\LetterSegmentationFilter.java', 'neuroph', '16', '89', '58', '-1000', '2', '0.1648', '0.1032', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  width=originalImage.getWidth();\n  height=originalImage.getHeight();\n  visited=new boolean[width][height];\n  int name=1;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int color=new Color(originalImage.getRGB(i,j)).getRed();\n      if (color == 255) {\n        visited[i][j]=true;\n      }\n else {\n        if (name > 3000) {\n          return originalImage;\n        }\n        BFS(i,j,name + \"\");\n        name++;\n      }\n    }\n  }\n  return originalImage;\n}\n', '0', '5', '5');
INSERT INTO `case_study` VALUES ('2648', 'BFS(int,int,String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\LetterSegmentationFilter.java', 'neuroph', '49', '1071', '966', '-1000', '6', '0.0606', '0.0334', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public void BFS(int startI,int startJ,String imageName){\n  LinkedList<String> queue=new LinkedList<String>();\n  int letterWidth=80;\n  int letterHeight=80;\n  int gapX=30;\n  int gapY=30;\n  BufferedImage letter=new BufferedImage(letterWidth,letterHeight,BufferedImage.TYPE_BYTE_BINARY);\n  int alpha=new Color(originalImage.getRGB(startI,startJ)).getAlpha();\n  int white=ImageUtilities.colorToRGB(alpha,255,255,255);\n  int black=ImageUtilities.colorToRGB(alpha,0,0,0);\n  for (int i=0; i < letterWidth; i++) {\n    for (int j=0; j < letterHeight; j++) {\n      letter.setRGB(i,j,white);\n    }\n  }\n  int count=0;\n  String positions=startI + \" \" + startJ;\n  visited[startI][startJ]=true;\n  queue.addLast(positions);\n  while (!queue.isEmpty()) {\n    String pos=queue.removeFirst();\n    String[] posArray=pos.split(\" \");\n    int x=Integer.parseInt(posArray[0]);\n    int y=Integer.parseInt(posArray[1]);\n    visited[x][y]=true;\n    int posX=startI - x + gapX;\n    int posY=startJ - y + gapY;\n    count++;\n    try {\n      letter.setRGB(posX,posY,black);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n      System.out.println(\"posX \" + posX);\n      System.out.println(\"posY \" + posY);\n      System.out.println(\"letterWidth \" + letter.getWidth());\n      System.out.println(\"letterHeight \" + letter.getHeight());\n      throw e;\n    }\n    for (int i=x - 1; i <= x + 1; i++) {\n      for (int j=y - 1; j <= y + 1; j++) {\n        if (i >= 0 && j >= 0 && i < originalImage.getWidth() && j < originalImage.getHeight()) {\n          if (!visited[i][j]) {\n            int color=new Color(originalImage.getRGB(i,j)).getRed();\n            if (color < 10) {\n              visited[i][j]=true;\n              String tmpPos=i + \" \" + j;\n              queue.addLast(tmpPos);\n            }\n          }\n        }\n      }\n    }\n  }\n  System.out.println(\"count = \" + count);\n  if (count < 3) {\n    return;\n  }\n  try {\n    saveToFile(letter,imageName);\n  }\n catch (  IOException ex) {\n    ex.printStackTrace();\n  }\n}\n', '1', '28', '15');
INSERT INTO `case_study` VALUES ('2651', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\LetterSeparationFilter.java', 'neuroph', '30', '337', '239', '-1000', '2', '0.1091', '0.0579', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * radi otsu da dobije spojena crna slova i ra\n * @param image\n * @return \n */\n@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  boolean[][] matrix=new boolean[width][height];\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int[] histogram=imageHistogram(originalImage);\n  int totalNumberOfpixels=height * width;\n  int threshold=threshold(histogram,totalNumberOfpixels);\n  int black=0;\n  int white=255;\n  int gray;\n  int alpha;\n  int newColor;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      gray=new Color(originalImage.getRGB(i,j)).getRed();\n      if (gray > threshold) {\n        matrix[i][j]=false;\n      }\n else {\n        matrix[i][j]=true;\n      }\n    }\n  }\n  int blackTreshold=letterThreshold(originalImage,matrix);\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      gray=new Color(originalImage.getRGB(i,j)).getRed();\n      alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      if (gray > blackTreshold) {\n        newColor=white;\n      }\n else {\n        newColor=black;\n      }\n      newColor=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      filteredImage.setRGB(i,j,newColor);\n    }\n  }\n  return filteredImage;\n}\n', '1', '17', '7');
INSERT INTO `case_study` VALUES ('2652', 'imageHistogram(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\LetterSeparationFilter.java', 'neuroph', '8', '20', '12', '-1000', '3', '0.25', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public int[] imageHistogram(BufferedImage image){\n  int[] histogram=new int[256];\n  for (int i=0; i < histogram.length; i++) {\n    histogram[i]=0;\n  }\n  for (int i=0; i < image.getWidth(); i++) {\n    for (int j=0; j < image.getHeight(); j++) {\n      int gray=new Color(image.getRGB(i,j)).getRed();\n      histogram[gray]++;\n    }\n  }\n  return histogram;\n}\n', '0', '6', '4');
INSERT INTO `case_study` VALUES ('2653', 'letterThreshold(BufferedImage,boolean[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\LetterSeparationFilter.java', 'neuroph', '12', '53', '40', '-1000', '4', '0.1771', '0.0987', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public int letterThreshold(BufferedImage original,boolean[][] matrix){\n  double sum=0;\n  int count=0;\n  for (int i=0; i < original.getWidth(); i++) {\n    for (int j=0; j < original.getHeight(); j++) {\n      if (matrix[i][j] == true) {\n        int gray=new Color(original.getRGB(i,j)).getRed();\n        sum+=gray;\n        count++;\n      }\n    }\n  }\n  if (count == 0) {\n    return 0;\n  }\n  return (int)Math.round((sum * 3) / (count * 2));\n}\n', '0', '7', '5');
INSERT INTO `case_study` VALUES ('2654', 'threshold(int[],int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\LetterSeparationFilter.java', 'neuroph', '23', '203', '153', '-1000', '3', '0.1304', '0.0712', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private int threshold(int[] histogram,int total){\n  float sum=0;\n  for (int i=0; i < 256; i++) {\n    sum+=i * histogram[i];\n  }\n  float sumB=0;\n  int wB=0;\n  int wF=0;\n  float varMax=0;\n  int threshold=0;\n  for (int i=0; i < 256; i++) {\n    wB+=histogram[i];\n    if (wB == 0) {\n      continue;\n    }\n    wF=total - wB;\n    if (wF == 0) {\n      break;\n    }\n    sumB+=(float)(i * histogram[i]);\n    float mB=sumB / wB;\n    float mF=(sum - sumB) / wF;\n    float varBetween=(float)wB * (float)wF * (mB - mF)* (mB - mF);\n    if (varBetween > varMax) {\n      varMax=varBetween;\n      threshold=i;\n    }\n  }\n  return threshold;\n}\n', '0', '13', '6');
INSERT INTO `case_study` VALUES ('2655', 'numberOfBlackPixels(boolean[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\LetterSeparationFilter.java', 'neuroph', '8', '22', '16', '-1000', '4', '0.25', '0.142', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public int numberOfBlackPixels(boolean[][] matrix){\n  int count=0;\n  for (int i=0; i < originalImage.getWidth(); i++) {\n    for (int j=0; j < originalImage.getHeight(); j++) {\n      if (matrix[i][j] == false) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('2657', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\MaskSegmentationFilter.java', 'neuroph', '23', '194', '135', '-1000', '3', '0.1259', '0.0584', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  OtsuBinarizeFilter obf=new OtsuBinarizeFilter();\n  BufferedImage tempImage=obf.processImage(originalImage);\n  int gray;\n  int alpha;\n  int discreteColor;\n  int newColor;\n  int white=255;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      gray=new Color(originalImage.getRGB(i,j)).getRed();\n      alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      discreteColor=new Color(tempImage.getRGB(i,j)).getRed();\n      if (discreteColor == white) {\n        newColor=gray;\n      }\n else {\n        newColor=white;\n      }\n      newColor=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      filteredImage.setRGB(i,j,newColor);\n    }\n  }\n  return filteredImage;\n}\n', '0.6666666666666666', '12', '4');
INSERT INTO `case_study` VALUES ('2660', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\MeanFilter.java', 'neuroph', '10', '27', '9', '-1000', '1', '0.225', '0.0964', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int color=findMean(i,j);\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      int rgb=ImageUtilities.colorToRGB(alpha,color,color,color);\n      filteredImage.setRGB(i,j,rgb);\n    }\n  }\n  return filteredImage;\n}\n', '1', '8', '3');
INSERT INTO `case_study` VALUES ('2661', 'findMean(int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\MeanFilter.java', 'neuroph', '11', '45', '35', '-1000', '4', '0.157', '0.0642', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public int findMean(int x,int y){\n  double sum=0;\n  int n=0;\n  for (int i=x - radius; i <= x + radius; i++) {\n    for (int j=y - radius; j <= y + radius; j++) {\n      if (i > 0 && i < originalImage.getWidth() && j > 0 && j < originalImage.getHeight()) {\n        int color=new Color(originalImage.getRGB(i,j)).getRed();\n        sum=sum + color;\n        n++;\n      }\n    }\n  }\n  return (int)Math.round(sum / n);\n}\n', '0', '7', '7');
INSERT INTO `case_study` VALUES ('2666', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\MedianFilter.java', 'neuroph', '16', '86', '52', '-1000', '2', '0.1652', '0.0701', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int[] arrayOfPixels;\n  int median;\n  int alpha;\n  int newColor;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      arrayOfPixels=getArrayOfPixels(i,j);\n      median=findMedian(arrayOfPixels);\n      alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      newColor=ImageUtilities.colorToRGB(alpha,median,median,median);\n      filteredImage.setRGB(i,j,newColor);\n    }\n  }\n  return filteredImage;\n}\n', '1', '9', '3');
INSERT INTO `case_study` VALUES ('2672', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\NormalizationFilter.java', 'neuroph', '25', '228', '156', '-1000', '3', '0.1136', '0.0566', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  width=originalImage.getWidth();\n  height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  imageMatrix=new int[width][height];\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      imageMatrix[i][j]=new Color(originalImage.getRGB(i,j)).getRed();\n    }\n  }\n  mean=calculateMean();\n  var=calculateVariance();\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      double normalizedPixel=0;\n      double squareError=0;\n      if (imageMatrix[i][j] > mean) {\n        squareError=(imageMatrix[i][j] - mean) * (imageMatrix[i][j] - mean);\n        normalizedPixel=(GOAL_MEAN + Math.sqrt(((GOAL_VARIANCE * squareError / var))));\n      }\n else {\n        squareError=(imageMatrix[i][j] - mean) * (imageMatrix[i][j] - mean);\n        normalizedPixel=(GOAL_MEAN - Math.sqrt(((GOAL_VARIANCE * squareError / var))));\n      }\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      int rgb=(int)-normalizedPixel;\n      int color=ImageUtilities.colorToRGB(alpha,rgb,rgb,rgb);\n      filteredImage.setRGB(i,j,color);\n    }\n  }\n  return filteredImage;\n}\n', '1', '10', '6');
INSERT INTO `case_study` VALUES ('2673', 'calculateVariance()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\NormalizationFilter.java', 'neuroph', '6', '8', '1', '-1000', '2', '0.3095', '0.1006', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '/** \n * @param x x coordinate of block\n * @param y y coordinate of block\n * @return\n */\npublic int calculateVariance(){\n  int var=0;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      var+=(imageMatrix[i][j] - mean) * (imageMatrix[i][j] - mean);\n    }\n  }\n  return (int)var / (height * width * 255);\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('2674', 'calculateMean()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\NormalizationFilter.java', 'neuroph', '7', '14', '7', '-1000', '3', '0.2857', '0.0825', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public int calculateMean(){\n  double mean=0;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      mean+=imageMatrix[i][j];\n    }\n  }\n  return (int)mean / (width * height);\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('2679', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRCropImage.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1515', '0.0491', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  width=image.getWidth();\n  height=image.getHeight();\n  originalImage=image;\n  filteredImage=new BufferedImage(newWidth,newHeight,image.getType());\n  int startH=createStartH();\n  int startW=createStartW();\n  int endH=createEndH();\n  int endW=createEndW();\n  fillImage(startH,startW,endH,endW);\n  return filteredImage;\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('2680', 'createStartH()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRCropImage.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createStartH(){\n  int color;\n  int black=0;\n  int startH=0;\n  loop:   for (int i=0; i < height; i++) {\n    for (int j=0; j < width; j++) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        startH=i;\n        break loop;\n      }\n    }\n  }\n  return startH;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2681', 'createStartW()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRCropImage.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createStartW(){\n  int color;\n  int black=0;\n  int startW=0;\n  loop:   for (int j=0; j < width; j++) {\n    for (int i=0; i < height; i++) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        startW=j;\n        break loop;\n      }\n    }\n  }\n  return startW;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2682', 'createEndH()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRCropImage.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createEndH(){\n  int color;\n  int black=0;\n  int endH=0;\n  loop:   for (int i=height - 1; i >= 0; i--) {\n    for (int j=width - 1; j >= 0; j--) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        endH=i;\n        break loop;\n      }\n    }\n  }\n  return endH;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2683', 'createEndW()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRCropImage.java', 'neuroph', '11', '44', '33', '-1000', '3', '0.1717', '0.0778', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int createEndW(){\n  int color;\n  int black=0;\n  int endW=0;\n  loop:   for (int j=width - 1; j >= 0; j--) {\n    for (int i=height - 1; i >= 0; i--) {\n      color=new Color(originalImage.getRGB(j,i)).getRed();\n      if (color == black) {\n        endW=j;\n        break loop;\n      }\n    }\n  }\n  return endW;\n}\n', '0', '5', '4');
INSERT INTO `case_study` VALUES ('2685', 'OCRSeparationFilter()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRSeparationFilter.java', 'neuroph', '7', '21', '21', '-1000', '7', '0.1429', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public OCRSeparationFilter(){\n  letterWidth=0;\n  letterHeight=0;\n  cropHeight=0;\n  cropWidth=0;\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('2686', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRSeparationFilter.java', 'neuroph', '19', '135', '99', '-1000', '4', '0.1263', '0.0606', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  width=originalImage.getWidth();\n  height=originalImage.getHeight();\n  prepare();\n  visited=new boolean[height][width];\n  int color;\n  int white=255;\n  for (int line=0; line < linePositions.length; line++) {\n    for (int k=-1; k <= 1; k++) {\n      int i=linePositions[line] + k;\n      if (i == -1 || i == height)       continue;\n      ;\n      for (int j=0; j < width; j++) {\n        color=new Color(originalImage.getRGB(j,i)).getRed();\n        if (color == white) {\n          visited[i][j]=true;\n        }\n else {\n          BFStraverseAndSave(i,j);\n        }\n      }\n    }\n  }\n  return originalImage;\n}\n', '0', '7', '7');
INSERT INTO `case_study` VALUES ('2688', 'saveToFile(BufferedImage,String)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRSeparationFilter.java', 'neuroph', '11', '46', '37', '-1000', '4', '0.1932', '0.0738', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void saveToFile(BufferedImage img,String letterName){\n  File outputfile=new File(location + letterName + \".png\");\n  BufferedImage crop=img;\n  if (cropHeight != 0 || cropWidth != 0) {\n    OCRCropImage ci=new OCRCropImage();\n    ci.setDimension(cropWidth,cropHeight);\n    crop=ci.processImage(img);\n  }\n  try {\n    ImageIO.write(crop,\"png\",outputfile);\n  }\n catch (  IOException ex) {\n    ex.printStackTrace();\n  }\n}\n', '0.3333333333333333', '6', '4');
INSERT INTO `case_study` VALUES ('2689', 'prepare()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRSeparationFilter.java', 'neuroph', '13', '60', '42', '-1000', '3', '0.1923', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * pretopstavka da s ekoriste samo slova, mala i velika\n * 26 mali i 26 velikih, zato je counts[52]\n */\nprivate void prepare(){\n  counts=new int[52];\n  for (int i=0; i < counts.length; i++) {\n    counts[i]=1;\n  }\n  String pom=\"\";\n  for (int i=0; i < text.length(); i++) {\n    if (Character.isLetter(text.charAt(i))) {\n      pom+=text.charAt(i);\n    }\n  }\n  text=pom;\n  if (linePositions == null) {\n    linePositions=new int[height];\n    for (int i=0; i < linePositions.length; i++) {\n      linePositions[i]=i;\n    }\n  }\n}\n', '0', '4', '6');
INSERT INTO `case_study` VALUES ('2690', 'createName()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OCRSeparationFilter.java', 'neuroph', '16', '93', '66', '-1000', '4', '0.1813', '0.0746', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * trenutno radi samo sa slovima, malim i velikim\n * promeniti da prepoznaje i druge karaktere\n * @return naziv slova, npr A ili c\n */\nprivate String createName(){\n  int offsetBIG=65;\n  int offsetSMALL=97;\n  int offsetARRAY=26;\n  char c=text.charAt(seqNum);\n  int key=c;\n  int number;\n  if (key < 95) {\n    number=counts[key - offsetBIG];\n    counts[key - offsetBIG]++;\n  }\n else {\n    number=counts[key - offsetSMALL + offsetARRAY];\n    counts[key - offsetSMALL + offsetARRAY]++;\n  }\n  String name=c + \"_\" + number;\n  return name;\n}\n', '0', '7', '2');
INSERT INTO `case_study` VALUES ('2695', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OtsuBinarizeFilter.java', 'neuroph', '21', '151', '92', '-1000', '2', '0.1402', '0.0641', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=originalImage.getWidth();\n  int height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  int[] histogram=imageHistogram(originalImage);\n  int totalNumberOfpixels=height * width;\n  int treshold=treshold(histogram,totalNumberOfpixels);\n  int black=0;\n  int white=255;\n  int alpha;\n  int gray;\n  int newColor;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      gray=new Color(originalImage.getRGB(i,j)).getRed();\n      alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      if (gray > treshold)       newColor=white;\n else       newColor=black;\n      newColor=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      filteredImage.setRGB(i,j,newColor);\n    }\n  }\n  return filteredImage;\n}\n', '1', '13', '4');
INSERT INTO `case_study` VALUES ('2696', 'imageHistogram(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OtsuBinarizeFilter.java', 'neuroph', '6', '12', '9', '-1000', '3', '0.2667', '0.0889', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public int[] imageHistogram(BufferedImage image){\n  int[] histogram=new int[256];\n  for (int i=0; i < histogram.length; i++)   histogram[i]=0;\n  for (int i=0; i < image.getWidth(); i++) {\n    for (int j=0; j < image.getHeight(); j++) {\n      int gray=new Color(image.getRGB(i,j)).getRed();\n      histogram[gray]++;\n    }\n  }\n  return histogram;\n}\n', '0', '6', '4');
INSERT INTO `case_study` VALUES ('2697', 'treshold(int[],int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\OtsuBinarizeFilter.java', 'neuroph', '22', '182', '133', '-1000', '3', '0.1329', '0.0765', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private int treshold(int[] histogram,int total){\n  float sum=0;\n  for (int i=0; i < 256; i++)   sum+=i * histogram[i];\n  float sumB=0;\n  int wB=0;\n  int wF=0;\n  float varMax=0;\n  int threshold=0;\n  for (int i=0; i < 256; i++) {\n    wB+=histogram[i];\n    if (wB == 0)     continue;\n    wF=total - wB;\n    if (wF == 0)     break;\n    sumB+=(float)(i * histogram[i]);\n    float mB=sumB / wB;\n    float mF=(sum - sumB) / wF;\n    float varBetween=(float)wB * (float)wF * (mB - mF)* (mB - mF);\n    if (varBetween > varMax) {\n      varMax=varBetween;\n      threshold=i;\n    }\n  }\n  return threshold;\n}\n', '0', '13', '6');
INSERT INTO `case_study` VALUES ('2699', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\SobelEdgeDetection.java', 'neuroph', '25', '245', '190', '-1000', '3', '0.1073', '0.0446', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  int width=image.getWidth();\n  int height=image.getHeight();\n  filteredImage=new BufferedImage(width,height,image.getType());\n  treshold=0.1;\n  generateSobelOperators();\n  double[][] Gx=new double[width][height];\n  double[][] Gy=new double[width][height];\n  double[][] G=new double[width][height];\n  double max=0;\n  for (int i=1; i < width - 1; i++) {\n    for (int j=1; j < height - 1; j++) {\n      Gx[i][j]=calculateGradient(i,j,sobelX);\n      Gy[i][j]=calculateGradient(i,j,sobelY);\n      G[i][j]=Math.abs(Gx[i][j]) + Math.abs(Gy[i][j]);\n      if (G[i][j] > max)       max=G[i][j];\n    }\n  }\n  treshold=treshold * max;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int newColor;\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      if (G[i][j] > treshold)       newColor=0;\n else       newColor=255;\n      int rgb=ImageUtilities.colorToRGB(alpha,newColor,newColor,newColor);\n      filteredImage.setRGB(i,j,rgb);\n    }\n  }\n  return filteredImage;\n}\n', '1', '14', '7');
INSERT INTO `case_study` VALUES ('2700', 'generateSobelOperators()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\SobelEdgeDetection.java', 'neuroph', '16', '65', '10', '-1000', '1', '0.3', '0.2597', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'protected void generateSobelOperators(){\n  sobelX=new double[3][3];\n  sobelX[0][0]=-0.25;\n  sobelX[0][1]=-0.5;\n  sobelX[0][2]=-0.25;\n  sobelX[1][0]=0;\n  sobelX[1][1]=0;\n  sobelX[1][2]=0;\n  sobelX[2][0]=0.25;\n  sobelX[2][1]=0.5;\n  sobelX[2][2]=0.25;\n  sobelY=new double[3][3];\n  sobelY[0][0]=-0.25;\n  sobelY[0][1]=0;\n  sobelY[0][2]=0.25;\n  sobelY[1][0]=-0.5;\n  sobelY[1][1]=0;\n  sobelY[1][2]=0.5;\n  sobelY[2][0]=-0.25;\n  sobelY[2][1]=0;\n  sobelY[2][2]=0.25;\n  double one=1;\n  double oneThird=one / 3;\n  sobelX[0][0]=-oneThird;\n  sobelX[0][1]=-oneThird;\n  sobelX[0][2]=-oneThird;\n  sobelX[1][0]=0;\n  sobelX[1][1]=0;\n  sobelX[1][2]=0;\n  sobelX[2][0]=oneThird;\n  sobelX[2][1]=oneThird;\n  sobelX[2][2]=oneThird;\n  sobelY[0][0]=-oneThird;\n  sobelY[0][1]=0;\n  sobelY[0][2]=oneThird;\n  sobelY[1][0]=-oneThird;\n  sobelY[1][1]=0;\n  sobelY[1][2]=oneThird;\n  sobelY[2][0]=-oneThird;\n  sobelY[2][1]=0;\n  sobelY[2][2]=oneThird;\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('2701', 'calculateGradient(int,int,double[][])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\SobelEdgeDetection.java', 'neuroph', '12', '56', '46', '-1000', '5', '0.1417', '0.0672', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'protected double calculateGradient(int i,int j,double[][] sobelOperator){\n  double sum=0;\n  int posX=0;\n  for (int x=i - 1; x <= i + 1; x++) {\n    int posY=0;\n    for (int y=j - 1; y <= j + 1; y++) {\n      double gray=new Color(originalImage.getRGB(x,y)).getRed();\n      sum=sum + gray * sobelOperator[posX][posY];\n      posY++;\n    }\n    posX++;\n  }\n  return sum;\n}\n', '0', '9', '3');
INSERT INTO `case_study` VALUES ('2710', 'processImage(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\ZhangSuenThinFilter.java', 'neuroph', '33', '427', '326', '-1000', '4', '0.0886', '0.052', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '/** \n * @param image The input image should be binary\n * @return\n */\n@Override public BufferedImage processImage(BufferedImage image){\n  originalImage=image;\n  width=originalImage.getWidth();\n  height=originalImage.getHeight();\n  filteredImage=new BufferedImage(width,height,originalImage.getType());\n  imageM=new int[width][height];\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int col=new Color(originalImage.getRGB(i,j)).getRed();\n      if (blackLetters) {\n        imageM[i][j]=1 - (col / 255);\n      }\n else {\n        imageM[i][j]=col / 255;\n      }\n    }\n  }\n  while (true) {\n    int[][] start=new int[width][height];\n    for (int i=0; i < width; i++) {\n      for (int j=0; j < height; j++) {\n        start[i][j]=imageM[i][j];\n      }\n    }\n    thiningIteration(0);\n    thiningIteration(1);\n    boolean same=true;\n    MainforLoop:     for (int i=0; i < width; i++) {\n      for (int j=0; j < height; j++) {\n        if (start[i][j] != imageM[i][j]) {\n          same=false;\n          break MainforLoop;\n        }\n      }\n    }\n    if (same) {\n      break;\n    }\n  }\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int alpha=new Color(originalImage.getRGB(i,j)).getAlpha();\n      int col;\n      if (blackLetters) {\n        col=255 - imageM[i][j] * 255;\n      }\n else {\n        col=imageM[i][j] * 255;\n      }\n      int rgb=ImageUtilities.colorToRGB(alpha,col,col,col);\n      filteredImage.setRGB(i,j,rgb);\n    }\n  }\n  return filteredImage;\n}\n', '1', '15', '14');
INSERT INTO `case_study` VALUES ('2711', 'thiningIteration(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\imgrec\\filter\\impl\\ZhangSuenThinFilter.java', 'neuroph', '49', '1096', '1016', '-1000', '10', '0.0565', '0.0277', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public void thiningIteration(int iter){\n  int[][] marker=new int[width][height];\n  for (int i=1; i < width - 1; i++) {\n    for (int j=1; j < height - 1; j++) {\n      int p2=imageM[i - 1][j];\n      int p3=imageM[i - 1][j + 1];\n      int p4=imageM[i][j + 1];\n      int p5=imageM[i + 1][j + 1];\n      int p6=imageM[i + 1][j];\n      int p7=imageM[i + 1][j - 1];\n      int p8=imageM[i][j - 1];\n      int p9=imageM[i - 1][j - 1];\n      int c1=0;\n      int c2=0;\n      int c3=0;\n      int c4=0;\n      int c5=0;\n      int c6=0;\n      int c7=0;\n      int c8=0;\n      if (p2 == 0 && p3 == 1) {\n        c1=1;\n      }\n      if (p3 == 0 && p4 == 1) {\n        c2=1;\n      }\n      if (p4 == 0 && p5 == 1) {\n        c3=1;\n      }\n      if (p5 == 0 && p6 == 1) {\n        c4=1;\n      }\n      if (p6 == 0 && p7 == 1) {\n        c5=1;\n      }\n      if (p7 == 0 && p8 == 1) {\n        c6=1;\n      }\n      if (p8 == 0 && p9 == 1) {\n        c7=1;\n      }\n      if (p9 == 0 && p2 == 1) {\n        c8=1;\n      }\n      int A=c1 + c2 + c3+ c4+ c5+ c6+ c7+ c8;\n      int B=p2 + p3 + p4+ p5+ p6+ p7+ p8+ p9;\n      int m1=iter == 0 ? (p2 * p4 * p6) : (p2 * p4 * p8);\n      int m2=iter == 0 ? (p4 * p6 * p8) : (p2 * p6 * p8);\n      if (A == 1 && (B >= 2 && B <= 6) && m1 == 0 && m2 == 0) {\n        marker[i][j]=1;\n      }\n    }\n  }\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      int tmp=1 - marker[i][j];\n      if (imageM[i][j] == tmp && imageM[i][j] == 1) {\n        imageM[i][j]=1;\n      }\n else {\n        imageM[i][j]=0;\n      }\n    }\n  }\n}\n', '0', '27', '30');
INSERT INTO `case_study` VALUES ('2715', 'calculate()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\layer\\CompetitiveLayer.java', 'neuroph', '19', '138', '105', '-1000', '3', '0.1474', '0.0931', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Performs calculaton for all neurons in this layer\n */\n@Override public void calculate(){\n  boolean hasWinner=false;\n  int iterationsCount=0;\n  while (!hasWinner) {\n    int fireingNeurons=0;\n    for (    Neuron neuron : this.getNeurons()) {\n      neuron.calculate();\n      if (neuron.getOutput() > 0)       fireingNeurons+=1;\n    }\n    if (iterationsCount > this.maxIterations)     break;\n    if (fireingNeurons == 1)     hasWinner=true;\n    iterationsCount++;\n  }\n  if (hasWinner) {\n    double maxOutput=Double.MIN_VALUE;\n    for (    Neuron neuron : this.getNeurons()) {\n      CompetitiveNeuron cNeuron=(CompetitiveNeuron)neuron;\n      cNeuron.setIsCompeting(false);\n      if (cNeuron.getOutput() > maxOutput) {\n        maxOutput=cNeuron.getOutput();\n        this.winner=cNeuron;\n      }\n    }\n  }\n}\n', '0.75', '9', '9');
INSERT INTO `case_study` VALUES ('2719', 'ConvolutionalLayer(FeatureMapsLayer,Dimension2D,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\layer\\ConvolutionalLayer.java', 'neuroph', '7', '13', '5', '-1000', '3', '0.254', '0.0905', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates convolutional layer with specified kernel, appropriate map\n * dimensions in regard to previous layer (fromLayer param) and specified\n * number of feature maps with given neuron properties.\n * @param fromLayer previous layer, which will be connected to this layer\n * @param kernel kernel for all feature maps\n * @param numberOfMaps number of feature maps to create in this layer\n * @param neuronProp settings for neurons in feature maps\n */\npublic ConvolutionalLayer(FeatureMapsLayer fromLayer,Dimension2D kernelDimension,int numberOfMaps,NeuronProperties neuronProp){\n  Dimension2D fromDimension=fromLayer.getMapDimensions();\n  int mapWidth=fromDimension.getWidth() - kernelDimension.getWidth() + 1;\n  int mapHeight=fromDimension.getHeight() - kernelDimension.getHeight() + 1;\n  this.mapDimensions=new Dimension2D(mapWidth,mapHeight);\n  createFeatureMaps(numberOfMaps,this.mapDimensions,kernelDimension,neuronProp);\n}\n', '0.4', '9', '1');
INSERT INTO `case_study` VALUES ('2722', 'connectMaps(FeatureMapLayer,FeatureMapLayer)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\layer\\ConvolutionalLayer.java', 'neuroph', '25', '263', '226', '-1000', '11', '0.1067', '0.0402', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '/** \n * Creates connections with shared weights between two feature maps Assumes\n * that toMap is from Convolutional layer.\n * <p/>\n * Kernel is used as a sliding window, and kernel positions overlap. Kernel\n * is shifting right by one position at a time. Neurons at the same kernel\n * position share the same weights\n * @param fromMap source feature map\n * @param toMap destination feature map\n */\n@Override public void connectMaps(FeatureMapLayer fromMap,FeatureMapLayer toMap){\n  Kernel kernel=toMap.getKernel();\n  kernel.initWeights(-0.15,0.15);\n  BiasNeuron biasNeuron=new BiasNeuron();\n  fromMap.addNeuron(biasNeuron);\n  for (int y=0; y < toMap.getHeight(); y++) {\n    for (int x=0; x < toMap.getWidth(); x++) {\n      Neuron toNeuron=toMap.getNeuronAt(x,y);\n      for (int ky=0; ky < kernel.getHeight(); ky++) {\n        for (int kx=0; kx < kernel.getWidth(); kx++) {\n          int fromX=x + kx;\n          int fromY=y + ky;\n          Weight[][] concreteKernel=kernel.getWeights();\n          Neuron fromNeuron=fromMap.getNeuronAt(fromX,fromY);\n          ConnectionFactory.createConnection(fromNeuron,toNeuron,concreteKernel[kx][ky]);\n          ConnectionFactory.createConnection(biasNeuron,toNeuron);\n        }\n      }\n    }\n  }\n}\n', '0.45454545454545453', '13', '5');
INSERT INTO `case_study` VALUES ('2724', 'FeatureMapLayer(Dimension2D,NeuronProperties)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\layer\\FeatureMapLayer.java', 'neuroph', '6', '13', '11', '-1000', '4', '0.2222', '0.0476', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates 2D layer with specified dimensions, filled with neurons with\n * specified properties\n * @param dimensions       layer dimensions\n * @param neuronProperties neuron properties\n */\npublic FeatureMapLayer(Dimension2D dimensions,NeuronProperties neuronProperties,Dimension2D kernelDimension){\n  this(dimensions,kernelDimension);\n  for (int i=0; i < dimensions.getHeight() * dimensions.getWidth(); i++) {\n    Neuron neuron=NeuronFactory.createNeuron(neuronProperties);\n    addNeuron(neuron);\n  }\n}\n', '0.75', '5', '2');
INSERT INTO `case_study` VALUES ('2746', 'InputLayer(int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\layer\\InputLayer.java', 'neuroph', '6', '13', '11', '-1000', '4', '0.2222', '0.0417', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates a new instance of InputLayer with specified number of input neurons\n * @param neuronsCount input neurons count for this layer\n */\npublic InputLayer(int neuronsCount){\n  NeuronProperties inputNeuronProperties=new NeuronProperties(InputNeuron.class,Linear.class);\n  for (int i=0; i < neuronsCount; i++) {\n    Neuron neuron=NeuronFactory.createNeuron(inputNeuronProperties);\n    this.addNeuron(neuron);\n  }\n}\n', '1', '4', '2');
INSERT INTO `case_study` VALUES ('2749', 'PoolingLayer(FeatureMapsLayer,Dimension2D)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\layer\\PoolingLayer.java', 'neuroph', '9', '25', '14', '-1000', '3', '0.2121', '0.0736', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '/** \n * Creates pooling layer with specified kernel, appropriate map\n * dimensions in regard to previous layer (fromLayer param) and specified\n * number of feature maps with given neuron properties.\n * @param fromLayer    previous layer, which will be connected to this layer\n * @param kernel       kernel for all feature maps\n * @param numberOfMaps number of feature maps to create in this layer\n * @param neuronProp   settings for neurons in feature maps\n */\npublic PoolingLayer(FeatureMapsLayer fromLayer,Dimension2D kernelDim,int numberOfMaps,NeuronProperties neuronProp){\n  this.kernel=kernel;\n  Dimension2D fromDimension=fromLayer.getMapDimensions();\n  int mapWidth=fromDimension.getWidth() / kernel.getWidth();\n  int mapHeight=fromDimension.getHeight() / kernel.getHeight();\n  this.mapDimensions=new Dimension2D(mapWidth,mapHeight);\n  createFeatureMaps(numberOfMaps,mapDimensions,kernelDim,neuronProp);\n}\n', '0.42857142857142855', '9', '1');
INSERT INTO `case_study` VALUES ('2751', 'connectMaps(FeatureMapLayer,FeatureMapLayer)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\layer\\PoolingLayer.java', 'neuroph', '14', '64', '37', '-1000', '3', '0.1667', '0.0629', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Creates connections with shared weights between two feature maps\n * Assumes that toMap is from Pooling layer.\n * <p/>\n * In this implementation, there is no overlapping between kernel positions.\n * @param fromMap source feature map\n * @param toMap   destination feature map\n */\n@Override public void connectMaps(FeatureMapLayer fromMap,FeatureMapLayer toMap){\n  int kernelWidth=kernel.getWidth();\n  int kernelHeight=kernel.getHeight();\n  Weight weight=new Weight(1);\n  for (int x=0; x < fromMap.getWidth() - kernelWidth + 1; x+=kernelWidth) {\n    for (int y=0; y < fromMap.getHeight() - kernelHeight + 1; y+=kernelHeight) {\n      Neuron toNeuron=toMap.getNeuronAt(x / kernelWidth,y / kernelHeight);\n      for (int dy=0; dy < kernelHeight; dy++) {\n        for (int dx=0; dx < kernelWidth; dx++) {\n          int fromX=x + dx;\n          int fromY=y + dy;\n          Neuron fromNeuron=fromMap.getNeuronAt(fromX,fromY);\n          ConnectionFactory.createConnection(fromNeuron,toNeuron,weight);\n        }\n      }\n    }\n  }\n}\n', '0.5714285714285714', '13', '5');
INSERT INTO `case_study` VALUES ('2758', 'calculate()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\neuron\\CompetitiveNeuron.java', 'neuroph', '8', '23', '18', '-1000', '4', '0.2125', '0.0901', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '@Override public void calculate(){\n  if (this.isCompeting) {\n    this.totalInput=this.inputFunction.getOutput(this.connectionsFromThisLayer);\n  }\n else {\n    this.totalInput=this.inputFunction.getOutput(this.connectionsFromOtherLayers);\n    this.isCompeting=true;\n  }\n  this.output=this.transferFunction.getOutput(this.totalInput);\n  outputHistory.add(0,new Double(this.output));\n}\n', '1', '12', '2');
INSERT INTO `case_study` VALUES ('2759', 'addInputConnection(Connection)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\neuron\\CompetitiveNeuron.java', 'neuroph', '8', '22', '16', '-1000', '5', '0.2188', '0.1136', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Adds input connection for this competitive neuron\n * @param connection input connection\n */\n@Override public void addInputConnection(Connection connection){\n  super.addInputConnection(connection);\n  if (connection.getFromNeuron().getParentLayer() == this.getParentLayer()) {\n    connectionsFromThisLayer.add(connection);\n  }\n else {\n    connectionsFromOtherLayers.add(connection);\n  }\n}\n', '1', '1', '2');
INSERT INTO `case_study` VALUES ('2776', 'calculate()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\comp\\neuron\\InputOutputNeuron.java', 'neuroph', '6', '9', '3', '-1000', '2', '0.2407', '0.1274', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '/** \n * Calculates neuron output\n */\n@Override public void calculate(){\n  if (!externalInputSet) {\n    if (this.hasInputConnections())     totalInput=inputFunction.getOutput(this.inputConnections);\n  }\n  this.output=transferFunction.getOutput(this.totalInput + bias);\n  if (externalInputSet) {\n    externalInputSet=false;\n    totalInput=0;\n  }\n}\n', '1', '3', '4');
INSERT INTO `case_study` VALUES ('2787', 'equals(Object)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\kmeans\\Cluster.java', 'neuroph', '9', '27', '18', '-1000', '3', '0.2407', '0.1071', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Returns true if two clusters have same centroid\n * @param obj\n * @return \n */\n@Override public boolean equals(Object obj){\n  if (obj == null) {\n    return false;\n  }\n  if (getClass() != obj.getClass()) {\n    return false;\n  }\n  final Cluster other=(Cluster)obj;\n  double[] otherValues=other.getCentroid().getValues();\n  double[] values=other.getCentroid().getValues();\n  for (int i=0; i < centroid.size(); i++) {\n    if (otherValues[i] != values[i])     return false;\n  }\n  return true;\n}\n', '0.5', '5', '5');
INSERT INTO `case_study` VALUES ('2788', 'hashCode()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\kmeans\\Cluster.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.3333', '0.2024', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@Override public int hashCode(){\n  int hash=7;\n  hash=97 * hash + Objects.hashCode(this.centroid);\n  hash=97 * hash + Objects.hashCode(this.vectors);\n  return hash;\n}\n', '0', '3', '1');
INSERT INTO `case_study` VALUES ('2791', 'KMeansClustering(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\kmeans\\KMeansClustering.java', 'neuroph', '10', '33', '21', '-1000', '3', '0.2286', '0.1076', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public KMeansClustering(DataSet dataSet,int numberOfClusters){\n  this.dataSet=dataSet;\n  this.numberOfClusters=numberOfClusters;\n  this.dataVectors=new KVector[dataSet.size()];\n  int i=0;\n  for (  DataSetRow row : dataSet.getRows()) {\n    KVector vector=new KVector(row.getInput());\n    this.dataVectors[i]=vector;\n    i++;\n  }\n}\n', '0.75', '9', '2');
INSERT INTO `case_study` VALUES ('2795', 'doClustering()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\kmeans\\KMeansClustering.java', 'neuroph', '14', '75', '59', '-1000', '5', '0.2143', '0.1364', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void doClustering(){\n  if (numberOfClusters <= 0) {\n    throw new RuntimeException(\"Error: Number of clusters must be greater then zero!\");\n  }\n  initClusters();\n  for (  KVector vector : dataVectors) {\n    Cluster nearestCluster=getNearestCluster(vector);\n    nearestCluster.assignVector(vector);\n  }\n  boolean clustersChanged;\n  do {\n    clustersChanged=false;\n    recalculateCentroids();\n    for (    KVector vector : dataVectors) {\n      Cluster nearestCluster=getNearestCluster(vector);\n      if (!vector.getCluster().equals(nearestCluster)) {\n        nearestCluster.assignVector(vector);\n        clustersChanged=true;\n      }\n    }\n  }\n while (clustersChanged);\n}\n', '0.6666666666666666', '5', '6');
INSERT INTO `case_study` VALUES ('2813', 'toString()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\nnet\\learning\\kmeans\\KVector.java', 'neuroph', '7', '11', '1', '-1000', '3', '0.3333', '0.3667', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public String toString(){\n  StringBuilder sb=new StringBuilder();\n  sb.append(\"KMeansVector{\");\n  for (int i=0; i < values.length; i++)   sb.append(\"[\" + i + \"]=\"+ values[i]+ \",\");\n  sb.append(\'}\');\n  return sb.toString();\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('2819', 'heightHistogram(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\histogram\\Histogram.java', 'neuroph', '13', '62', '46', '-1000', '3', '0.1795', '0.0719', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * @param image binarized image, letters are black, background is white\n * @return array which length is height of image, every element of array\n * represent count of black pixels in that row.\n */\npublic static int[] heightHistogram(BufferedImage image){\n  int height=image.getHeight();\n  int width=image.getWidth();\n  int[] histogram=new int[height];\n  int black=0;\n  int color;\n  for (int i=0; i < height; i++) {\n    for (int j=0; j < width; j++) {\n      color=new Color(image.getRGB(j,i)).getRed();\n      if (color == black) {\n        histogram[i]++;\n      }\n    }\n  }\n  return histogram;\n}\n', '0', '8', '4');
INSERT INTO `case_study` VALUES ('2820', 'widthHistogram(BufferedImage)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\histogram\\Histogram.java', 'neuroph', '13', '62', '46', '-1000', '3', '0.1795', '0.0719', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * @param image binarized image, letters are black, background is white\n * @return array which length is width of image, every element of array\n * represent count of black pixels in that column of pixels.\n */\npublic static int[] widthHistogram(BufferedImage image){\n  int height=image.getHeight();\n  int width=image.getWidth();\n  int[] histogram=new int[width];\n  int black=0;\n  int color;\n  for (int i=0; i < width; i++) {\n    for (int j=0; j < height; j++) {\n      color=new Color(image.getRGB(i,j)).getRed();\n      if (color == black) {\n        histogram[i]++;\n      }\n    }\n  }\n  return histogram;\n}\n', '0', '8', '4');
INSERT INTO `case_study` VALUES ('2821', 'gradient(int[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\histogram\\Histogram.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.3889', '0.2381', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '/** \n * @param histogram histogram calculated by method\n * <b>heightHistogram(BufferedImage)</b> or \n * <b>widthHistogram(BufferedImage)</b>\n * @return array that represents gradient Each element in array is\n * calculated in the following way:<br/>\n * gradient[i] = histogram[i] - histogram[i-1]\n */\npublic static int[] gradient(int[] histogram){\n  int[] gradient=new int[histogram.length];\n  for (int i=1; i < gradient.length; i++) {\n    gradient[i]=histogram[i] - histogram[i - 1];\n  }\n  return gradient;\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('2822', 'widthRowHistogram(BufferedImage,int,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\histogram\\OCRHistogram.java', 'neuroph', '14', '73', '55', '-1000', '3', '0.1558', '0.0658', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Calculate the width histogram for single row. <br/>\n * Make the rectangle with: <br/>\n * width = width of the image<br/>\n * height = predicted height of letter<br/>\n * It scans this rectangle by width, start from left to right and finds all black\n * pixels in each column. Method returns array which length is width of the image. \n * Every element in array corresponds to number of black pixels in the column of \n * the rectangle.\n * @param image input image with multiple lines and letters\n * @param row pixel position of the row. It should be center of the single row.\n * This number can be calculated by method findRowPixels\n * @param letterHeight predicted letter size (above and below row)\n * @return \n */\npublic static int[] widthRowHistogram(BufferedImage image,int row,int letterHeight){\n  int width=image.getWidth();\n  int height=image.getHeight();\n  int color;\n  int black=0;\n  int[] histogram=new int[width];\n  for (int i=0; i < width; i++) {\n    for (int j=row - (letterHeight / 2); j <= row + (letterHeight / 2); j++) {\n      if (j < 0 || j >= height) {\n        continue;\n      }\n      color=new Color(image.getRGB(i,j)).getRed();\n      if (color == black) {\n        histogram[i]++;\n      }\n    }\n  }\n  return histogram;\n}\n', '0', '10', '6');
INSERT INTO `case_study` VALUES ('2823', 'histogramWithoutLetterSpaces(int[],int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\ocr\\util\\histogram\\OCRHistogram.java', 'neuroph', '12', '43', '20', '-1000', '4', '0.2667', '0.1619', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Method for finding histogram but with ignoring spaces between lines/words<br/>\n * When you use only widthHistogram() method, it will find spaces between letters.\n * With this method you need to set the space gap will be ignored so you will get new \n * histogram where the words are separated, not letters.\n * @param histogram classic width histogram\n * @param spaceGap size of the space which will be ignored\n * @return new histogram with ignored spaces. <br/>\n * Previously in histogram these spaces have had values of zero<br/>\n * Now they are filled with ones: histogram[i] = 1\n */\npublic static int[] histogramWithoutLetterSpaces(int[] histogram,int spaceGap){\n  int count=0;\n  for (int i=0; i < histogram.length; i++) {\n    if (histogram[i] == 0) {\n      count++;\n    }\n else {\n      if (count > 0 && count < spaceGap) {\n        for (int j=i - count; j < i; j++) {\n          histogram[j]=1;\n        }\n      }\n      count=0;\n    }\n  }\n  return histogram;\n}\n', '0', '5', '6');
INSERT INTO `case_study` VALUES ('2825', 'createDataSet(List<MNISTImage>,int)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\mnist\\MNISTDataSet.java', 'neuroph', '32', '385', '274', '-1000', '2', '0.1021', '0.1573', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private static DataSet createDataSet(List<MNISTImage> imageList,int sampleCount){\n  int pixelCount=imageList.get(0).getSize();\n  int totalSize=1024;\n  DataSet dataSet=new DataSet(totalSize,10);\n  for (int i=0; i < sampleCount; i++) {\n    MNISTImage dImage=imageList.get(i);\n    double[] input=new double[totalSize];\n    double[] output=new double[10];\n    for (int j=0; j < 10; j++) {\n      output[j]=0;\n    }\n    for (int j=0; j < totalSize; j++) {\n      input[j]=0;\n    }\n    output[dImage.getLabel()]=1;\n    byte[] imageData=dImage.getData();\n    int k=66;\n    for (int j=0; j < pixelCount; j++) {\n      if ((imageData[j] & 0xff) > 0)       input[k++]=255;\n else       k++;\n      if (j % 28 == 27)       k+=4;\n    }\n    DataSetRow row=new DataSetRow(input,output);\n    dataSet.addRow(row);\n  }\n  dataSet.setColumnName(1024,\"0\");\n  dataSet.setColumnName(1025,\"1\");\n  dataSet.setColumnName(1026,\"2\");\n  dataSet.setColumnName(1027,\"3\");\n  dataSet.setColumnName(1028,\"4\");\n  dataSet.setColumnName(1029,\"5\");\n  dataSet.setColumnName(1030,\"6\");\n  dataSet.setColumnName(1031,\"7\");\n  dataSet.setColumnName(1032,\"8\");\n  dataSet.setColumnName(1033,\"9\");\n  return dataSet;\n}\n', '0.42857142857142855', '15', '7');
INSERT INTO `case_study` VALUES ('2826', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\mnist\\MNISTExample.java', 'neuroph', '25', '271', '242', '-1000', '13', '0.0833', '0.049', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static void main(String[] args){\n  try {\n    DataSet trainSet=MNISTDataSet.createFromFile(MNISTDataSet.TRAIN_LABEL_NAME,MNISTDataSet.TRAIN_IMAGE_NAME,60);\n    DataSet testSet=MNISTDataSet.createFromFile(MNISTDataSet.TEST_LABEL_NAME,MNISTDataSet.TEST_IMAGE_NAME,10);\n    ConvolutionalNetwork convolutionNetwork=new ConvolutionalNetwork.Builder().withInputLayer(32,32,1).withConvolutionLayer(5,5,6).withPoolingLayer(2,2).withConvolutionLayer(5,5,16).withPoolingLayer(2,2).withConvolutionLayer(5,5,120).withFullConnectedLayer(84).withFullConnectedLayer(10).build();\n    ConvolutionalBackpropagation backPropagation=new ConvolutionalBackpropagation();\n    backPropagation.setLearningRate(0.001);\n    backPropagation.setMaxError(0.01);\n    backPropagation.setErrorFunction(new MeanSquaredError());\n    convolutionNetwork.setLearningRule(backPropagation);\n    backPropagation.addListener(new LearningListener());\n    convolutionNetwork.learn(trainSet);\n    Evaluation.runFullEvaluation(convolutionNetwork,testSet);\n    convolutionNetwork.save(\"mnist.nnet\");\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n}\n', '0.5555555555555556', '6', '2');
INSERT INTO `case_study` VALUES ('2836', 'displayWeight(List<Double>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\util\\LayerVisialize.java', 'neuroph', '13', '52', '26', '-1000', '1', '0.1748', '0.1526', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void displayWeight(List<Double> currentKernel){\n  JFrame frame=new JFrame(\"Weight Visualiser: \");\n  frame.setSize(400,400);\n  JLabel label=new JLabel();\n  Dimension d=new Dimension(mapDimensions.getWidth() * RATIO,mapDimensions.getHeight() * RATIO);\n  label.setSize(d);\n  label.setPreferredSize(d);\n  frame.getContentPane().add(label,BorderLayout.CENTER);\n  frame.pack();\n  frame.setVisible(true);\n  BufferedImage image=new BufferedImage(mapDimensions.getWidth(),mapDimensions.getHeight(),BufferedImage.TYPE_BYTE_GRAY);\n  int[] rgb=convertWeightToRGB(currentKernel);\n  image.setRGB(0,0,mapDimensions.getWidth(),mapDimensions.getHeight(),rgb,0,mapDimensions.getWidth());\n  label.setIcon(new ImageIcon(image.getScaledInstance(mapDimensions.getWidth() * RATIO,mapDimensions.getHeight() * RATIO,Image.SCALE_SMOOTH)));\n}\n', '0.5', '6', '1');
INSERT INTO `case_study` VALUES ('2837', 'convertWeightToRGB(List<Double>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\util\\LayerVisialize.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2037', '0.0786', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int[] convertWeightToRGB(List<Double> pixels){\n  normalizeWeights(pixels);\n  int[] data=new int[mapDimensions.getWidth() * mapDimensions.getHeight()];\n  int i=0;\n  for (  Double weight : pixels) {\n    int val=(int)(weight * 255);\n    data[i++]=new Color(val,val,val).getRGB();\n  }\n  return data;\n}\n', '0.5', '5', '2');
INSERT INTO `case_study` VALUES ('2838', 'normalizeWeights(List<Double>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\util\\LayerVisialize.java', 'neuroph', '10', '32', '19', '-1000', '3', '0.2571', '0.0951', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void normalizeWeights(List<Double> weights){\n  double min=Double.MAX_VALUE;\n  double max=Double.MIN_VALUE;\n  for (  Double weight : weights) {\n    min=Math.min(min,weight);\n    max=Math.max(max,weight);\n  }\n  for (int i=0; i < weights.size(); i++) {\n    double value=(weights.get(i) - min) / (max - min);\n    weights.set(i,value);\n  }\n}\n', '0', '6', '3');
INSERT INTO `case_study` VALUES ('2842', 'displayWeight(List<Double>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\util\\WeightVisualiser.java', 'neuroph', '13', '52', '26', '-1000', '1', '0.1748', '0.1526', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void displayWeight(List<Double> currentKernel){\n  JFrame frame=new JFrame(\"Weight Visualiser: \");\n  frame.setSize(400,400);\n  JLabel label=new JLabel();\n  Dimension d=new Dimension(kernel.getWidth() * RATIO,kernel.getHeight() * RATIO);\n  label.setSize(d);\n  label.setPreferredSize(d);\n  frame.getContentPane().add(label,BorderLayout.CENTER);\n  frame.pack();\n  frame.setVisible(true);\n  BufferedImage image=new BufferedImage(kernel.getWidth(),kernel.getHeight(),BufferedImage.TYPE_BYTE_GRAY);\n  int[] rgb=convertWeightToRGB(currentKernel);\n  image.setRGB(0,0,kernel.getWidth(),kernel.getHeight(),rgb,0,kernel.getWidth());\n  label.setIcon(new ImageIcon(image.getScaledInstance(kernel.getWidth() * RATIO,kernel.getHeight() * RATIO,Image.SCALE_SMOOTH)));\n}\n', '0.5', '6', '1');
INSERT INTO `case_study` VALUES ('2843', 'convertWeightToRGB(List<Double>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\util\\WeightVisualiser.java', 'neuroph', '9', '30', '24', '-1000', '4', '0.2037', '0.0786', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private int[] convertWeightToRGB(List<Double> weights){\n  normalizeWeights(weights);\n  int[] data=new int[kernel.getWidth() * kernel.getHeight()];\n  int i=0;\n  for (  Double weight : weights) {\n    int val=(int)(weight * 255);\n    data[i++]=new Color(val,val,val).getRGB();\n  }\n  return data;\n}\n', '0.5', '5', '2');
INSERT INTO `case_study` VALUES ('2844', 'normalizeWeights(List<Double>)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\convolution\\util\\WeightVisualiser.java', 'neuroph', '10', '32', '19', '-1000', '3', '0.2571', '0.0951', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void normalizeWeights(List<Double> weights){\n  double min=Double.MAX_VALUE;\n  double max=Double.MIN_VALUE;\n  for (  Double weight : weights) {\n    min=Math.min(min,weight);\n    max=Math.max(max,weight);\n  }\n  for (int i=0; i < weights.size(); i++) {\n    double value=(weights.get(i) - min) / (max - min);\n    weights.set(i,value);\n  }\n}\n', '0', '6', '3');
INSERT INTO `case_study` VALUES ('2846', 'createLearningRule()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\evaluation\\optimization\\IrisOptimization.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.6667', '0.4286', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private static BackPropagation createLearningRule(){\n  BackPropagation learningRule=new BackPropagation();\n  learningRule.setMaxIterations(50);\n  learningRule.setMaxError(0.0001);\n  return learningRule;\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('2848', 'createLearningRule()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\evaluation\\optimization\\MLPMNISTOptimization.java', 'neuroph', '6', '9', '3', '-1000', '3', '0.6667', '0.4286', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private static BackPropagation createLearningRule(){\n  BackPropagation learningRule=new BackPropagation();\n  learningRule.setMaxIterations(100);\n  learningRule.setMaxError(0.0001);\n  return learningRule;\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('2849', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\learn\\CnnMNIST.java', 'neuroph', '34', '501', '441', '-1000', '8', '0.0617', '0.0343', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', '/** \n * @param args Command line parameters used to initialize parameters of convolutional network\n * [0] - maximal number of epochs during learning\n * [1] - learning error stop condition\n * [2] - learning rate used during learning process\n * [3] - number of feature maps in 1st convolutional layer\n * [4] - number of feature maps in 2nd convolutional layer\n * [5] - number of feature maps in 3rd convolutional layer\n */\npublic static void main(String[] args){\n  try {\n    int maxIter=10000;\n    double maxError=0.01;\n    double learningRate=0.2;\n    int layer1=Integer.parseInt(args[3]);\n    int layer2=Integer.parseInt(args[4]);\n    int layer3=Integer.parseInt(args[5]);\n    LOG.info(\"{}-{}-{}\",layer1,layer2,layer3);\n    String putanja=\"C:\\\\Users\\\\jecak_000\\\\Documents\\\\Neuroph\\\\neuroph_novaVerzija\\\\neurophNoviPull\\\\neuroph-2.9\\\\Samples\\\\\";\n    String labelName=putanja.concat(MNISTDataSet.TRAIN_LABEL_NAME);\n    String trainImage=putanja.concat(MNISTDataSet.TRAIN_IMAGE_NAME);\n    String testLabel=putanja.concat(MNISTDataSet.TEST_LABEL_NAME);\n    String testImage=putanja.concat(MNISTDataSet.TEST_IMAGE_NAME);\n    DataSet trainSet=MNISTDataSet.createFromFile(labelName,trainImage,100);\n    DataSet testSet=MNISTDataSet.createFromFile(testLabel,testImage,100);\n    Dimension2D inputDimension=new Dimension2D(32,32);\n    Dimension2D convolutionKernel=new Dimension2D(5,5);\n    Dimension2D poolingKernel=new Dimension2D(2,2);\n    ConvolutionalNetwork convolutionNetwork=new ConvolutionalNetwork.Builder().withInputLayer(32,32,1).withConvolutionLayer(5,5,layer1).withPoolingLayer(2,2).withConvolutionLayer(5,5,layer2).withPoolingLayer(2,2).withConvolutionLayer(5,5,layer3).withFullConnectedLayer(10).build();\n    ConvolutionalBackpropagation backPropagation=new ConvolutionalBackpropagation();\n    backPropagation.setLearningRate(learningRate);\n    backPropagation.setMaxError(maxError);\n    backPropagation.setMaxIterations(maxIter);\n    backPropagation.addListener(new LearningListener(convolutionNetwork,testSet));\n    backPropagation.setErrorFunction(new MeanSquaredError());\n    convolutionNetwork.setLearningRule(backPropagation);\n    convolutionNetwork.learn(trainSet);\n    Evaluation.runFullEvaluation(convolutionNetwork,testSet);\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n}\n', '0.5789473684210527', '20', '2');
INSERT INTO `case_study` VALUES ('2852', 'main(String[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\learn\\MultiLayerMNIST.java', 'neuroph', '21', '187', '164', '-1000', '8', '0.0982', '0.058', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '/** \n * @param args Command line parameters used to initialize parameters of multi layer neural network optimizer\n * [0] - maximal number of epochs during learning\n * [1] - learning error stop condition\n * [2] - learning rate used during learning process\n * [3] - number of validation folds\n * [4] - max number of layers in neural network\n * [5] - min neuron count per layer\n * [6] - max neuron count per layer\n * [7] - neuron increment count\n */\npublic static void main(String[] args) throws IOException {\n  int maxIter=10000;\n  double maxError=0.01;\n  double learningRate=0.2;\n  int validationFolds=Integer.parseInt(args[3]);\n  int maxLayers=Integer.parseInt(args[4]);\n  int minNeuronCount=Integer.parseInt(args[5]);\n  int maxNeuronCount=Integer.parseInt(args[6]);\n  int neuronIncrement=Integer.parseInt(args[7]);\n  LOG.info(\"MLP learning for MNIST started.....\");\n  DataSet trainSet=MNISTDataSet.createFromFile(MNISTDataSet.TRAIN_LABEL_NAME,MNISTDataSet.TRAIN_IMAGE_NAME,60000);\n  DataSet testSet=MNISTDataSet.createFromFile(MNISTDataSet.TEST_LABEL_NAME,MNISTDataSet.TEST_IMAGE_NAME,10000);\n  BackPropagation bp=new BackPropagation();\n  bp.setMaxIterations(maxIter);\n  bp.setMaxError(maxError);\n  bp.setLearningRate(learningRate);\n  LOG.info(\"Evaluating model on Test Set.....\");\n  LOG.info(\"MLP learning for MNIST successfully finished.....\");\n}\n', '0.8', '12', '1');
INSERT INTO `case_study` VALUES ('2853', 'FuNet1()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '10', '39', '33', '-1000', '6', '0.1833', '0.1136', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public FuNet1(){\n  try {\n    for (    UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {\n      if (\"Nimbus\".equals(info.getName())) {\n        UIManager.setLookAndFeel(info.getClassName());\n        break;\n      }\n    }\n  }\n catch (  Exception e) {\n  }\n  try {\n    network=network.load(new FileInputStream(\"/home/mithquissir/Desktop/cnn/5-50-100/30.nnet\"));\n    testSet=MNISTDataSet.createFromFile(MNISTDataSet.TEST_LABEL_NAME,MNISTDataSet.TEST_IMAGE_NAME,10000);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  initComponents();\n}\n', '1', '3', '5');
INSERT INTO `case_study` VALUES ('2854', 'updateCanvas()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '9', '15', '0', '-1000', '3', '0.25', '0.2169', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public void updateCanvas(){\n  Graphics2D g2=canvas.createGraphics();\n  g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);\n  g2.setPaint(getColor());\n  if (tool == 1) {\n    g2.fillOval(currentX - ((int)value / 2),currentY - ((int)value / 2),(int)value,(int)value);\n  }\n else   if (tool == 2) {\n    g2.setStroke(new BasicStroke((float)value,BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND));\n    g2.drawLine(oldX,oldY,currentX,currentY);\n    g2.setStroke(new BasicStroke(1.0f));\n  }\n  repaint();\n}\n', '0', '1', '3');
INSERT INTO `case_study` VALUES ('2856', 'initComponents()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '26', '282', '239', '-1000', '8', '0.0627', '0.0689', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void initComponents(){\n  canvas=new BufferedImage(320,320,BufferedImage.TYPE_BYTE_GRAY);\n  buttonGroup1=new ButtonGroup();\n  buttonGroup2=new ButtonGroup();\n  jPanel4=new JPanel();\n  jSlider2=new JSlider();\n  jLabel1=new JLabel();\n  jPanel2=new JPanel(new GridBagLayout());\n  JLabel canvasLabel=new JLabel(new ImageIcon(canvas));\n  jPanel2.add(canvasLabel,null);\n  jPanel3=new JPanel();\n  jRadioButton3=new JRadioButton();\n  jRadioButton4=new JRadioButton();\n  jRadioButton5=new JRadioButton();\n  jRadioButton6=new JRadioButton();\n  jRadioButton7=new JRadioButton();\n  jRadioButton8=new JRadioButton();\n  jButton1=new JButton();\n  setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n  setTitle(\"FuNet1 --- powered by Neuroph\");\n  jPanel4.setBorder(BorderFactory.createTitledBorder(\"Line thickness\"));\n  jSlider2.setMajorTickSpacing(10);\n  jSlider2.setMaximum(51);\n  jSlider2.setMinimum(1);\n  jSlider2.setMinorTickSpacing(5);\n  jSlider2.setPaintTicks(true);\n  jSlider2.addChangeListener(new ChangeListener(){\n    public void stateChanged(    ChangeEvent evt){\n      jSlider2StateChanged(evt);\n    }\n  }\n);\n  GroupLayout jPanel4Layout=new GroupLayout(jPanel4);\n  jPanel4.setLayout(jPanel4Layout);\n  jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,51,Short.MAX_VALUE).addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.TRAILING).addComponent(jLabel1).addComponent(jSlider2,GroupLayout.PREFERRED_SIZE,150,GroupLayout.PREFERRED_SIZE)).addContainerGap()));\n  label=new JLabel(\"\");\n  Font labelFont=label.getFont();\n  label.setFont(new Font(labelFont.getName(),Font.PLAIN,30));\n  jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.TRAILING).addComponent(jSlider2,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(jLabel1)).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED))));\n  jPanel2.setBackground(new Color(0,0,0));\n  jPanel2.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));\n  canvasLabel.addMouseListener(new MouseAdapter(){\n    public void mousePressed(    MouseEvent evt){\n      jPanel2MousePressed(evt);\n    }\n    public void mouseReleased(    MouseEvent evt){\n      jPanel2MouseReleased(evt);\n    }\n  }\n);\n  canvasLabel.addMouseMotionListener(new MouseMotionAdapter(){\n    public void mouseDragged(    MouseEvent evt){\n      jPanel2MouseDragged(evt);\n    }\n  }\n);\n  jButton1.setText(\"Clear\");\n  jButton1.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent evt){\n      jButton1ActionPerformed(evt);\n    }\n  }\n);\n  GroupLayout layout=new GroupLayout(getContentPane());\n  getContentPane().setLayout(layout);\n  layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(jPanel2,GroupLayout.Alignment.TRAILING,GroupLayout.DEFAULT_SIZE,GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel4,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jPanel3,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(jButton1,GroupLayout.DEFAULT_SIZE,112,Short.MAX_VALUE).addComponent(label,GroupLayout.DEFAULT_SIZE,112,Short.MAX_VALUE)))).addContainerGap()));\n  layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING,false).addGroup(layout.createSequentialGroup().addGap(4,4,4).addComponent(jButton1,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE).addComponent(label,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)).addComponent(jPanel4,GroupLayout.DEFAULT_SIZE,GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(jPanel3,GroupLayout.DEFAULT_SIZE,GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2,GroupLayout.DEFAULT_SIZE,GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addContainerGap()));\n  Graphics g=canvas.getGraphics();\n  g.setColor(Color.WHITE);\n  g.fillRect(0,0,canvas.getWidth(),canvas.getHeight());\n  repaint();\n  pack();\n}\n', '0', '10', '1');
INSERT INTO `case_study` VALUES ('2862', 'jButton1ActionPerformed(ActionEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '6', '12', '9', '-1000', '4', '0.25', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void jButton1ActionPerformed(ActionEvent evt){\n  Graphics g=canvas.getGraphics();\n  g.setColor(Color.WHITE);\n  g.fillRect(0,0,canvas.getWidth(),canvas.getHeight());\n  repaint();\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('2863', 'jPanel2MouseDragged(MouseEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '6', '12', '9', '-1000', '3', '0.2667', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void jPanel2MouseDragged(MouseEvent evt){\n  currentX=evt.getX();\n  currentY=evt.getY();\n  updateCanvas();\n  if (tool == 1) {\n    oldX=currentX;\n    oldY=currentY;\n  }\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('2864', 'jPanel2MousePressed(MouseEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '7', '18', '15', '-1000', '4', '0.2041', '0.0476', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void jPanel2MousePressed(MouseEvent evt){\n  oldX=evt.getX();\n  oldY=evt.getY();\n  if (tool == 2) {\n    currentX=oldX;\n    currentY=oldY;\n  }\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('2866', 'jPanel2MouseReleased(MouseEvent)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '27', '315', '279', '-1000', '6', '0.0796', '0.0476', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void jPanel2MouseReleased(MouseEvent evt){\n  currentX=evt.getX();\n  currentY=evt.getY();\n  final double SCALE=0.1;\n  BufferedImage bi=new BufferedImage(32,32,BufferedImage.TYPE_BYTE_GRAY);\n  Graphics2D grph=(Graphics2D)bi.getGraphics();\n  grph.scale(SCALE,SCALE);\n  grph.drawImage(canvas,0,0,null);\n  grph.dispose();\n  newPix=new double[32 * 32];\n  pixels=bi.getRGB(0,0,32,32,pixels,0,32);\n  for (int i=0; i < pixels.length; i++) {\n    newPix[i]=255 - (pixels[i] & 0xff);\n    newPix[i]/=255;\n  }\n  long start=System.currentTimeMillis();\n  network.setInput(newPix);\n  network.calculate();\n  System.out.println(\"Execution time: \" + (System.currentTimeMillis() - start) + \" milliseconds\");\n  try {\n    ImageIO.write(bi,\"png\",new File(\"number.png\"));\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n  double[] networkOutput=network.getOutput();\n  int maxNeuronIdx=Utils.maxIdx(networkOutput);\n  ClassificationResult max=new ClassificationResult(maxNeuronIdx,networkOutput[maxNeuronIdx]);\n  System.out.println(\"New calculation:\");\n  System.out.println(\"Class: \" + max.getClassIdx());\n  System.out.println(\"Probability: \" + max.getNeuronOutput());\n  label.setText(String.valueOf(max.getClassIdx()));\n}\n', '0.42857142857142855', '10', '3');
INSERT INTO `case_study` VALUES ('2868', 'run()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\samples\\mnist\\master\\FuNet1.java', 'neuroph', '25', '297', '294', '-1000', '23', '0.0442', '0.0069', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '@Override public void run(){\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('2872', 'normalize(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\DecimalScaleNormalizer.java', 'neuroph', '10', '32', '19', '-1000', '4', '0.2333', '0.1317', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public void normalize(DataSet dataSet){\n  findMaxVectors(dataSet);\n  findScaleVectors();\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] normalizedInput=normalizeScale(dataSetRow.getInput(),scaleFactorIn);\n    dataSetRow.setInput(normalizedInput);\n    if (dataSet.isSupervised()) {\n      double[] normalizedOutput=normalizeScale(dataSetRow.getDesiredOutput(),scaleFactorOut);\n      dataSetRow.setDesiredOutput(normalizedOutput);\n    }\n  }\n}\n', '0.3333333333333333', '4', '3');
INSERT INTO `case_study` VALUES ('2873', 'findMaxVectors(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\DecimalScaleNormalizer.java', 'neuroph', '19', '130', '89', '-1000', '3', '0.1619', '0.0745', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Finds max values for all columns in dataset (inputs and outputs)\n * Sets max column values to maxIn and maxOut fields\n * @param dataSet \n */\nprivate void findMaxVectors(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  int outputSize=dataSet.getOutputSize();\n  maxIn=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    maxIn[i]=Double.MIN_VALUE;\n  }\n  maxOut=new double[outputSize];\n  for (int i=0; i < outputSize; i++) {\n    maxOut[i]=Double.MIN_VALUE;\n  }\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      if (input[i] > maxIn[i]) {\n        maxIn[i]=input[i];\n      }\n    }\n    double[] output=dataSetRow.getDesiredOutput();\n    for (int i=0; i < outputSize; i++) {\n      if (output[i] > maxOut[i]) {\n        maxOut[i]=output[i];\n      }\n    }\n  }\n}\n', '0.4', '10', '8');
INSERT INTO `case_study` VALUES ('2874', 'findScaleVectors()', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\DecimalScaleNormalizer.java', 'neuroph', '15', '74', '43', '-1000', '2', '0.2222', '0.1384', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void findScaleVectors(){\n  scaleFactorIn=new double[maxIn.length];\n  for (int i=0; i < scaleFactorIn.length; i++) {\n    scaleFactorIn[i]=1;\n  }\n  for (int i=0; i < maxIn.length; i++) {\n    while (maxIn[i] > 1) {\n      maxIn[i]=maxIn[i] / 10.0;\n      scaleFactorIn[i]=scaleFactorIn[i] * 10;\n    }\n  }\n  scaleFactorOut=new double[maxOut.length];\n  for (int i=0; i < scaleFactorOut.length; i++) {\n    scaleFactorOut[i]=1;\n  }\n  for (int i=0; i < maxOut.length; i++) {\n    while (maxOut[i] > 1) {\n      maxOut[i]=maxOut[i] / 10.0;\n      scaleFactorOut[i]=scaleFactorOut[i] * 10;\n    }\n  }\n}\n', '0', '4', '7');
INSERT INTO `case_study` VALUES ('2875', 'normalizeScale(double[],double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\DecimalScaleNormalizer.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3333', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private double[] normalizeScale(double[] vector,double[] scaleFactor){\n  double[] normalizedVector=new double[vector.length];\n  for (int i=0; i < vector.length; i++) {\n    normalizedVector[i]=vector[i] / scaleFactor[i];\n  }\n  return normalizedVector;\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('2876', 'normalize(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\MaxMinNormalizer.java', 'neuroph', '6', '4', '0', '-1000', '1', '0.3125', '0.2295', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '@Override public void normalize(DataSet dataSet){\n  findMaxAndMinVectors(dataSet);\n  for (  DataSetRow row : dataSet.getRows()) {\n    double[] normalizedInput=normalizeMaxMin(row.getInput(),minIn,maxIn);\n    row.setInput(normalizedInput);\n    if (dataSet.isSupervised()) {\n      double[] normalizedOutput=normalizeMaxMin(row.getDesiredOutput(),minOut,maxOut);\n      row.setDesiredOutput(normalizedOutput);\n    }\n  }\n}\n', '0.3333333333333333', '4', '3');
INSERT INTO `case_study` VALUES ('2877', 'findMaxAndMinVectors(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\MaxMinNormalizer.java', 'neuroph', '27', '267', '183', '-1000', '3', '0.1531', '0.0783', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void findMaxAndMinVectors(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  int outputSize=dataSet.getOutputSize();\n  maxIn=new double[inputSize];\n  minIn=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    maxIn[i]=Double.MIN_VALUE;\n    minIn[i]=Double.MAX_VALUE;\n  }\n  maxOut=new double[outputSize];\n  minOut=new double[outputSize];\n  for (int i=0; i < outputSize; i++) {\n    maxOut[i]=Double.MIN_VALUE;\n    minOut[i]=Double.MAX_VALUE;\n  }\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      if (input[i] > maxIn[i]) {\n        maxIn[i]=input[i];\n      }\n      if (input[i] < minIn[i]) {\n        minIn[i]=input[i];\n      }\n    }\n    double[] output=dataSetRow.getDesiredOutput();\n    for (int i=0; i < outputSize; i++) {\n      if (output[i] > maxOut[i]) {\n        maxOut[i]=output[i];\n      }\n      if (output[i] < minOut[i]) {\n        minOut[i]=output[i];\n      }\n    }\n  }\n}\n', '0.4', '10', '10');
INSERT INTO `case_study` VALUES ('2878', 'normalizeMaxMin(double[],double[],double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\MaxMinNormalizer.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3', '0.1286', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private double[] normalizeMaxMin(double[] vector,double[] min,double[] max){\n  double[] normalizedVector=new double[vector.length];\n  for (int i=0; i < vector.length; i++) {\n    normalizedVector[i]=(vector[i] - min[i]) / (max[i] - min[i]);\n  }\n  return normalizedVector;\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('2879', 'normalize(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\MaxNormalizer.java', 'neuroph', '6', '4', '0', '-1000', '1', '0.3611', '0.2689', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '@Override public void normalize(DataSet dataSet){\n  findMaxVectors(dataSet);\n  for (  DataSetRow row : dataSet.getRows()) {\n    double[] normalizedInput=normalizeMax(row.getInput(),maxIn);\n    row.setInput(normalizedInput);\n    if (dataSet.isSupervised()) {\n      double[] normalizedOutput=normalizeMax(row.getDesiredOutput(),maxOut);\n      row.setDesiredOutput(normalizedOutput);\n    }\n  }\n}\n', '0.3333333333333333', '4', '3');
INSERT INTO `case_study` VALUES ('2880', 'findMaxVectors(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\MaxNormalizer.java', 'neuroph', '18', '114', '75', '-1000', '3', '0.1667', '0.0794', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Finds max values for columns in input and output vector for given data set\n * @param dataSet  \n */\nprivate void findMaxVectors(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  int outputSize=dataSet.getOutputSize();\n  maxIn=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    maxIn[i]=Double.MIN_VALUE;\n  }\n  maxOut=new double[outputSize];\n  for (int i=0; i < outputSize; i++)   maxOut[i]=Double.MIN_VALUE;\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      if (input[i] > maxIn[i]) {\n        maxIn[i]=input[i];\n      }\n    }\n    double[] output=dataSetRow.getDesiredOutput();\n    for (int i=0; i < outputSize; i++) {\n      if (output[i] > maxOut[i]) {\n        maxOut[i]=output[i];\n      }\n    }\n  }\n}\n', '0.4', '10', '8');
INSERT INTO `case_study` VALUES ('2881', 'normalizeMax(double[],double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\MaxNormalizer.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.3333', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public double[] normalizeMax(double[] vector,double[] max){\n  double[] normalizedVector=new double[vector.length];\n  for (int i=0; i < vector.length; i++) {\n    normalizedVector[i]=vector[i] / max[i];\n  }\n  return normalizedVector;\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('2884', 'normalize(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\RangeNormalizer.java', 'neuroph', '8', '15', '2', '-1000', '2', '0.25', '0.1765', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public void normalize(DataSet dataSet){\n  findMaxAndMinVectors(dataSet);\n  for (  DataSetRow row : dataSet.getRows()) {\n    double[] normalizedInput=normalizeToRange(row.getInput(),minIn,maxIn);\n    row.setInput(normalizedInput);\n    if (dataSet.isSupervised()) {\n      double[] normalizedOutput=normalizeToRange(row.getDesiredOutput(),minOut,maxOut);\n      row.setDesiredOutput(normalizedOutput);\n    }\n  }\n}\n', '0.3333333333333333', '4', '3');
INSERT INTO `case_study` VALUES ('2885', 'normalizeToRange(double[],double[],double[])', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\RangeNormalizer.java', 'neuroph', '6', '11', '7', '-1000', '3', '0.2619', '0.1122', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private double[] normalizeToRange(double[] vector,double[] min,double[] max){\n  double[] normalizedVector=new double[vector.length];\n  for (int i=0; i < vector.length; i++) {\n    normalizedVector[i]=((vector[i] - min[i]) / (max[i] - min[i])) * (highLimit - lowLimit) + lowLimit;\n  }\n  return normalizedVector;\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('2886', 'findMaxAndMinVectors(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\RangeNormalizer.java', 'neuroph', '27', '267', '183', '-1000', '3', '0.1531', '0.0783', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void findMaxAndMinVectors(DataSet dataSet){\n  int inputSize=dataSet.getInputSize();\n  int outputSize=dataSet.getOutputSize();\n  maxIn=new double[inputSize];\n  minIn=new double[inputSize];\n  for (int i=0; i < inputSize; i++) {\n    maxIn[i]=Double.MIN_VALUE;\n    minIn[i]=Double.MAX_VALUE;\n  }\n  maxOut=new double[outputSize];\n  minOut=new double[outputSize];\n  for (int i=0; i < outputSize; i++) {\n    maxOut[i]=Double.MIN_VALUE;\n    minOut[i]=Double.MAX_VALUE;\n  }\n  for (  DataSetRow dataSetRow : dataSet.getRows()) {\n    double[] input=dataSetRow.getInput();\n    for (int i=0; i < inputSize; i++) {\n      if (input[i] > maxIn[i]) {\n        maxIn[i]=input[i];\n      }\n      if (input[i] < minIn[i]) {\n        minIn[i]=input[i];\n      }\n    }\n    double[] output=dataSetRow.getDesiredOutput();\n    for (int i=0; i < outputSize; i++) {\n      if (output[i] > maxOut[i]) {\n        maxOut[i]=output[i];\n      }\n      if (output[i] < minOut[i]) {\n        minOut[i]=output[i];\n      }\n    }\n  }\n}\n', '0.4', '10', '10');
INSERT INTO `case_study` VALUES ('2887', 'normalize(DataSet)', 'D:\\temp\\case study\\neuroph-2.94\\org\\neuroph\\util\\data\\norm\\ZeroMeanNormalizer.java', 'neuroph', '9', '16', '0', '-1000', '1', '0.2963', '0.1759', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void normalize(DataSet dataSet){\n  double[] maxInput=DataSetStats.calculateMaxByColumns(dataSet);\n  double[] minInput=DataSetStats.calculateMinByColumns(dataSet);\n  double[] meanInput=DataSetStats.calculateMeanByColumns(dataSet);\n  for (  DataSetRow row : dataSet.getRows()) {\n    double[] normalizedInput=row.getInput();\n    for (int i=0; i < dataSet.getInputSize(); i++) {\n      double divider=maxInput[i] - minInput[i] == 0 ? 1 : maxInput[i] - minInput[i];\n      normalizedInput[i]=(normalizedInput[i] - meanInput[i]) / divider;\n    }\n    row.setInput(normalizedInput);\n  }\n}\n', '0.42857142857142855', '8', '4');
INSERT INTO `case_study` VALUES ('2896', 'save()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\Config.java', 'xdm', '44', '206', '0', '-1000', '4', '0.0665', '0.3445', '0', '1', '0', '0', '0', '0', '1', '0', '1', '1', 'public void save(){\n  FileWriter fw=null;\n  try {\n    File file=new File(System.getProperty(\"user.home\"),\".xdman/config.txt\");\n    fw=new FileWriter(file);\n    String newLine=\"\\n\";\n    fw.write(\"monitoring:\" + this.monitoring + newLine);\n    fw.write(\"downloadFolder:\" + this.downloadFolder + newLine);\n    fw.write(\"maxDownloads:\" + this.maxDownloads + newLine);\n    fw.write(\"maxSegments:\" + this.maxSegments + newLine);\n    fw.write(\"networkTimeout:\" + this.networkTimeout + newLine);\n    fw.write(\"tcpWindowSize:\" + this.tcpWindowSize + newLine);\n    fw.write(\"minSegmentSize:\" + this.minSegmentSize + newLine);\n    fw.write(\"minVidSize:\" + this.minVidSize + newLine);\n    fw.write(\"duplicateAction:\" + this.duplicateAction + newLine);\n    fw.write(\"speedLimit:\" + this.speedLimit + newLine);\n    fw.write(\"showDownloadWindow:\" + this.showDownloadWindow + newLine);\n    fw.write(\"showDownloadCompleteWindow:\" + this.showDownloadCompleteWindow + newLine);\n    fw.write(\"blockedHosts:\" + XDMUtils.appendArray2Str(this.blockedHosts) + newLine);\n    fw.write(\"vidUrls:\" + XDMUtils.appendArray2Str(this.vidUrls) + newLine);\n    fw.write(\"fileExts:\" + XDMUtils.appendArray2Str(this.fileExts) + newLine);\n    fw.write(\"vidExts:\" + XDMUtils.appendArray2Str(this.vidExts) + newLine);\n    fw.write(\"proxyMode:\" + this.proxyMode + newLine);\n    fw.write(\"proxyPac:\" + this.proxyPac + newLine);\n    fw.write(\"proxyHost:\" + this.proxyHost + newLine);\n    fw.write(\"proxyPort:\" + this.proxyPort + newLine);\n    fw.write(\"socksHost:\" + this.socksHost + newLine);\n    fw.write(\"socksPort:\" + this.socksPort + newLine);\n    fw.write(\"proxyUser:\" + this.proxyUser + newLine);\n    fw.write(\"proxyPass:\" + this.proxyPass + newLine);\n    fw.write(\"autoShutdown:\" + this.autoShutdown + newLine);\n    fw.write(\"keepAwake:\" + this.keepAwake + newLine);\n    fw.write(\"execCmd:\" + this.execCmd + newLine);\n    fw.write(\"execAntivir:\" + this.execAntivir + newLine);\n    fw.write(\"version:\" + XDMApp.APP_VERSION + newLine);\n    fw.write(\"autoStart:\" + this.autoStart + newLine);\n    fw.write(\"language:\" + this.language + newLine);\n    if (!StringUtils.isNullOrEmptyOrBlank(this.antivirExe))     fw.write(\"antivirExe:\" + this.antivirExe + newLine);\n    if (!StringUtils.isNullOrEmptyOrBlank(this.antivirCmd))     fw.write(\"antivirCmd:\" + this.antivirCmd + newLine);\n    if (!StringUtils.isNullOrEmptyOrBlank(this.customCmd))     fw.write(\"customCmd:\" + this.customCmd + newLine);\n    fw.write(\"showVideoNotification:\" + this.showVideoNotification + newLine);\n  }\n catch (  Exception e) {\n  }\n  try {\n    fw.close();\n  }\n catch (  Exception e) {\n  }\n}\n', '1', '42', '6');
INSERT INTO `case_study` VALUES ('2897', 'load()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\Config.java', 'xdm', '56', '876', '212', '-1000', '5', '0.0408', '0.1339', '0', '1', '1', '0', '0', '1', '1', '1', '1', '1', 'public void load(){\n  BufferedReader br=null;\n  try {\n    File file=new File(System.getProperty(\"user.home\"),\".xdman/config.txt\");\n    if (!file.exists()) {\n      return;\n    }\n    FileReader r=new FileReader(file);\n    br=new BufferedReader(r);\n    while (true) {\n      String ln=br.readLine();\n      if (ln == null)       break;\n      if (ln.startsWith(\"#\"))       continue;\n      int index=ln.indexOf(\":\");\n      if (index < 1)       continue;\n      String key=ln.substring(0,index);\n      String val=ln.substring(index + 1);\n      if (key.equals(\"monitoring\")) {\n        this.monitoring=val.equals(\"true\");\n      }\n else       if (key.equals(\"downloadFolder\")) {\n        this.downloadFolder=val;\n      }\n else       if (key.equals(\"maxSegments\")) {\n        this.maxSegments=Integer.parseInt(val);\n      }\n else       if (key.equals(\"minSegmentSize\")) {\n        this.minSegmentSize=Integer.parseInt(val);\n      }\n else       if (key.equals(\"networkTimeout\")) {\n        this.networkTimeout=Integer.parseInt(val);\n      }\n else       if (key.equals(\"tcpWindowSize\")) {\n        this.tcpWindowSize=Integer.parseInt(val);\n      }\n else       if (key.equals(\"duplicateAction\")) {\n        this.duplicateAction=Integer.parseInt(val);\n      }\n else       if (key.equals(\"speedLimit\")) {\n        this.speedLimit=Integer.parseInt(val);\n      }\n else       if (key.equals(\"showDownloadWindow\")) {\n        this.showDownloadWindow=val.equals(\"true\");\n      }\n else       if (key.equals(\"showDownloadCompleteWindow\")) {\n        this.showDownloadCompleteWindow=val.equals(\"true\");\n      }\n else       if (key.equals(\"minVidSize\")) {\n        this.minVidSize=Integer.parseInt(val);\n      }\n else       if (key.equals(\"maxDownloads\")) {\n        this.maxDownloads=Integer.parseInt(val);\n      }\n else       if (key.equals(\"blockedHosts\")) {\n        this.blockedHosts=val.split(\",\");\n      }\n else       if (key.equals(\"vidUrls\")) {\n        this.vidUrls=val.split(\",\");\n      }\n else       if (key.equals(\"fileExts\")) {\n        this.fileExts=val.split(\",\");\n      }\n else       if (key.equals(\"vidExts\")) {\n        this.vidExts=val.split(\",\");\n      }\n else       if (key.equals(\"proxyMode\")) {\n        this.proxyMode=Integer.parseInt(val);\n      }\n else       if (key.equals(\"proxyPort\")) {\n        this.proxyPort=Integer.parseInt(val);\n      }\n else       if (key.equals(\"socksPort\")) {\n        this.socksPort=Integer.parseInt(val);\n      }\n else       if (key.equals(\"proxyPac\")) {\n        this.proxyPac=val;\n      }\n else       if (key.equals(\"proxyHost\")) {\n        this.proxyHost=val;\n      }\n else       if (key.equals(\"socksHost\")) {\n        this.socksHost=val;\n      }\n else       if (key.equals(\"proxyUser\")) {\n        this.proxyUser=val;\n      }\n else       if (key.equals(\"proxyPass\")) {\n        this.proxyPass=val;\n      }\n else       if (key.equals(\"showVideoNotification\")) {\n        this.showVideoNotification=\"true\".equals(val);\n      }\n else       if (key.equals(\"keepAwake\")) {\n        this.keepAwake=\"true\".equals(val);\n      }\n else       if (key.equals(\"autoStart\")) {\n        this.autoStart=\"true\".equals(val);\n      }\n else       if (key.equals(\"execAntivir\")) {\n        this.execAntivir=\"true\".equals(val);\n      }\n else       if (key.equals(\"execCmd\")) {\n        this.execCmd=\"true\".equals(val);\n      }\n else       if (key.equals(\"antivirExe\")) {\n        this.antivirExe=val;\n      }\n else       if (key.equals(\"antivirCmd\")) {\n        this.antivirCmd=val;\n      }\n else       if (key.equals(\"customCmd\")) {\n        this.customCmd=val;\n      }\n else       if (key.equals(\"autoShutdown\")) {\n        this.autoShutdown=\"true\".equals(val);\n      }\n else       if (key.equals(\"version\")) {\n        this.firstRun=!XDMApp.APP_VERSION.equals(val);\n      }\n else       if (key.equals(\"language\")) {\n        this.language=val;\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  try {\n    br.close();\n  }\n catch (  Exception e) {\n  }\n}\n', '1', '44', '43');
INSERT INTO `case_study` VALUES ('2898', 'Config()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\Config.java', 'xdm', '41', '748', '676', '-1000', '25', '0.0377', '0.0584', '0', '0', '1', '1', '0', '1', '1', '1', '0', '0', 'private Config(){\n  File f=new File(System.getProperty(\"user.home\"),\".xdman\");\n  if (!f.exists()) {\n    f.mkdirs();\n  }\n  dataFolder=f.getAbsolutePath();\n  f=new File(dataFolder,\"metadata\");\n  if (!f.exists()) {\n    f.mkdir();\n  }\n  this.metadataFolder=f.getAbsolutePath();\n  f=new File(dataFolder,\"temp\");\n  if (!f.exists()) {\n    f.mkdir();\n  }\n  this.temporaryFolder=f.getAbsolutePath();\n  this.downloadFolder=XDMUtils.getDownloadsFolder();\n  if (!new File(this.downloadFolder).exists()) {\n    this.downloadFolder=System.getProperty(\"user.home\");\n  }\n  this.monitoring=true;\n  this.showDownloadWindow=true;\n  this.setMaxSegments(8);\n  this.setMinSegmentSize(64 * 1024);\n  this.maxDownloads=100;\n  this.minVidSize=1 * 1024 * 1024;\n  this.defaultFileTypes=new String[]{\"3GP\",\"7Z\",\"AVI\",\"BZ2\",\"DEB\",\"DOC\",\"DOCX\",\"EXE\",\"GZ\",\"ISO\",\"MSI\",\"PDF\",\"PPT\",\"PPTX\",\"RAR\",\"RPM\",\"XLS\",\"XLSX\",\"SIT\",\"SITX\",\"TAR\",\"JAR\",\"ZIP\"};\n  this.fileExts=defaultFileTypes;\n  this.autoShutdown=false;\n  this.blockedHosts=new String[]{\"update.microsoft.com\",\"windowsupdate.com\",\"thwawte.com\"};\n  this.defaultVideoTypes=new String[]{\"MP4\",\"M3U8\",\"F4M\",\"WEBM\",\"OGG\",\"MP3\",\"AAC\",\"FLV\",\"MKV\",\"DIVX\",\"MOV\",\"MPG\",\"MPEG\",\"OPUS\"};\n  this.vidExts=defaultVideoTypes;\n  this.vidUrls=new String[]{\".facebook.com|pagelet\",\"player.vimeo.com/\",\"instagram.com/p/\"};\n  this.networkTimeout=60;\n  this.tcpWindowSize=8;\n  this.speedLimit=0;\n  this.proxyMode=0;\n  this.proxyPort=0;\n  this.socksPort=0;\n  this.proxyPac=this.proxyHost=this.proxyUser=this.proxyPass=this.socksHost=\"\";\n  this.showVideoNotification=true;\n  this.showDownloadCompleteWindow=true;\n  this.firstRun=true;\n  this.language=\"en\";\n}\n', '1', '32', '5');
INSERT INTO `case_study` VALUES ('2997', 'load()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\CredentialManager.java', 'xdm', '20', '167', '144', '-1000', '5', '0.1091', '0.0731', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void load(){\n  BufferedReader br=null;\n  try {\n    File f=new File(Config.getInstance().getDataFolder(),\".credentials\");\n    if (!f.exists()) {\n      Logger.log(\"No saved credentials\");\n      return;\n    }\n    br=new BufferedReader(new InputStreamReader(new FileInputStream(f)));\n    if (!savedCredentials.isEmpty())     savedCredentials.clear();\n    while (true) {\n      String ln=br.readLine();\n      if (ln == null)       break;\n      String str=new String(Base64.decode(ln));\n      String[] arr=str.split(\"\\n\");\n      if (arr.length < 2)       continue;\n      savedCredentials.put(arr[0],new PasswordAuthentication(arr[1],arr.length == 3 ? arr[2].toCharArray() : new char[0]));\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      if (br != null) {\n        br.close();\n      }\n    }\n catch (    IOException e) {\n      e.printStackTrace();\n    }\n  }\n}\n', '0.75', '7', '10');
INSERT INTO `case_study` VALUES ('2998', 'save()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\CredentialManager.java', 'xdm', '19', '145', '119', '-1000', '4', '0.1128', '0.0721', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public void save(){\n  StringBuilder buf=new StringBuilder();\n  Iterator<String> savedKeyIterator=savedCredentials.keySet().iterator();\n  while (savedKeyIterator.hasNext()) {\n    String key=savedKeyIterator.next();\n    PasswordAuthentication pauth=savedCredentials.get(key);\n    String str=key + \"\\n\" + pauth.getUserName()+ \"\\n\"+ new String(pauth.getPassword());\n    String str64=Base64.encode(str.getBytes());\n    buf.append(str64 + \"\\n\");\n  }\n  OutputStream out=null;\n  try {\n    File f=new File(Config.getInstance().getDataFolder(),\".credentials\");\n    out=new FileOutputStream(f);\n    out.write(buf.toString().getBytes());\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      if (out != null) {\n        out.close();\n      }\n    }\n catch (    Exception e) {\n    }\n  }\n}\n', '0.75', '10', '5');
INSERT INTO `case_study` VALUES ('3034', 'DownloadQueue(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\DownloadQueue.java', 'xdm', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public DownloadQueue(String id,String name){\n  this.name=name;\n  this.queueId=id;\n  queuedItems=new ArrayList<String>();\n  this.startTime=this.endTime=-1;\n}\n', '0', '6', '1');
INSERT INTO `case_study` VALUES ('3037', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\DownloadQueue.java', 'xdm', '10', '37', '29', '-1000', '4', '0.2', '0.0708', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void stop(){\n  running=false;\n  XDMApp app=XDMApp.getInstance();\n  for (int i=0; i < queuedItems.size(); i++) {\n    String id=queuedItems.get(i);\n    DownloadEntry ent=app.getEntry(id);\n    int state=ent.getState();\n    if (state == XDMConstants.FAILED || state == XDMConstants.FINISHED || state == XDMConstants.PAUSED) {\n      continue;\n    }\n else {\n      app.pauseDownload(id);\n    }\n  }\n}\n', '0.5', '5', '5');
INSERT INTO `case_study` VALUES ('3038', 'next()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\DownloadQueue.java', 'xdm', '30', '356', '277', '-1000', '4', '0.1262', '0.0808', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public synchronized void next(){\n  Logger.log(queueId + \" attmpting to process next item\");\n  if (!running)   return;\n  int c=0;\n  XDMApp app=XDMApp.getInstance();\n  if (queuedItems == null)   return;\n  if (app.queueItemPending(queueId)) {\n    Logger.log(queueId + \" not processing as has already pending download\");\n    return;\n  }\n  if (currentItemId != null) {\n    DownloadEntry ent=app.getEntry(currentItemId);\n    if (ent != null) {\n      int state=ent.getState();\n      if (!(state == XDMConstants.FAILED || state == XDMConstants.PAUSED || state == XDMConstants.FINISHED)) {\n        Logger.log(queueId + \" not processing as has already active download\");\n        return;\n      }\n    }\n  }\n  Logger.log(queueId + \" total queued \" + queuedItems.size());\n  if (!(index < queuedItems.size())) {\n    index=0;\n  }\n  for (; index < queuedItems.size(); ) {\n    String id=queuedItems.get(index);\n    DownloadEntry ent=app.getEntry(id);\n    if (ent != null) {\n      int state=ent.getState();\n      if (state == XDMConstants.FAILED || state == XDMConstants.PAUSED) {\n        Logger.log(\"index: \" + index + \" c: \"+ c);\n        currentItemId=id;\n        index++;\n        ent.setStartedByUser(false);\n        XDMApp.getInstance().resumeDownload(id,false);\n        return;\n      }\n    }\n    index++;\n  }\n}\n', '0.42857142857142855', '7', '14');
INSERT INTO `case_study` VALUES ('3039', 'removeFromQueue(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\DownloadQueue.java', 'xdm', '16', '91', '62', '-1000', '4', '0.1687', '0.0845', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void removeFromQueue(String id){\n  int c=0;\n  XDMApp app=XDMApp.getInstance();\n  for (int i=0; i < queuedItems.size(); i++) {\n    if (queuedItems.get(i).equals(id)) {\n      c=i;\n      if (c <= index) {\n        index--;\n      }\n      queuedItems.remove(i);\n      if (id.equals(currentItemId)) {\n        currentItemId=null;\n      }\n      DownloadEntry ent=app.getEntry(id);\n      if (ent != null) {\n        ent.setQueueId(\"\");\n      }\n      QueueManager.getInstance().saveQueues();\n      return;\n    }\n  }\n}\n', '0.6', '5', '6');
INSERT INTO `case_study` VALUES ('3040', 'addToQueue(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\DownloadQueue.java', 'xdm', '9', '24', '12', '-1000', '4', '0.2381', '0.1129', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void addToQueue(String id){\n  if (!queuedItems.contains(id)) {\n    Logger.log(id + \" added to \" + queueId);\n    queuedItems.add(id);\n    DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n    if (ent != null) {\n      ent.setQueueId(queueId);\n    }\n  }\n  QueueManager.getInstance().saveQueues();\n}\n', '0.6666666666666666', '2', '3');
INSERT INTO `case_study` VALUES ('3059', 'hasPendingItems()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\DownloadQueue.java', 'xdm', '7', '17', '13', '-1000', '4', '0.2286', '0.0958', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public boolean hasPendingItems(){\n  if (!running) {\n    return false;\n  }\n  for (  String id : queuedItems) {\n    DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n    if (ent != null) {\n      if (ent.getState() != XDMConstants.FINISHED) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n', '0.6666666666666666', '2', '5');
INSERT INTO `case_study` VALUES ('3066', 'main(String[])', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\Main.java', 'xdm', '10', '41', '37', '-1000', '7', '0.15', '0.0641', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void main(String[] args){\n  Logger.log(\"loading...\");\n  Logger.log(System.getProperty(\"java.version\") + \" \" + System.getProperty(\"os.version\"));\n  try {\n    UIManager.setLookAndFeel(new XDMLookAndFeel());\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  XDMApp.start(args);\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('3072', 'loadQueues()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\QueueManager.java', 'xdm', '39', '542', '343', '-1000', '5', '0.0725', '0.0875', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private void loadQueues(){\n  File file=new File(Config.getInstance().getDataFolder(),\"queues.txt\");\n  DownloadQueue defaultQ=new DownloadQueue(\"\",StringResource.get(\"DEF_QUEUE\"));\n  queueList.add(defaultQ);\n  if (!file.exists()) {\n    return;\n  }\n  SimpleDateFormat dateFormatter=new SimpleDateFormat(\"yyyy-MM-dd\");\n  BufferedReader reader=null;\n  try {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),Charset.forName(\"UTF-8\")));\n    int count=Integer.parseInt(reader.readLine().trim());\n    for (int i=0; i < count; i++) {\n      String id=reader.readLine().trim();\n      String name=reader.readLine().trim();\n      DownloadQueue queue=null;\n      if (\"\".equals(id)) {\n        queue=defaultQ;\n      }\n else {\n        queue=new DownloadQueue(id,name);\n      }\n      int c=Integer.parseInt(reader.readLine().trim());\n      for (int j=0; j < c; j++) {\n        queue.getQueuedItems().add(reader.readLine().trim());\n      }\n      boolean hasStartTime=Integer.parseInt(reader.readLine()) == 1;\n      if (hasStartTime) {\n        queue.setStartTime(Long.parseLong(reader.readLine()));\n        boolean hasEndTime=Integer.parseInt(reader.readLine()) == 1;\n        if (hasEndTime) {\n          queue.setEndTime(Long.parseLong(reader.readLine()));\n        }\n        boolean isPeriodic=Integer.parseInt(reader.readLine()) == 1;\n        queue.setPeriodic(isPeriodic);\n        if (isPeriodic) {\n          queue.setDayMask(Integer.parseInt(reader.readLine()));\n        }\n else {\n          if (Integer.parseInt(reader.readLine()) == 1) {\n            String ln=reader.readLine();\n            queue.setExecDate(dateFormatter.parse(ln));\n          }\n        }\n      }\n      if (queue.getQueueId().length() > 0) {\n        queueList.add(queue);\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  try {\n    reader.close();\n  }\n catch (  Exception e1) {\n  }\n}\n', '0.3333333333333333', '17', '12');
INSERT INTO `case_study` VALUES ('3073', 'saveQueues()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\QueueManager.java', 'xdm', '38', '422', '141', '-1000', '4', '0.1155', '0.1998', '0', '0', '0', '0', '0', '0', '1', '0', '1', '1', 'public void saveQueues(){\n  int count=queueList.size();\n  File file=new File(Config.getInstance().getDataFolder(),\"queues.txt\");\n  BufferedWriter writer=null;\n  String newLine=System.getProperty(\"line.separator\");\n  SimpleDateFormat dateFormatter=new SimpleDateFormat(\"yyyy-MM-dd\");\n  try {\n    writer=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file),Charset.forName(\"UTF-8\")));\n    writer.write(count + newLine);\n    for (int i=0; i < count; i++) {\n      DownloadQueue queue=queueList.get(i);\n      writer.write(queue.getQueueId() + newLine);\n      writer.write(queue.getName() + newLine);\n      ArrayList<String> queuedItems=queue.getQueuedItems();\n      writer.write(queuedItems.size() + newLine);\n      for (int j=0; j < queuedItems.size(); j++) {\n        writer.write(queuedItems.get(j) + newLine);\n      }\n      if (queue.getStartTime() != -1) {\n        writer.write(\"1\" + newLine);\n        writer.write(queue.getStartTime() + newLine);\n        if (queue.getEndTime() != -1) {\n          writer.write(\"1\" + newLine);\n          writer.write(queue.getEndTime() + newLine);\n        }\n else {\n          writer.write(\"0\" + newLine);\n        }\n        writer.write((queue.isPeriodic() ? 1 : 0) + newLine);\n        if (queue.isPeriodic()) {\n          writer.write(queue.getDayMask() + newLine);\n        }\n else {\n          if (queue.getExecDate() != null) {\n            writer.write(\"1\" + newLine);\n            writer.write(dateFormatter.format(queue.getExecDate()) + newLine);\n          }\n else {\n            writer.write(\"0\" + newLine);\n          }\n        }\n      }\n else {\n        writer.write(\"0\" + newLine);\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  if (writer != null) {\n    try {\n      writer.close();\n    }\n catch (    IOException e) {\n      Logger.log(e);\n    }\n  }\n}\n', '0.2727272727272727', '11', '11');
INSERT INTO `case_study` VALUES ('3074', 'removeQueue(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\QueueManager.java', 'xdm', '12', '41', '16', '-1000', '3', '0.2024', '0.1928', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', 'public void removeQueue(String queueId){\n  DownloadQueue q=getQueueById(queueId);\n  if (q == null)   return;\n  if (q.isRunning()) {\n    q.stop();\n  }\n  for (int i=0; i < q.getQueuedItems().size(); i++) {\n    String id=q.getQueuedItems().get(i);\n    DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n    if (ent != null) {\n      ent.setQueueId(\"\");\n    }\n  }\n  queueList.remove(q);\n}\n', '0.5', '5', '5');
INSERT INTO `case_study` VALUES ('3075', 'createNewQueue()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\QueueManager.java', 'xdm', '16', '105', '90', '-1000', '5', '0.1389', '0.0684', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void createNewQueue(){\n  int counter=1;\n  String name=\"\";\n  String qw=StringResource.get(\"Q_WORD\");\n  while (true) {\n    boolean found=false;\n    counter++;\n    for (    DownloadQueue qi : queueList) {\n      if (\"\".equals(qi.getQueueId()))       continue;\n      if ((qw + \" \" + counter).equals(qi.getName())) {\n        found=true;\n        break;\n      }\n    }\n    if (!found) {\n      name=qw + \" \" + counter;\n      break;\n    }\n  }\n  DownloadQueue q=new DownloadQueue(UUID.randomUUID().toString(),name);\n  queueList.add(q);\n  saveQueues();\n}\n', '0.5', '6', '6');
INSERT INTO `case_study` VALUES ('3076', 'fixCorruptEntries(Iterator<String>,XDMApp)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\QueueManager.java', 'xdm', '18', '130', '107', '-1000', '3', '0.1389', '0.0556', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void fixCorruptEntries(Iterator<String> ids,XDMApp app){\n  DownloadQueue dfq=getDefaultQueue();\n  while (ids.hasNext()) {\n    String id=ids.next();\n    DownloadEntry ent=app.getEntry(id);\n    String qId=ent.getQueueId();\n    if (qId == null || getQueueById(qId) == null) {\n      dfq.getQueuedItems().add(id);\n      ent.setQueueId(\"\");\n    }\n  }\n  for (int i=0; i < queueList.size(); i++) {\n    DownloadQueue q=queueList.get(i);\n    ArrayList<String> corruptIds=new ArrayList<String>();\n    for (int k=0; k < q.getQueuedItems().size(); k++) {\n      String id=q.getQueuedItems().get(k);\n      if (app.getEntry(id) == null) {\n        corruptIds.add(id);\n      }\n    }\n    q.getQueuedItems().removeAll(corruptIds);\n  }\n}\n', '0.75', '11', '7');
INSERT INTO `case_study` VALUES ('3080', 'run()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\QueueScheduler.java', 'xdm', '58', '1517', '1381', '-1000', '10', '0.0517', '0.0366', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '@Override public void run(){\n  long lastUpdateChecked=0;\n  try {\n    Calendar cal=Calendar.getInstance();\n    while (!stop) {\n      try {\n        long currentTime=System.currentTimeMillis();\n        if (currentTime - lastKeepAwakePing > 3000) {\n          if (!XDMApp.getInstance().isAllFinished()) {\n            XDMUtils.keepAwakePing();\n            lastKeepAwakePing=currentTime;\n          }\n        }\n        ArrayList<DownloadQueue> queues=QueueManager.getInstance().getQueueList();\n        for (int i=0; i < queues.size(); i++) {\n          DownloadQueue queue=queues.get(i);\n          if (queue.isRunning() || queue.getStartTime() == -1) {\n            continue;\n          }\n          Date now=new Date();\n          cal.setTime(now);\n          Date onlyDate=DateTimeUtils.getDatePart(cal);\n          long seconds=DateTimeUtils.getTimePart(now);\n          if (seconds > queue.getStartTime()) {\n            if (queue.getEndTime() > 0) {\n              if (queue.getEndTime() < seconds) {\n                continue;\n              }\n            }\n          }\n else {\n            continue;\n          }\n          if (queue.isPeriodic()) {\n            int day=cal.get(Calendar.DAY_OF_WEEK);\n            int mask=0x01 << (day - 1);\n            if ((queue.getDayMask() & mask) != mask) {\n              continue;\n            }\n          }\n else {\n            Date execDate=queue.getExecDate();\n            if (execDate == null) {\n              continue;\n            }\n            cal.setTime(execDate);\n            Date onlyDate2=DateTimeUtils.getDatePart(cal);\n            if (onlyDate.compareTo(onlyDate2) < 0) {\n              continue;\n            }\n          }\n          queue.start();\n        }\n        for (int i=0; i < queues.size(); i++) {\n          DownloadQueue queue=queues.get(i);\n          if (!queue.isRunning()) {\n            continue;\n          }\n          if (queue.getEndTime() < 1) {\n            continue;\n          }\n          Date now=new Date();\n          long seconds=DateTimeUtils.getTimePart(now);\n          if (queue.getEndTime() < seconds) {\n            queue.stop();\n          }\n        }\n        Thread.sleep(1000);\n      }\n catch (      Exception e2) {\n        Logger.log(\"error in scheduler: \" + e2);\n        Logger.log(e2);\n      }\n      long now=System.currentTimeMillis();\n      if (now - lastUpdateChecked > 3600 * 1000) {\n        int stat=UpdateChecker.getUpdateStat();\nswitch (stat) {\ncase UpdateChecker.NO_UPDATE_AVAILABLE:\n          break;\ncase UpdateChecker.APP_UPDATE_AVAILABLE:\n        XDMApp.getInstance().notifyAppUpdate();\n      break;\ncase UpdateChecker.COMP_NOT_INSTALLED:\n    XDMApp.getInstance().notifyComponentInstall();\n  break;\ncase UpdateChecker.COMP_UPDATE_AVAILABLE:\nXDMApp.getInstance().notifyComponentUpdate();\nbreak;\n}\n}\nlastUpdateChecked=now;\n}\n}\n catch (Exception e) {\nLogger.log(\"error in scheduler: \" + e);\nLogger.log(e);\n}\n}\n', '0.35', '21', '25');
INSERT INTO `case_study` VALUES ('3085', 'showMainWindow()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '6', '9', '3', '-1000', '3', '0.4167', '0.3214', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', 'public void showMainWindow(){\n  if (mainWindow == null) {\n    mainWindow=new MainWindow();\n  }\n  mainWindow.setVisible(true);\n  mainWindow.toFront();\n}\n', '1', '0', '2');
INSERT INTO `case_study` VALUES ('3086', 'XDMApp()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '14', '90', '89', '-1000', '13', '0.0774', '0.0038', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'private XDMApp(){\n  listChangeListeners=new ArrayList<ListChangeListener>();\n  downloads=new HashMap<String,DownloadEntry>();\n  downloaders=new HashMap<String,Downloader>();\n  downloadWindows=new HashMap<String,DownloadWindow>();\n  loadDownloadList();\n  lastSaved=System.currentTimeMillis();\n  pendingDownloads=new ArrayList<String>();\n  qMgr=QueueManager.getInstance();\n  qMgr.fixCorruptEntries(getDownloadIds(),this);\n  QueueScheduler.getInstance().start();\n  Config.getInstance().load();\n  HttpContext.getInstance().init();\n}\n', '0.5', '0', '1');
INSERT INTO `case_study` VALUES ('3088', 'downloadFinished(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '24', '241', '206', '-1000', '9', '0.1204', '0.0656', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void downloadFinished(String id){\n  DownloadEntry ent=downloads.get(id);\n  ent.setState(XDMConstants.FINISHED);\n  Downloader d=downloaders.remove(id);\n  if (d != null && d.getSize() < 0) {\n    ent.setSize(d.getDownloaded());\n  }\n  DownloadWindow wnd=downloadWindows.get(id);\n  if (wnd != null) {\n    wnd.close(XDMConstants.FINISHED,0);\n    downloadWindows.remove(id);\n    if (ent.isStartedByUser()) {\n      new DownloadCompleteWnd(ent.getFile(),ent.getFolder()).setVisible(true);\n    }\n  }\n  notifyListeners(null);\n  saveDownloadList();\n  if (Config.getInstance().isExecAntivir()) {\n    if (!StringUtils.isNullOrEmptyOrBlank(Config.getInstance().getAntivirExe())) {\n      execAntivir();\n    }\n  }\n  processNextItem(id);\n  if (isAllFinished()) {\n    if (Config.getInstance().isAutoShutdown()) {\n      initShutdown();\n    }\n    if (Config.getInstance().isExecCmd()) {\n      execCmd();\n    }\n  }\n}\n', '0.4', '4', '10');
INSERT INTO `case_study` VALUES ('3089', 'downloadFailed(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '16', '91', '62', '-1000', '5', '0.1641', '0.1191', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void downloadFailed(String id){\n  Downloader d=downloaders.remove(id);\n  if (id == null) {\n    Logger.log(\"Download failed, id null\");\n    return;\n  }\n  DownloadWindow wnd=downloadWindows.get(id);\n  if (wnd != null) {\n    wnd.close(XDMConstants.FAILED,d.getErrorCode());\n    downloadWindows.remove(id);\n  }\n else {\n    Logger.log(\"Wnd is null!!!\");\n  }\n  DownloadEntry ent=downloads.get(id);\n  ent.setState(XDMConstants.PAUSED);\n  notifyListeners(id);\n  saveDownloadList();\n  Logger.log(\"removed\");\n  processNextItem(id);\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('3090', 'downloadStopped(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '12', '47', '28', '-1000', '4', '0.2083', '0.1315', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void downloadStopped(String id){\n  downloaders.remove(id);\n  DownloadWindow wnd=downloadWindows.get(id);\n  if (wnd != null) {\n    wnd.close(XDMConstants.PAUSED,0);\n    downloadWindows.remove(id);\n  }\n  DownloadEntry ent=downloads.get(id);\n  ent.setState(XDMConstants.PAUSED);\n  notifyListeners(id);\n  saveDownloadList();\n  processNextItem(id);\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('3091', 'downloadConfirmed(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '15', '68', '31', '-1000', '4', '0.1852', '0.1342', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void downloadConfirmed(String id){\n  Logger.log(\"confirmed \" + id);\n  Downloader d=downloaders.get(id);\n  DownloadEntry ent=downloads.get(id);\n  ent.setSize(d.getSize());\n  if (d.isFileNameChanged()) {\n    ent.setFile(d.getNewFile());\n    ent.setCategory(XDMUtils.findCategory(d.getNewFile()));\n    updateFileName(ent);\n  }\n  DownloadWindow wnd=downloadWindows.get(id);\n  if (wnd != null) {\n    wnd.update(d,ent.getFile());\n  }\n  notifyListeners(id);\n  saveDownloadList();\n}\n', '0.5', '4', '3');
INSERT INTO `case_study` VALUES ('3092', 'downloadUpdated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '18', '115', '77', '-1000', '6', '0.1611', '0.1213', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void downloadUpdated(String id){\n  DownloadEntry ent=downloads.get(id);\n  Downloader d=downloaders.get(id);\n  if (d == null) {\n    Logger.log(\"################# sync error ##############\");\n  }\n  ent.setSize(d.getSize());\n  ent.setDownloaded(d.getDownloaded());\n  ent.setProgress(d.getProgress());\n  ent.setState(d.isAssembling() ? XDMConstants.ASSEMBLING : XDMConstants.DOWNLOADING);\n  DownloadWindow wnd=downloadWindows.get(id);\n  if (wnd != null) {\n    wnd.update(d,ent.getFile());\n  }\n  notifyListeners(id);\n  long now=System.currentTimeMillis();\n  if (now - lastSaved > 5000) {\n    saveDownloadList();\n    lastSaved=now;\n  }\n}\n', '0.36363636363636365', '5', '5');
INSERT INTO `case_study` VALUES ('3094', 'addDownload(HttpMetadata,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '22', '230', '229', '-1000', '21', '0.0682', '0.0122', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public void addDownload(final HttpMetadata metadata,final String file){\n  if (refreshCallback != null) {\n    if (refreshCallback.isValidLink(metadata)) {\n      return;\n    }\n  }\n  SwingUtilities.invokeLater(new Runnable(){\n    @Override public void run(){\n      new NewDownloadWindow(metadata,file).setVisible(true);\n    }\n  }\n);\n}\n', '1', '2', '3');
INSERT INTO `case_study` VALUES ('3098', 'addMedia(HttpMetadata,String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '8', '28', '28', '-1000', '8', '0.125', '0', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public void addMedia(final HttpMetadata metadata,final String file,final String info){\n  if (Config.getInstance().isShowVideoNotification()) {\n    SwingUtilities.invokeLater(new Runnable(){\n      @Override public void run(){\n        VideoPopup.getInstance().addVideo(metadata,file,info);\n      }\n    }\n);\n  }\n}\n', '0.5', '3', '2');
INSERT INTO `case_study` VALUES ('3100', 'createDownload(String,String,HttpMetadata,boolean,String,int,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '23', '172', '91', '-1000', '5', '0.1204', '0.1323', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void createDownload(String file,String folder,HttpMetadata metadata,boolean now,String queueId,int formatIndex,int streamIndex){\n  metadata.save();\n  DownloadEntry ent=new DownloadEntry();\n  ent.setId(metadata.getId());\n  ent.setOutputFormatIndex(formatIndex);\n  ent.setState(XDMConstants.PAUSED);\n  ent.setFile(file);\n  ent.setFolder(folder);\n  ent.setCategory(XDMUtils.findCategory(file));\n  ent.setDate(System.currentTimeMillis());\n  putInQueue(queueId,ent);\n  ent.setStartedByUser(now);\n  downloads.put(metadata.getId(),ent);\n  saveDownloadList();\n  if (!now) {\n    DownloadQueue q=qMgr.getQueueById(queueId);\n    if (q != null && q.isRunning()) {\n      Logger.log(\"Queue is running, if no pending download pickup next available download\");\n      q.next();\n    }\n  }\n  if (now) {\n    startDownload(metadata.getId(),metadata,ent,streamIndex);\n  }\n  notifyListeners(null);\n}\n', '0.375', '9', '5');
INSERT INTO `case_study` VALUES ('3101', 'startDownload(String,HttpMetadata,DownloadEntry,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '34', '404', '247', '-1000', '3', '0.1046', '0.0969', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private void startDownload(String id,HttpMetadata metadata,DownloadEntry ent,int streams){\n  if (!checkAndBufferRequests(id)) {\n    Logger.log(\"starting \" + id + \" with: \"+ metadata+ \" is dash: \"+ (metadata instanceof DashMetadata));\n    Downloader d=null;\n    if (metadata instanceof DashMetadata) {\n      Logger.log(\"Dash download with stream: \" + streams);\n      if (streams == 1) {\n        DashMetadata dm=(DashMetadata)metadata;\n        dm.setUrl(dm.getUrl2());\n        dm.setUrl2(null);\n      }\n else       if (streams == 2) {\n        DashMetadata dm=(DashMetadata)metadata;\n        dm.setUrl2(null);\n      }\n else {\n        Logger.log(\"Dash download created\");\n        DashMetadata dm=(DashMetadata)metadata;\n        d=new DashDownloader(id,Config.getInstance().getTemporaryFolder(),dm);\n      }\n    }\n    if (metadata instanceof HlsMetadata) {\n      Logger.log(\"Hls download created\");\n      d=new HlsDownloader(id,Config.getInstance().getTemporaryFolder(),(HlsMetadata)metadata);\n    }\n    if (metadata instanceof HdsMetadata) {\n      Logger.log(\"Hls download created\");\n      d=new HdsDownloader(id,Config.getInstance().getTemporaryFolder(),(HdsMetadata)metadata);\n    }\n    if (d == null) {\n      d=new HttpDownloader(id,Config.getInstance().getTemporaryFolder(),metadata);\n    }\n    d.setOuputMediaFormat(ent.getOutputFormatIndex());\n    downloaders.put(id,d);\n    d.registerListener(this);\n    ent.setState(XDMConstants.DOWNLOADING);\n    d.start();\n    if (Config.getInstance().showDownloadWindow()) {\n      DownloadWindow wnd=new DownloadWindow(id,this);\n      downloadWindows.put(id,wnd);\n      wnd.setVisible(true);\n    }\n  }\n else {\n    Logger.log(id + \": Maximum download limit reached, queueing request\");\n  }\n}\n', '0.6470588235294118', '9', '9');
INSERT INTO `case_study` VALUES ('3102', 'pauseDownload(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '6', '9', '3', '-1000', '3', '0.3333', '0.2857', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', 'public void pauseDownload(String id){\n  Downloader d=downloaders.get(id);\n  if (d != null) {\n    d.stop();\n    d.unregisterListener();\n  }\n}\n', '0.5', '2', '2');
INSERT INTO `case_study` VALUES ('3103', 'resumeDownload(String,boolean)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '34', '368', '175', '-1000', '4', '0.1074', '0.1083', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'public void resumeDownload(String id,boolean startedByUser){\n  DownloadEntry ent=downloads.get(id);\n  ent.setStartedByUser(startedByUser);\n  if (ent.getState() == XDMConstants.PAUSED || ent.getState() == XDMConstants.FAILED) {\n    if (!checkAndBufferRequests(id)) {\n      ent.setState(XDMConstants.DOWNLOADING);\n      HttpMetadata metadata=HttpMetadata.load(id);\n      if (Config.getInstance().showDownloadWindow() && ent.isStartedByUser()) {\n        DownloadWindow wnd=new DownloadWindow(id,this);\n        downloadWindows.put(id,wnd);\n        wnd.setVisible(true);\n      }\n      Downloader d=null;\n      if (metadata instanceof DashMetadata) {\n        DashMetadata dm=(DashMetadata)metadata;\n        Logger.log(\"Dash download- url1: \" + dm.getUrl() + \" url2: \"+ dm.getUrl2());\n        d=new DashDownloader(id,Config.getInstance().getTemporaryFolder(),dm);\n      }\n      if (metadata instanceof HlsMetadata) {\n        HlsMetadata hm=(HlsMetadata)metadata;\n        Logger.log(\"HLS download- url1: \" + hm.getUrl());\n        d=new HlsDownloader(id,Config.getInstance().getTemporaryFolder(),hm);\n      }\n      if (metadata instanceof HdsMetadata) {\n        HdsMetadata hm=(HdsMetadata)metadata;\n        Logger.log(\"HLS download- url1: \" + hm.getUrl());\n        d=new HdsDownloader(id,Config.getInstance().getTemporaryFolder(),hm);\n      }\n      if (d == null) {\n        Logger.log(\"normal download\");\n        d=new HttpDownloader(id,Config.getInstance().getTemporaryFolder(),metadata);\n      }\n      downloaders.put(id,d);\n      d.setOuputMediaFormat(ent.getOutputFormatIndex());\n      d.registerListener(this);\n      d.resume();\n    }\n else {\n      Logger.log(id + \": Maximum download limit reached, queueing request\");\n    }\n    notifyListeners(null);\n  }\n}\n', '0.55', '9', '10');
INSERT INTO `case_study` VALUES ('3104', 'restartDownload(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '7', '15', '9', '-1000', '3', '0.3333', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void restartDownload(String id){\n  DownloadEntry ent=downloads.get(id);\n  if (ent.getState() == XDMConstants.PAUSED || ent.getState() == XDMConstants.FAILED || ent.getState() == XDMConstants.FINISHED) {\n    ent.setState(XDMConstants.PAUSED);\n    clearData(id);\n    resumeDownload(id,true);\n  }\n else {\n    return;\n  }\n}\n', '0.5', '2', '4');
INSERT INTO `case_study` VALUES ('3110', 'clearData(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '8', '25', '22', '-1000', '3', '0.2083', '0.0909', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void clearData(String id){\n  File folder=new File(Config.getInstance().getTemporaryFolder(),id);\n  File[] files=folder.listFiles();\n  if (files != null) {\n    for (int i=0; i < files.length; i++) {\n      files[i].delete();\n    }\n  }\n  folder.delete();\n}\n', '0.5', '4', '3');
INSERT INTO `case_study` VALUES ('3114', 'loadDownloadList(File)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '45', '748', '506', '-1000', '5', '0.088', '0.1349', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public void loadDownloadList(File file){\n  if (!file.exists()) {\n    return;\n  }\n  SimpleDateFormat dateFormat=new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n  BufferedReader reader=null;\n  try {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),Charset.forName(\"UTF-8\")));\n    int count=Integer.parseInt(reader.readLine().trim());\n    for (int i=0; i < count; i++) {\n      int fieldCount=Integer.parseInt(reader.readLine().trim());\n      DownloadEntry ent=new DownloadEntry();\n      for (int j=0; j < fieldCount; j++) {\n        String ln=reader.readLine();\n        int index=ln.indexOf(\":\");\n        if (index > 0) {\n          String key=ln.substring(0,index).trim();\n          String val=ln.substring(index + 1).trim();\n          if (key.equals(\"id\")) {\n            ent.setId(val);\n          }\n          if (key.equals(\"file\")) {\n            ent.setFile(val);\n          }\n          if (key.equals(\"category\")) {\n            ent.setCategory(Integer.parseInt(val));\n          }\n          if (key.equals(\"state\")) {\n            int state=Integer.parseInt(val);\n            ent.setState(state == XDMConstants.FINISHED ? state : XDMConstants.PAUSED);\n          }\n          if (key.equals(\"folder\")) {\n            ent.setFolder(val);\n          }\n          if (key.equals(\"date\")) {\n            ent.setDate(dateFormat.parse(val).getTime());\n          }\n          if (key.equals(\"downloaded\")) {\n            ent.setDownloaded(Long.parseLong(val));\n          }\n          if (key.equals(\"size\")) {\n            ent.setSize(Long.parseLong(val));\n          }\n          if (key.equals(\"progress\")) {\n            ent.setProgress(Integer.parseInt(val));\n          }\n          if (key.equals(\"queueid\")) {\n            ent.setQueueId(val);\n          }\n          if (key.equals(\"formatIndex\")) {\n            ent.setOutputFormatIndex(Integer.parseInt(val));\n          }\n        }\n      }\n      downloads.put(ent.getId(),ent);\n    }\n    reader.close();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  try {\n    reader.close();\n  }\n catch (  Exception e1) {\n  }\n}\n', '0.14285714285714285', '15', '19');
INSERT INTO `case_study` VALUES ('3116', 'saveDownloadList(File)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '45', '748', '506', '-1000', '5', '0.0944', '0.1557', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public void saveDownloadList(File file){\n  int count=downloads.size();\n  BufferedWriter writer=null;\n  SimpleDateFormat dateFormat=new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n  String newLine=System.getProperty(\"line.separator\");\n  try {\n    writer=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file),Charset.forName(\"UTF-8\")));\n    writer.write(count + \"\");\n    writer.newLine();\n    Iterator<String> keyIterator=downloads.keySet().iterator();\n    while (keyIterator.hasNext()) {\n      String key=keyIterator.next();\n      DownloadEntry ent=downloads.get(key);\n      int c=0;\n      StringBuffer sb=new StringBuffer();\n      sb.append(\"id: \" + ent.getId() + newLine);\n      c++;\n      sb.append(\"file: \" + ent.getFile() + newLine);\n      c++;\n      sb.append(\"category: \" + ent.getCategory() + newLine);\n      c++;\n      sb.append(\"state: \" + ent.getState() + newLine);\n      c++;\n      sb.append(\"folder: \" + ent.getFolder() + newLine);\n      c++;\n      sb.append(\"date: \" + dateFormat.format(new Date(ent.getDate())) + newLine);\n      c++;\n      sb.append(\"downloaded: \" + ent.getDownloaded() + newLine);\n      c++;\n      sb.append(\"size: \" + ent.getSize() + newLine);\n      c++;\n      sb.append(\"progress: \" + ent.getProgress() + newLine);\n      c++;\n      if (ent.getQueueId() != null) {\n        sb.append(\"queueid: \" + ent.getQueueId() + newLine);\n        c++;\n      }\n      sb.append(\"formatIndex: \" + ent.getOutputFormatIndex() + newLine);\n      c++;\n      writer.write(c + newLine);\n      writer.write(sb.toString());\n    }\n    writer.close();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    try {\n      writer.close();\n    }\n catch (    Exception e1) {\n    }\n  }\n}\n', '0.16666666666666666', '12', '5');
INSERT INTO `case_study` VALUES ('3117', 'hidePrgWnd(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '6', '11', '7', '-1000', '3', '0.3889', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'public void hidePrgWnd(String id){\n  DownloadWindow wnd=downloadWindows.get(id);\n  if (wnd != null) {\n    downloadWindows.remove(id);\n    wnd.close(XDMConstants.PAUSED,0);\n  }\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('3119', 'checkAndBufferRequests(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '7', '14', '7', '-1000', '3', '0.3429', '0.1575', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private synchronized boolean checkAndBufferRequests(String id){\n  int actCount=getActiveDownloadCount();\n  if (Config.getInstance().getMaxDownloads() > 0 && actCount >= Config.getInstance().getMaxDownloads()) {\n    Logger.log(\"active: \" + actCount + \" max: \"+ Config.getInstance().getMaxDownloads());\n    if (!pendingDownloads.contains(id)) {\n      pendingDownloads.add(id);\n    }\n    return true;\n  }\n  return false;\n}\n', '0.6666666666666666', '2', '4');
INSERT INTO `case_study` VALUES ('3120', 'processNextItem(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '12', '49', '32', '-1000', '4', '0.2708', '0.1521', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private synchronized void processNextItem(String lastId){\n  processPendingRequests();\n  if (lastId == null)   return;\n  DownloadEntry ent=getEntry(lastId);\n  if (ent == null) {\n    return;\n  }\n  DownloadQueue queue=null;\n  if (\"\".equals(ent.getQueueId())) {\n    queue=qMgr.getDefaultQueue();\n  }\n else {\n    queue=qMgr.getQueueById(ent.getQueueId());\n  }\n  if (queue != null && queue.isRunning()) {\n    queue.next();\n  }\n}\n', '0.6', '3', '6');
INSERT INTO `case_study` VALUES ('3121', 'processPendingRequests()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '16', '87', '54', '-1000', '3', '0.1667', '0.0932', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void processPendingRequests(){\n  int activeCount=getActiveDownloadCount();\n  int maxDownloadCount=Config.getInstance().getMaxDownloads();\n  List<String> tobeStartedIds=new ArrayList<String>();\n  if (maxDownloadCount - activeCount > 0) {\n    for (int i=0; i < Math.min(maxDownloadCount,pendingDownloads.size()); i++) {\n      String ent=pendingDownloads.get(i);\n      tobeStartedIds.add(ent);\n    }\n  }\n  if (tobeStartedIds.size() > 0) {\n    for (int i=0; i < tobeStartedIds.size(); i++) {\n      String id=tobeStartedIds.get(i);\n      pendingDownloads.remove(id);\n      DownloadEntry ent=getEntry(id);\n      if (ent != null) {\n        resumeDownload(id,ent.isStartedByUser());\n      }\n    }\n  }\n}\n', '0.6666666666666666', '8', '6');
INSERT INTO `case_study` VALUES ('3122', 'queueItemPending(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '7', '15', '9', '-1000', '2', '0.2857', '0.1206', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public boolean queueItemPending(String queueId){\n  if (queueId == null)   return false;\n  for (int i=0; i < pendingDownloads.size(); i++) {\n    String id=pendingDownloads.get(i);\n    DownloadEntry ent=getEntry(id);\n    if (ent == null || ent.getQueueId() == null)     continue;\n    if (ent.getQueueId().equals(queueId)) {\n      return true;\n    }\n  }\n  return false;\n}\n', '1', '4', '6');
INSERT INTO `case_study` VALUES ('3125', 'putInQueue(String,DownloadEntry)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '14', '63', '35', '-1000', '3', '0.2232', '0.1148', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void putInQueue(String queueId,DownloadEntry ent){\n  DownloadQueue q=getQueueById(queueId);\n  String id=ent.getId();\n  if (q == null) {\n    Logger.log(\"No queue found for: \'\" + queueId + \"\'\");\n    return;\n  }\n  String qid=ent.getQueueId();\n  DownloadQueue oldQ=getQueueById(qid);\n  Logger.log(\"Adding to: \'\" + queueId + \"\'\");\n  if (!q.getQueueId().equals(qid)) {\n    if (oldQ != null) {\n      oldQ.removeFromQueue(id);\n    }\n    ent.setQueueId(queueId);\n    q.addToQueue(id);\n  }\n}\n', '0.42857142857142855', '6', '4');
INSERT INTO `case_study` VALUES ('3126', 'compare(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '7', '15', '9', '-1000', '3', '0.2857', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public int compare(String key1,String key2){\n  DownloadEntry ent1=getEntry(key1);\n  DownloadEntry ent2=getEntry(key2);\n  if (ent1 == null)   return -1;\n  if (ent2 == null)   return 1;\n  if (ent1.getDate() > ent2.getDate()) {\n    return 1;\n  }\n else   if (ent1.getDate() < ent2.getDate()) {\n    return -1;\n  }\n else {\n    return 0;\n  }\n}\n', '1', '4', '5');
INSERT INTO `case_study` VALUES ('3128', 'isAllFinished()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '7', '19', '17', '-1000', '5', '0.25', '0.0556', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public boolean isAllFinished(){\n  if (getActiveDownloadCount() != 0) {\n    return false;\n  }\n  if (pendingDownloads.size() != 0) {\n    return false;\n  }\n  for (int i=0; i < QueueManager.getInstance().getQueueList().size(); i++) {\n    DownloadQueue q=QueueManager.getInstance().getQueueList().get(i);\n    if (q.hasPendingItems()) {\n      return false;\n    }\n  }\n  return true;\n}\n', '0.6666666666666666', '2', '5');
INSERT INTO `case_study` VALUES ('3130', 'deleteDownloads(ArrayList<String>)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '22', '169', '107', '-1000', '5', '0.157', '0.1086', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public int deleteDownloads(ArrayList<String> ids){\n  int c=0;\n  for (int i=0; i < ids.size(); i++) {\n    String id=ids.get(i);\n    DownloadEntry ent=getEntry(id);\n    if (ent != null) {\n      if (ent.getState() == XDMConstants.FINISHED || ent.getState() == XDMConstants.PAUSED || ent.getState() == XDMConstants.FAILED) {\n        this.downloads.remove(id);\n        if (pendingDownloads.contains(id)) {\n          pendingDownloads.remove(id);\n        }\n        String qId=ent.getQueueId();\n        if (qId != null) {\n          DownloadQueue q=getQueueById(qId);\n          if (q != null) {\n            if (q.getQueueId().length() > 0) {\n              q.removeFromQueue(id);\n            }\n          }\n        }\n        deleteFiles(id);\n        c++;\n      }\n    }\n  }\n  saveDownloadList();\n  notifyListeners(null);\n  return ids.size() - c;\n}\n', '0.5', '8', '10');
INSERT INTO `case_study` VALUES ('3131', 'deleteFiles(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '14', '56', '21', '-1000', '3', '0.2653', '0.1528', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void deleteFiles(String id){\n  Logger.log(\"Deleting metadata for \" + id);\n  File mf=new File(Config.getInstance().getMetadataFolder(),id);\n  boolean deleted=mf.delete();\n  Logger.log(\"Deleted manifest \" + id + \" \"+ deleted);\n  File df=new File(Config.getInstance().getTemporaryFolder(),id);\n  File[] files=df.listFiles();\n  if (files != null && files.length > 0) {\n    for (    File f : files) {\n      deleted=f.delete();\n      Logger.log(\"Deleted tmp file \" + id + \" \"+ deleted);\n    }\n  }\n  deleted=df.delete();\n  Logger.log(\"Deleted tmp folder \" + id + \" \"+ deleted);\n}\n', '0.5', '6', '4');
INSERT INTO `case_study` VALUES ('3136', 'deleteCompleted()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '10', '32', '19', '-1000', '3', '0.2667', '0.0962', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void deleteCompleted(){\n  Iterator<String> allIds=downloads.keySet().iterator();\n  ArrayList<String> idList=new ArrayList<String>();\n  while (allIds.hasNext()) {\n    String id=allIds.next();\n    DownloadEntry ent=downloads.get(id);\n    if (ent.getState() == XDMConstants.FINISHED) {\n      idList.add(id);\n    }\n  }\n  deleteDownloads(idList);\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('3137', 'promptCredential(String,String,boolean)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '13', '56', '34', '-1000', '4', '0.1692', '0.1108', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public boolean promptCredential(String id,String msg,boolean proxy){\n  DownloadEntry ent=getEntry(id);\n  if (ent == null)   return false;\n  if (!ent.isStartedByUser())   return false;\n  PasswordAuthentication pauth=getCredential(msg,proxy);\n  if (pauth == null) {\n    return false;\n  }\n  if (proxy) {\n    Config.getInstance().setProxyUser(pauth.getUserName());\n    if (pauth.getPassword() != null) {\n      Config.getInstance().setProxyPass(new String(pauth.getPassword()));\n    }\n  }\n else {\n    Logger.log(\"saving password for: \" + msg);\n    CredentialManager.getInstance().addCredentialForHost(msg,pauth);\n  }\n  return true;\n}\n', '0.5714285714285714', '5', '6');
INSERT INTO `case_study` VALUES ('3141', 'updateFileName(DownloadEntry)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\XDMApp.java', 'xdm', '15', '72', '39', '-1000', '3', '0.2074', '0.104', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void updateFileName(DownloadEntry ent){\n  Logger.log(\"checking for same named file on disk...\");\n  String id=ent.getId();\n  File f=new File(getOutputFolder(id),ent.getFile());\n  int c=1;\n  while (f.exists()) {\n    String ext=XDMUtils.getExtension(f.getAbsolutePath());\n    if (ext == null) {\n      ext=\"\";\n    }\n    String f2=XDMUtils.getFileNameWithoutExtension(ent.getFile());\n    f=new File(getOutputFolder(id),f2 + \"_\" + c+ ext);\n    c++;\n  }\n  Logger.log(\"Updating file name- old: \" + ent.getFile() + \" new: \"+ f.getName());\n  ent.setFile(f.getName());\n}\n', '0.5', '6', '3');
INSERT INTO `case_study` VALUES ('3155', 'connect()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\AbstractChannel.java', 'xdm', '11', '43', '31', '-1000', '5', '0.2182', '0.1186', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private boolean connect(){\n  try {\n    chunk.getChunkListener().synchronize();\n  }\n catch (  NullPointerException e) {\n    Logger.log(\"stopped chunk \" + chunk);\n    return false;\n  }\n  if (connectImpl()) {\n    in=getInputStreamImpl();\n    long length=getLengthImpl();\n    if (chunk.getLength() < 0) {\n      Logger.log(\"Setting length of \" + chunk.getId() + \" to: \"+ length);\n      chunk.setLength(length);\n    }\n    return true;\n  }\n else {\n    return false;\n  }\n}\n', '0.5', '2', '4');
INSERT INTO `case_study` VALUES ('3156', 'run()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\AbstractChannel.java', 'xdm', '16', '104', '88', '-1000', '6', '0.1875', '0.1091', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void run(){\n  try {\n    while (!stop) {\n      if (!connect()) {\n        if (!stop) {\n          chunk.transferFailed(errorMessage);\n        }\n        close();\n        break;\n      }\n      chunk.transferInitiated();\n      if (chunk == null) {\n        continue;\n      }\n      if (((chunk.getLength() > 0) ? copyStream1() : copyStream2())) {\n        break;\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.log(\"Internal problem: \" + e);\n    Logger.log(e);\n    if (!stop) {\n      chunk.transferFailed(errorMessage);\n    }\n  }\n finally {\n    close();\n  }\n}\n', '0.5', '1', '9');
INSERT INTO `case_study` VALUES ('3158', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\AbstractChannel.java', 'xdm', '6', '13', '11', '-1000', '4', '0.2778', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void stop(){\n  stop=true;\n  this.chunk=null;\n  if (this.t != null) {\n    t.interrupt();\n  }\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('3159', 'copyStream1()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\AbstractChannel.java', 'xdm', '33', '484', '440', '-1000', '14', '0.0854', '0.0529', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', 'private boolean copyStream1(){\n  try {\n    while (!stop) {\n      chunk.getChunkListener().synchronize();\n      long rem=chunk.getLength() - chunk.getDownloaded();\n      if (rem == 0) {\n        if (this instanceof HttpChannel) {\n          if (((HttpChannel)this).isFinished()) {\n            close();\n          }\n        }\n else {\n          close();\n        }\n        if (chunk.transferComplete()) {\n          Logger.log(chunk + \" complete and closing \" + chunk.getDownloaded()+ \" \"+ chunk.getLength());\n          return true;\n        }\n      }\n      if (stop) {\n        return false;\n      }\n      int diff=(int)(rem > buf.length ? buf.length : rem);\n      int x=in.read(buf,0,diff);\n      if (stop)       return false;\n      if (x == -1) {\n        throw new Exception(\"Unexpected eof\");\n      }\n      chunk.getOutStream().write(buf,0,x);\n      if (stop)       return false;\n      chunk.setDownloaded(chunk.getDownloaded() + x);\n      chunk.transferring();\n    }\n    return false;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    return false;\n  }\n finally {\n    close();\n  }\n}\n', '0.4', '4', '12');
INSERT INTO `case_study` VALUES ('3160', 'copyStream2()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\AbstractChannel.java', 'xdm', '14', '73', '55', '-1000', '6', '0.1905', '0.1259', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private boolean copyStream2(){\n  try {\n    while (!stop) {\n      chunk.getChunkListener().synchronize();\n      int x=in.read(buf,0,buf.length);\n      if (stop)       return false;\n      if (x == -1) {\n        chunk.transferComplete();\n        return true;\n      }\n      chunk.getOutStream().write(buf,0,x);\n      if (stop)       return false;\n      chunk.setDownloaded(chunk.getDownloaded() + x);\n      chunk.transferring();\n    }\n    return false;\n  }\n catch (  Exception e) {\n    return false;\n  }\n finally {\n    close();\n  }\n}\n', '0.2857142857142857', '2', '6');
INSERT INTO `case_study` VALUES ('3179', 'retryFailedChunks(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\Downloader.java', 'xdm', '15', '75', '45', '-1000', '4', '0.1905', '0.1619', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'protected synchronized int retryFailedChunks(int rem) throws IOException {\n  if (stopFlag)   return 0;\n  int count=0;\n  int totalInactive=findTotalInactiveChunk();\n  Logger.log(\"Total inactive chunks: \" + totalInactive);\n  if (totalInactive > rem) {\n    totalInactive=rem;\n  }\n  if (totalInactive > 0) {\n    for (; totalInactive > 0; totalInactive--) {\n      Segment c=findInactiveChunk();\n      if (c != null) {\n        c.download(this);\n        count++;\n      }\n else {\n        Logger.log(\"$$$ debug rem:\" + rem);\n      }\n    }\n  }\n  return count;\n}\n', '1', '4', '6');
INSERT INTO `case_study` VALUES ('3180', 'findInactiveChunk()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\Downloader.java', 'xdm', '6', '11', '7', '-1000', '3', '0.3333', '0.1556', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'protected Segment findInactiveChunk(){\n  if (stopFlag)   return null;\n  for (int i=0; i < chunks.size(); i++) {\n    Segment c=chunks.get(i);\n    if (c.isFinished() || c.isActive())     continue;\n    return c;\n  }\n  return null;\n}\n', '0.5', '2', '5');
INSERT INTO `case_study` VALUES ('3181', 'findTotalInactiveChunk()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\Downloader.java', 'xdm', '8', '23', '18', '-1000', '4', '0.2813', '0.1481', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'protected int findTotalInactiveChunk(){\n  int count=0;\n  for (int i=0; i < chunks.size(); i++) {\n    Segment c=chunks.get(i);\n    if (c.isFinished() || c.isActive())     continue;\n    count++;\n  }\n  return count;\n}\n', '0.5', '3', '4');
INSERT INTO `case_study` VALUES ('3185', 'allFinished()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\Downloader.java', 'xdm', '6', '9', '3', '-1000', '3', '0.4444', '0.2143', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'protected boolean allFinished(){\n  if (chunks.size() > 0) {\n    for (int i=0; i < chunks.size(); i++) {\n      Segment chunk=chunks.get(i);\n      if (!chunk.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n else {\n    return false;\n  }\n}\n', '1', '2', '4');
INSERT INTO `case_study` VALUES ('3187', 'cleanup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\Downloader.java', 'xdm', '7', '18', '15', '-1000', '3', '0.2286', '0.0667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void cleanup(){\n  File dir=new File(folder);\n  File[] files=dir.listFiles();\n  for (int i=0; i < files.length; i++) {\n    Logger.log(\"Delete: \" + files[i] + \" [\"+ files[i].length()+ \"] \"+ files[i].delete());\n  }\n  new File(folder).delete();\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('3189', 'chunkFailed(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\Downloader.java', 'xdm', '20', '142', '94', '-1000', '4', '0.1308', '0.1257', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override public synchronized void chunkFailed(String id,String reason){\n  if (stopFlag)   return;\n  int err=0;\n  for (int i=0; i < chunks.size(); i++) {\n    Segment chunk=chunks.get(i);\n    if (chunk.isActive()) {\n      return;\n    }\n    if (chunk.getErrorCode() != 0) {\n      err=chunk.getErrorCode();\n    }\n  }\n  if (err == XDMConstants.ERR_INVALID_RESP) {\n    if (downloaded > 0) {\n      if (length > 0) {\n        if (chunks.size() > 1) {\n          this.errorCode=XDMConstants.ERR_SESSION_FAILED;\n        }\n else {\n          this.errorCode=XDMConstants.ERR_NO_RESUME;\n        }\n      }\n else {\n        this.errorCode=XDMConstants.ERR_NO_RESUME;\n      }\n    }\n else {\n      this.errorCode=XDMConstants.ERR_INVALID_RESP;\n    }\n  }\n else {\n    Logger.log(\"Setting final error code: \" + err);\n    this.errorCode=err;\n  }\n  this.listener.downloadFailed(this.id);\n  Logger.log(\"failed\");\n}\n', '0.75', '12', '9');
INSERT INTO `case_study` VALUES ('3230', 'SegmentDownloader(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '10', '43', '41', '-1000', '8', '0.1167', '0.0133', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'protected SegmentDownloader(String id,String folder){\n  this.id=id;\n  this.folder=new File(folder,id).getAbsolutePath();\n  this.length=-1;\n  this.MAX_COUNT=Config.getInstance().getMaxSegments();\n  this.MIN_CHUNK_SIZE=Config.getInstance().getMinSegmentSize();\n  this.lastDownloaded=downloaded;\n  this.prevTime=System.currentTimeMillis();\n  this.eta=\"---\";\n}\n', '0.3333333333333333', '10', '1');
INSERT INTO `case_study` VALUES ('3231', 'start()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '15', '78', '51', '-1000', '5', '0.1481', '0.1405', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void start(){\n  Logger.log(\"creating folder \" + folder);\n  new File(folder).mkdirs();\n  chunks=new ArrayList<Segment>();\n  try {\n    Segment c1=new SegmentImpl(this,folder);\n    if (getMetadata() instanceof DashMetadata) {\n      c1.setTag(\"T1\");\n    }\n    c1.setLength(-1);\n    c1.setStartOffset(0);\n    c1.setDownloaded(0);\n    chunks.add(c1);\n    c1.download(this);\n  }\n catch (  IOException e) {\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    this.listener.downloadFailed(id);\n  }\n}\n', '0.5555555555555556', '4', '3');
INSERT INTO `case_study` VALUES ('3232', 'resume()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '27', '311', '271', '-1000', '13', '0.0895', '0.085', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '@Override public void resume(){\n  try {\n    stopFlag=false;\n    Logger.log(\"Resuming\");\n    if (!restoreState()) {\n      Logger.log(\"Starting from beginning\");\n      start();\n      return;\n    }\n    this.lastDownloaded=downloaded;\n    this.prevTime=System.currentTimeMillis();\n    Logger.log(\"Restore success\");\n    init=true;\n    Segment c1=findInactiveChunk();\n    if (c1 != null) {\n      try {\n        c1.download(this);\n      }\n catch (      Exception e) {\n        Logger.log(e);\n        if (!stopFlag) {\n          Logger.log(e);\n          this.errorCode=XDMConstants.RESUME_FAILED;\n          listener.downloadFailed(this.id);\n          return;\n        }\n      }\n    }\n else     if (allFinished()) {\n      assembleAsync();\n    }\n else {\n      Logger.log(\"Internal error: no inactive/incomplete chunk found while resuming!\");\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    listener.downloadFailed(this.id);\n    return;\n  }\n}\n', '0.8', '9', '7');
INSERT INTO `case_study` VALUES ('3233', 'createChunk()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '14', '67', '43', '-1000', '3', '0.1786', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private synchronized void createChunk() throws IOException {\n  if (stopFlag)   return;\n  int activeCount=getActiveChunkCount();\n  Logger.log(\"active count:\" + activeCount);\n  if (activeCount == MAX_COUNT) {\n    return;\n  }\n  int rem=MAX_COUNT - activeCount;\n  rem-=retryFailedChunks(rem);\n  if (rem > 0) {\n    Segment c1=findMaxChunk();\n    Segment c=splitChunk(c1);\n    if (c != null) {\n      Logger.log(\"creating chunk \" + c);\n      chunks.add(c);\n      c.download(this);\n    }\n  }\n}\n', '0.75', '4', '5');
INSERT INTO `case_study` VALUES ('3234', 'findMaxChunk()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '12', '45', '24', '-1000', '2', '0.2381', '0.1394', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private Segment findMaxChunk(){\n  if (stopFlag)   return null;\n  long size=-1;\n  String id=null;\n  for (int i=0; i < chunks.size(); i++) {\n    Segment c=chunks.get(i);\n    if (c.isActive()) {\n      long rem=c.getLength() - c.getDownloaded();\n      if (rem > size) {\n        id=c.getId();\n        size=rem;\n      }\n    }\n  }\n  if (size < MIN_CHUNK_SIZE)   return null;\n  return getById(id);\n}\n', '0.4', '5', '6');
INSERT INTO `case_study` VALUES ('3236', 'splitChunk(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '13', '52', '26', '-1000', '3', '0.2115', '0.1569', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private Segment splitChunk(Segment c) throws IOException {\n  if (c == null || stopFlag)   return null;\n  long rem=c.getLength() - c.getDownloaded();\n  long offset=c.getStartOffset() + c.getLength() - rem / 2;\n  long len=rem / 2;\n  Logger.log(\"Changing length from: \" + c.getLength() + \" to \"+ (c.getLength() - rem / 2));\n  c.setLength(c.getLength() - rem / 2);\n  Segment c2=new SegmentImpl(this,folder);\n  if (getMetadata() instanceof DashMetadata) {\n    c2.setTag(\"T1\");\n  }\n  c2.setLength(len);\n  c2.setStartOffset(offset);\n  return c2;\n}\n', '0.4444444444444444', '5', '4');
INSERT INTO `case_study` VALUES ('3237', 'findNextNeedyChunk(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '8', '16', '4', '-1000', '2', '0.3', '0.2411', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private Segment findNextNeedyChunk(Segment chunk){\n  if (stopFlag)   return null;\n  long offset=chunk.getStartOffset() + chunk.getLength();\n  for (int i=0; i < chunks.size(); i++) {\n    Segment c=chunks.get(i);\n    if (c.getDownloaded() == 0) {\n      if (!c.isFinished()) {\n        if (c.getStartOffset() == offset) {\n          return c;\n        }\n      }\n    }\n  }\n  return null;\n}\n', '0.25', '4', '6');
INSERT INTO `case_study` VALUES ('3238', 'onComplete(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '27', '309', '267', '-1000', '9', '0.101', '0.065', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private synchronized boolean onComplete(String id) throws IOException {\n  if (allFinished() || length < 0) {\n    finished=true;\n    updateStatus();\n    try {\n      assemble();\n      Logger.log(\"********Download finished*********\");\n      updateStatus();\n      listener.downloadFinished(this.id);\n    }\n catch (    Exception e) {\n      if (!stopFlag) {\n        Logger.log(e);\n        this.errorCode=XDMConstants.ERR_ASM_FAILED;\n        listener.downloadFailed(this.id);\n      }\n    }\n    listener=null;\n    return true;\n  }\n  Segment chunk=getById(id);\n  Logger.log(\"Complete: \" + chunk + \" \"+ chunk.getDownloaded()+ \" \"+ chunk.getLength());\n  Segment nextNeedyChunk=findNextNeedyChunk(chunk);\n  if (nextNeedyChunk != null) {\n    Logger.log(\"****************Needy chunk found!!!\");\n    Logger.log(\"Stopping: \" + nextNeedyChunk);\n    nextNeedyChunk.stop();\n    chunks.remove(nextNeedyChunk);\n    nextNeedyChunk.dispose();\n    mergeChunk(chunk,nextNeedyChunk);\n    createChunk();\n    return false;\n  }\n  createChunk();\n  return true;\n}\n', '0.4444444444444444', '7', '6');
INSERT INTO `case_study` VALUES ('3239', 'chunkInitiated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '11', '46', '37', '-1000', '5', '0.1688', '0.0946', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public synchronized void chunkInitiated(String id) throws IOException {\n  if (stopFlag)   return;\n  if (!init) {\n    Segment c=getById(id);\n    this.length=c.getLength();\n    init=true;\n    Logger.log(\"size: \" + this.length);\n    super.getLastModifiedDate(c);\n    saveState();\n    chunkConfirmed(c);\n    listener.downloadConfirmed(this.id);\n  }\n  if (length > 0) {\n    createChunk();\n  }\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('3241', 'chunkUpdated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '18', '133', '113', '-1000', '9', '0.125', '0.0754', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '@Override public void chunkUpdated(String id){\n  if (stopFlag)   return;\n  long now=System.currentTimeMillis();\n  if (now - lastSaved > 5000) {\nsynchronized (this) {\n      saveState();\n    }\n    lastSaved=now;\n  }\n  if (now - lastUpdated > 1000) {\n    updateStatus();\n    lastUpdated=now;\nsynchronized (this) {\n      int activeCount=getActiveChunkCount();\n      if (activeCount < MAX_COUNT) {\n        int rem=MAX_COUNT - activeCount;\n        try {\n          retryFailedChunks(rem);\n        }\n catch (        Exception e) {\n          Logger.log(e);\n        }\n      }\n    }\n  }\n}\n', '0.6666666666666666', '5', '6');
INSERT INTO `case_study` VALUES ('3242', 'assemble()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '44', '872', '798', '-1000', '10', '0.0528', '0.0377', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void assemble() throws IOException {\n  InputStream in=null;\n  OutputStream out=null;\n  totalAssembled=0L;\n  assembling=true;\n  assembleFinished=false;\n  File outFile=new File(getOutputFolder(),getOutputFileName(true));\n  try {\n    if (stopFlag)     return;\n    byte buf[]=new byte[8192 * 8];\n    Logger.log(\"assembling... \");\n    Collections.sort(chunks,new SegmentComparator());\n    out=new FileOutputStream(outFile);\n    for (int i=0; i < chunks.size(); i++) {\n      Logger.log(\"chunk \" + i + \" \"+ stopFlag);\n      Segment c=chunks.get(i);\n      in=new FileInputStream(new File(folder,c.getId()));\n      long rem=c.getLength();\n      while (true) {\n        int x=(int)(rem > 0 ? (rem > buf.length ? buf.length : rem) : buf.length);\n        int r=in.read(buf,0,x);\n        if (stopFlag) {\n          return;\n        }\n        if (r == -1) {\n          if (length > 0) {\n            throw new IllegalArgumentException(\"Assemble EOF\");\n          }\n else {\n            break;\n          }\n        }\n        out.write(buf,0,r);\n        if (stopFlag) {\n          return;\n        }\n        if (length > 0) {\n          rem-=r;\n          if (rem == 0)           break;\n        }\n        totalAssembled+=r;\n        long now=System.currentTimeMillis();\n        if (now - lastUpdated > 1000) {\n          updateStatus();\n          lastUpdated=now;\n        }\n      }\n      in.close();\n    }\n    out.close();\n    setLastModifiedDate(outFile);\n    assembleFinished=true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    throw new IOException(e);\n  }\n finally {\n    if (in != null) {\n      try {\n        in.close();\n      }\n catch (      Exception e2) {\n      }\n    }\n    if (out != null) {\n      try {\n        out.close();\n      }\n catch (      Exception e2) {\n      }\n    }\n  }\n}\n', '0.5714285714285714', '13', '18');
INSERT INTO `case_study` VALUES ('3244', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '8', '26', '24', '-1000', '6', '0.2', '0.06', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void stop(){\n  stopFlag=true;\n  saveState();\n  for (int i=0; i < chunks.size(); i++) {\n    chunks.get(i).stop();\n  }\n  listener.downloadStopped(id);\n  listener=null;\n}\n', '1', '1', '2');
INSERT INTO `case_study` VALUES ('3245', 'saveState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '22', '167', '103', '-1000', '3', '0.1266', '0.1194', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void saveState(){\n  if (length < 0)   return;\n  StringBuffer sb=new StringBuffer();\n  sb.append(this.length + \"\\n\");\n  sb.append(downloaded + \"\\n\");\n  sb.append(chunks.size() + \"\\n\");\n  for (int i=0; i < chunks.size(); i++) {\n    Segment seg=chunks.get(i);\n    sb.append(seg.getId() + \"\\n\");\n    sb.append(seg.getLength() + \"\\n\");\n    sb.append(seg.getStartOffset() + \"\\n\");\n    sb.append(seg.getDownloaded() + \"\\n\");\n  }\n  if (!StringUtils.isNullOrEmptyOrBlank(lastModified)) {\n    sb.append(this.lastModified + \"\\n\");\n  }\n  try {\n    File tmp=new File(folder,System.currentTimeMillis() + \".tmp\");\n    File out=new File(folder,\"state.txt\");\n    FileOutputStream fs=new FileOutputStream(tmp);\n    fs.write(sb.toString().getBytes());\n    fs.close();\n    out.delete();\n    tmp.renameTo(out);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.5', '9', '5');
INSERT INTO `case_study` VALUES ('3246', 'restoreState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '29', '310', '214', '-1000', '4', '0.0931', '0.087', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private boolean restoreState(){\n  BufferedReader br=null;\n  chunks=new ArrayList<Segment>();\n  File file=new File(folder,\"state.txt\");\n  if (!file.exists()) {\n    file=getBackupFile(folder);\n    if (file == null) {\n      return false;\n    }\n  }\n  try {\n    br=new BufferedReader(new FileReader(file));\n    this.length=Long.parseLong(br.readLine());\n    this.downloaded=Long.parseLong(br.readLine());\n    int chunkCount=Integer.parseInt(br.readLine());\n    for (int i=0; i < chunkCount; i++) {\n      String cid=br.readLine();\n      long len=Long.parseLong(br.readLine());\n      long off=Long.parseLong(br.readLine());\n      long dwn=Long.parseLong(br.readLine());\n      Segment seg=new SegmentImpl(folder,cid,off,len,dwn);\n      if (getMetadata() instanceof DashMetadata) {\n        seg.setTag(\"T1\");\n      }\n      Logger.log(\"id: \" + seg.getId() + \"\\nlength: \"+ seg.getLength()+ \"\\noffset: \"+ seg.getStartOffset()+ \"\\ndownload: \"+ seg.getDownloaded());\n      chunks.add(seg);\n    }\n    this.lastModified=br.readLine();\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(\"Failed to load saved state\");\n    Logger.log(e);\n  }\n finally {\n    if (br != null) {\n      try {\n        br.close();\n      }\n catch (      IOException e) {\n      }\n    }\n  }\n  return false;\n}\n', '0.4444444444444444', '14', '8');
INSERT INTO `case_study` VALUES ('3249', 'updateStatus()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentDownloader.java', 'xdm', '38', '607', '511', '-1000', '5', '0.0779', '0.0498', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', 'private void updateStatus(){\n  try {\n    long now=System.currentTimeMillis();\n    if (this.assembling) {\n      long len=length > 0 ? length : downloaded;\n      progress=(int)((totalAssembled * 100) / len);\n    }\n else {\n      long downloaded2=0;\n      if (segDet == null) {\n        segDet=new SegmentDetails();\n      }\n      if (segDet.getCapacity() < chunks.size()) {\n        segDet.extend(chunks.size() - segDet.getCapacity());\n      }\n      segDet.setChunkCount(chunks.size());\n      downloadSpeed=0;\n      for (int i=0; i < chunks.size(); i++) {\n        Segment s=chunks.get(i);\n        downloaded2+=s.getDownloaded();\n        SegmentInfo info=segDet.getChunkUpdates().get(i);\n        info.setDownloaded(s.getDownloaded());\n        info.setStart(s.getStartOffset());\n        info.setLength(s.getLength());\n        downloadSpeed+=s.getTransferRate();\n      }\n      this.downloaded=downloaded2;\n      if (length > 0) {\n        progress=(int)((downloaded * 100) / length);\n        long diff=downloaded - lastDownloaded;\n        long timeSpend=now - prevTime;\n        if (timeSpend > 0) {\n          float rate=((float)diff / timeSpend) * 1000;\n          if (rate > downloadSpeed) {\n            downloadSpeed=rate;\n          }\n          this.eta=FormatUtilities.getETA(length - downloaded,rate);\n          if (this.eta == null) {\n            this.eta=\"---\";\n          }\n          lastDownloaded=downloaded;\n          prevTime=now;\n        }\n      }\n    }\n    listener.downloadUpdated(id);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.4', '15', '11');
INSERT INTO `case_study` VALUES ('3252', 'SegmentImpl(SegmentListener,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentImpl.java', 'xdm', '11', '50', '45', '-1000', '7', '0.1169', '0.0256', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public SegmentImpl(String folder,String id,long off,long len,long dwn) throws IOException {\n  this.id=id;\n  this.id=id;\n  this.startOffset=off;\n  this.folder=folder;\n  this.length=len;\n  this.downloaded=dwn;\n  this.time1=System.currentTimeMillis();\n  this.time2=time1;\n  this.bytesRead1=dwn;\n  this.bytesRead2=dwn;\n  try {\n    outStream=new RandomAccessFile(new File(folder,id),\"rw\");\n    outStream.seek(dwn);\n    Logger.log(\"File opened \" + id);\n  }\n catch (  IOException e) {\n    Logger.log(e);\n    if (outStream != null) {\n      outStream.close();\n    }\n    throw new IOException(e);\n  }\n  this.config=Config.getInstance();\n}\n', '1', '17', '3');
INSERT INTO `case_study` VALUES ('3258', 'transferComplete()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentImpl.java', 'xdm', '11', '50', '45', '-1000', '7', '0.1313', '0.0545', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '@Override public boolean transferComplete() throws IOException {\n  if (stop)   return true;\n  if (length < 0) {\n    length=downloaded;\n  }\n  if (cl.chunkComplete(id)) {\n    try {\n      outStream.close();\n    }\n catch (    IOException e) {\n      Logger.log(e);\n    }\n    channel=null;\n    if (cl.shouldCleanup()) {\n      cl.cleanup();\n    }\n    return true;\n  }\n else {\n    return false;\n  }\n}\n', '0.5', '1', '6');
INSERT INTO `case_study` VALUES ('3260', 'transferFailed(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentImpl.java', 'xdm', '12', '56', '46', '-1000', '4', '0.1574', '0.0813', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void transferFailed(String reason){\n  if (stop)   return;\n  if (outStream != null) {\n    try {\n      outStream.close();\n      outStream=null;\n    }\n catch (    IOException e) {\n      Logger.log(e);\n    }\n  }\n  this.errorCode=channel.getErrorCode();\n  Logger.log(id + \" notifying failure \" + this.channel);\n  this.channel=null;\n  cl.chunkFailed(id,reason);\n  cl=null;\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('3270', 'dispose()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentImpl.java', 'xdm', '9', '33', '30', '-1000', '6', '0.1778', '0.0714', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', '@Override public void dispose(){\n  cl=null;\n  if (channel != null) {\n    channel.stop();\n  }\n  if (outStream != null) {\n    try {\n      outStream.close();\n    }\n catch (    IOException e) {\n      Logger.log(e);\n    }\n  }\n}\n', '1', '1', '4');
INSERT INTO `case_study` VALUES ('3275', 'calculateTransferRate()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentImpl.java', 'xdm', '9', '27', '18', '-1000', '3', '0.254', '0.1067', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void calculateTransferRate(){\n  long now=System.currentTimeMillis();\n  long timeDiff=now - time1;\n  long bytesDiff=this.downloaded - bytesRead1;\n  if (timeDiff > 1000 && bytesDiff > 0) {\n    transferRate=((float)bytesDiff / timeDiff) * 1000;\n    bytesRead1=this.downloaded;\n    time1=now;\n  }\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('3276', 'throttle()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentImpl.java', 'xdm', '17', '119', '102', '-1000', '5', '0.1218', '0.0489', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void throttle(){\n  try {\n    if (config.getSpeedLimit() < 1)     return;\n    if (cl.getActiveChunkCount() < 1)     return;\n    long maxBpms=(config.getSpeedLimit() * 1024) / (cl.getActiveChunkCount() * 1000);\n    long now=System.currentTimeMillis();\n    long timeSpentInReal=now - time2;\n    if (timeSpentInReal > 0) {\n      time2=now;\n      long bytesDownloaded=downloaded - bytesRead2;\n      bytesRead2=downloaded;\n      long timeShouldRequired=bytesDownloaded / maxBpms;\n      if (timeShouldRequired > timeSpentInReal) {\n        long timeNeedToSleep=timeShouldRequired - timeSpentInReal;\n        Thread.sleep(timeNeedToSleep);\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '7', '6');
INSERT INTO `case_study` VALUES ('3283', 'reopenStream()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\SegmentImpl.java', 'xdm', '11', '40', '25', '-1000', '3', '0.1818', '0.1438', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void reopenStream() throws IOException {\n  if (outStream != null) {\n    return;\n  }\n  try {\n    outStream=new RandomAccessFile(new File(folder,id),\"rw\");\n    outStream.seek(downloaded);\n    Logger.log(\"File opened \" + id);\n  }\n catch (  IOException e) {\n    Logger.log(e);\n    if (outStream != null) {\n      outStream.close();\n    }\n    throw new IOException(e);\n  }\n}\n', '1', '1', '4');
INSERT INTO `case_study` VALUES ('3302', 'FFmpeg(List<String>,String,MediaConversionListener,MediaFormat,boolean)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\mediaconversion\\FFmpeg.java', 'xdm', '7', '20', '19', '-1000', '6', '0.1571', '0.0238', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public FFmpeg(List<String> inputFiles,String outputFile,MediaConversionListener listener,MediaFormat outformat,boolean copy){\n  this.inputFiles=inputFiles;\n  this.outputFile=outputFile;\n  this.listener=listener;\n  this.outformat=outformat;\n  this.copy=copy;\n}\n', '0', '10', '1');
INSERT INTO `case_study` VALUES ('3303', 'convert()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\mediaconversion\\FFmpeg.java', 'xdm', '48', '862', '596', '-1000', '8', '0.0598', '0.1574', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'public int convert(){\n  try {\n    Logger.log(\"Outformat: \" + outformat + \" audio: \"+ outformat.isAudioOnly());\n    File ffFile=new File(Config.getInstance().getDataFolder(),System.getProperty(\"os.name\").toLowerCase().contains(\"windows\") ? \"ffmpeg.exe\" : \"ffmpeg\");\n    if (!ffFile.exists()) {\n      return FF_NOT_FOUND;\n    }\n    List<String> args=new ArrayList<String>();\n    args.add(ffFile.getAbsolutePath());\n    if (hls) {\n      args.add(\"-f\");\n      args.add(\"concat\");\n      args.add(\"-safe\");\n      args.add(\"0\");\n    }\n    for (int i=0; i < inputFiles.size(); i++) {\n      args.add(\"-i\");\n      args.add(inputFiles.get(i));\n    }\n    if (outformat.isAudioOnly()) {\n      if (outformat.getWidth() > 0) {\n        args.add(\"-b:a\");\n        args.add(outformat.getWidth() + \"k\");\n      }\n else       if (copy) {\n        args.add(\"-acodec\");\n        args.add(\"copy\");\n      }\n    }\n else {\n      if (outformat.getWidth() > 0) {\n        args.add(\"-vf\");\n        args.add(\"scale=\" + outformat.getWidth() + \":\"+ outformat.getHeight());\n      }\n else       if (copy) {\n        args.add(\"-acodec\");\n        args.add(\"copy\");\n        args.add(\"-vcodec\");\n        args.add(\"copy\");\n      }\n    }\n    args.add(outputFile);\n    args.add(\"-y\");\n    for (    String s : args) {\n      Logger.log(\"@ffmpeg_args: \" + s);\n    }\n    ProcessBuilder pb=new ProcessBuilder(args);\n    pb.redirectErrorStream(true);\n    proc=pb.start();\n    BufferedReader br=new BufferedReader(new InputStreamReader(proc.getInputStream()),1024);\n    while (true) {\n      String ln=br.readLine();\n      if (ln == null) {\n        break;\n      }\n      try {\n        String text=ln.trim();\n        processOutput(text);\n      }\n catch (      Exception e) {\n        Logger.log(e);\n      }\n    }\n    ffExitCode=proc.waitFor();\n    return ffExitCode == 0 ? FF_SUCCESS : FF_CONVERSION_FAILED;\n  }\n catch (  Exception e) {\n    return FF_LAUNCH_ERROR;\n  }\n}\n', '0.5', '10', '16');
INSERT INTO `case_study` VALUES ('3306', 'parseDuration(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\mediaconversion\\FFmpeg.java', 'xdm', '14', '54', '17', '-1000', '3', '0.2857', '0.2185', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private long parseDuration(String dur){\n  long duration=0;\n  String[] arr=dur.split(\":\");\n  String s=arr[0].trim();\n  if (!StringUtils.isNullOrEmpty(s)) {\n    duration=Integer.parseInt(s,10) * 3600;\n  }\n  s=arr[1].trim();\n  if (!StringUtils.isNullOrEmpty(s)) {\n    duration+=Integer.parseInt(arr[1].trim(),10) * 60;\n  }\n  s=arr[2].split(\"\\\\.\")[0].trim();\n  if (!StringUtils.isNullOrEmpty(s)) {\n    duration+=Integer.parseInt(s,10);\n  }\n  return duration;\n}\n', '1', '4', '4');
INSERT INTO `case_study` VALUES ('3307', 'processOutput(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\mediaconversion\\FFmpeg.java', 'xdm', '27', '244', '137', '-1000', '3', '0.125', '0.1128', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private void processOutput(String text){\n  if (StringUtils.isNullOrEmpty(text)) {\n    return;\n  }\n  if (totalDuration > 0) {\n    if (text.startsWith(\"frame=\") && text.contains(\"time=\")) {\n      int index1=text.indexOf(\"time\");\n      index1=text.indexOf(\'=\',index1);\n      int index2=text.indexOf(\"bitrate=\");\n      String dur=text.substring(index1 + 1,index2).trim();\n      Logger.log(\"Parsing duration: \" + dur);\n      long t=parseDuration(dur);\n      Logger.log(\"Duration: \" + t + \" Total duration: \"+ totalDuration);\n      int prg=(int)((t * 100) / totalDuration);\n      Logger.log(\"ffmpeg prg: \" + prg);\n      listener.progress(prg);\n    }\n  }\n  if (totalDuration == 0) {\n    if (text.startsWith(\"Duration:\")) {\n      try {\n        int index1=text.indexOf(\"Duration\");\n        index1=text.indexOf(\':\',index1);\n        int index2=text.indexOf(\",\",index1);\n        String dur=text.substring(index1 + 1,index2).trim();\n        Logger.log(\"Parsing duration: \" + dur);\n        totalDuration=parseDuration(dur);\n        Logger.log(\"Total duration: \" + totalDuration);\n      }\n catch (      Exception e) {\n        Logger.log(e);\n        totalDuration=-1;\n      }\n    }\n  }\n}\n', '1', '10', '8');
INSERT INTO `case_study` VALUES ('3312', 'MediaFormat(int,int,String,String,boolean)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\mediaconversion\\MediaFormat.java', 'xdm', '7', '19', '17', '-1000', '5', '0.1714', '0.0317', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public MediaFormat(int width,int height,String format,String description){\n  this(width,height,format,description,false);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('3322', 'toString()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\mediaconversion\\MediaFormat.java', 'xdm', '7', '18', '15', '-1000', '5', '0.2381', '0.0667', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override public String toString(){\n  if (width < 0) {\n    return StringResource.get(\"VID_FMT_ORIG\");\n  }\n  if (audioOnly) {\n    return format + \" \" + description+ \" \"+ width+ \"kbps \";\n  }\n  return format + \" \" + description+ \" (\"+ width+ \"x\"+ height+ \") \";\n}\n', '1', '0', '3');
INSERT INTO `case_study` VALUES ('3330', 'run()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\BrowserMonitor.java', 'xdm', '14', '75', '59', '-1000', '5', '0.1429', '0.0926', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'public void run(){\n  ServerSocket serverSock=null;\n  try {\n    serverSock=new ServerSocket();\n    serverSock.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(),9614));\n    XDMApp.instanceStarted();\n    while (true) {\n      Socket sock=serverSock.accept();\n      MonitoringSession session=new MonitoringSession(sock);\n      session.start();\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    XDMApp.instanceAlreadyRunning();\n  }\n  try {\n    serverSock.close();\n  }\n catch (  Exception e) {\n  }\n}\n', '0.6', '5', '4');
INSERT INTO `case_study` VALUES ('3331', 'handle(File,ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\F4mHandler.java', 'xdm', '30', '373', '311', '-1000', '5', '0.087', '0.0844', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public static boolean handle(File f4mfile,ParsedHookData data){\n  try {\n    StringBuffer buf=new StringBuffer();\n    InputStream in=new FileInputStream(f4mfile);\n    BufferedReader r=new BufferedReader(new InputStreamReader(in));\n    while (true) {\n      String ln=r.readLine();\n      if (ln == null) {\n        break;\n      }\n      buf.append(ln + \"\\n\");\n    }\n    in.close();\n    Logger.log(\"HDS manifest validating...\");\n    if (buf.indexOf(\"http://ns.adobe.com/f4m/1.0\") < 0) {\n      Logger.log(\"No namespace\");\n      return false;\n    }\n    if (buf.indexOf(\"manifest\") < 0) {\n      Logger.log(\"No manifest keyword\");\n      return false;\n    }\n    if (buf.indexOf(\"drmAdditional\") > 0) {\n      Logger.log(\"DRM\");\n      return false;\n    }\n    if (buf.indexOf(\"media\") == 0 || buf.indexOf(\"href\") > 0 || buf.indexOf(\".f4m\") > 0) {\n      Logger.log(\"Not a valid manifest\");\n      return false;\n    }\n    F4MManifest manifest=new F4MManifest(data.getUrl(),f4mfile.getAbsolutePath());\n    long[] bitRates=manifest.getBitRates();\n    for (int i=0; i < bitRates.length; i++) {\n      HdsMetadata metadata=new HdsMetadata();\n      metadata.setUrl(data.getUrl());\n      metadata.setBitRate((int)bitRates[i]);\n      metadata.setHeaders(data.getRequestHeaders());\n      String file=data.getFile();\n      if (StringUtils.isNullOrEmptyOrBlank(file)) {\n        file=XDMUtils.getFileName(data.getUrl());\n      }\n      XDMApp.getInstance().addMedia(metadata,file + \".flv\",\"FLV \" + bitRates[i] + \" bps\");\n    }\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    return false;\n  }\n}\n', '0.5714285714285714', '12', '12');
INSERT INTO `case_study` VALUES ('3332', 'handle(File,ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\FBHandler.java', 'xdm', '48', '972', '816', '-1000', '5', '0.0707', '0.046', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public static boolean handle(File tempFile,ParsedHookData data){\n  try {\n    StringBuffer buf=new StringBuffer();\n    InputStream in=new FileInputStream(tempFile);\n    BufferedReader r=new BufferedReader(new InputStreamReader(in));\n    while (true) {\n      String ln=r.readLine();\n      if (ln == null) {\n        break;\n      }\n      buf.append(ln + \"\\n\");\n    }\n    in.close();\n    Logger.log(\"Parsing facebook page...\");\n    ArrayList<String> sdUrls1=findURL(\"sd_src\",buf);\n    ArrayList<String> sdUrls2=findURL(\"sd_src_no_ratelimit\",buf);\n    ArrayList<String> hdUrls1=findURL(\"hd_src\",buf);\n    ArrayList<String> hdUrls2=findURL(\"hd_src_no_ratelimit\",buf);\n    for (int i=0; i < sdUrls1.size(); i++) {\n      HttpMetadata metadata=new HttpMetadata();\n      metadata.setUrl(sdUrls1.get(i));\n      metadata.setHeaders(data.getRequestHeaders());\n      String file=data.getFile();\n      if (StringUtils.isNullOrEmptyOrBlank(file)) {\n        file=XDMUtils.getFileName(data.getUrl());\n      }\n      XDMApp.getInstance().addMedia(metadata,file + \".mp4\",\"MP4 LOW\");\n    }\n    for (int i=0; i < sdUrls2.size(); i++) {\n      HttpMetadata metadata=new HttpMetadata();\n      metadata.setUrl(sdUrls2.get(i));\n      metadata.setHeaders(data.getRequestHeaders());\n      String file=data.getFile();\n      if (StringUtils.isNullOrEmptyOrBlank(file)) {\n        file=XDMUtils.getFileName(data.getUrl());\n      }\n      XDMApp.getInstance().addMedia(metadata,file + \".mp4\",\"MP4 MEDIUM\");\n    }\n    for (int i=0; i < hdUrls1.size(); i++) {\n      HttpMetadata metadata=new HttpMetadata();\n      metadata.setUrl(hdUrls1.get(i));\n      metadata.setHeaders(data.getRequestHeaders());\n      String file=data.getFile();\n      if (StringUtils.isNullOrEmptyOrBlank(file)) {\n        file=XDMUtils.getFileName(data.getUrl());\n      }\n      XDMApp.getInstance().addMedia(metadata,file + \".mp4\",\"MP4 HD\");\n    }\n    for (int i=0; i < hdUrls2.size(); i++) {\n      HttpMetadata metadata=new HttpMetadata();\n      metadata.setUrl(hdUrls2.get(i));\n      metadata.setHeaders(data.getRequestHeaders());\n      String file=data.getFile();\n      if (StringUtils.isNullOrEmptyOrBlank(file)) {\n        file=XDMUtils.getFileName(data.getUrl());\n      }\n      XDMApp.getInstance().addMedia(metadata,file + \".mp4\",\"MP4 HQ\");\n    }\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    return false;\n  }\n}\n', '0.5454545454545454', '23', '12');
INSERT INTO `case_study` VALUES ('3333', 'findURL(String,StringBuffer)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\FBHandler.java', 'xdm', '48', '1028', '928', '-1000', '30', '0.0677', '0.059', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private static ArrayList<String> findURL(String keyword,StringBuffer buf){\n  int index1=0;\n  int index=0;\n  ArrayList<String> urlList=new ArrayList<String>();\n  String urlStart=\":\";\n  while (true) {\n    index=buf.indexOf(keyword,index);\n    if (index < 0)     break;\n    index+=keyword.length();\n    index=buf.indexOf(\":\",index);\n    if (index < 0) {\n      break;\n    }\n    index+=1;\n    int collonIndex=index;\n    while (true) {\n      char ch=buf.charAt(index);\n      if (ch == \' \' || ch == \'\\n\' || ch == \'\\r\' || ch == \'\\t\')       index++;\n else       break;\n    }\n    char ch=buf.charAt(index);\n    if (ch == \'\"\') {\n      index++;\n      int index3=buf.indexOf(\"\\\"\",index);\n      String url=decodeJSONEscape(buf.substring(index,index3).trim().replace(\"\\\"\",\"\"));\n      Logger.log(keyword + \": \" + url);\n      urlList.add(url);\n    }\n  }\n  return urlList;\n}\n', '1', '11', '10');
INSERT INTO `case_study` VALUES ('3334', 'decodeJSONEscape(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\FBHandler.java', 'xdm', '15', '62', '19', '-1000', '3', '0.2222', '0.1742', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private static String decodeJSONEscape(String json){\n  StringBuffer buf=new StringBuffer();\n  int pos=0;\n  while (true) {\n    int index=json.indexOf(\"\\\\u\",pos);\n    if (index < 0) {\n      if (pos < json.length()) {\n        buf.append(json.substring(pos));\n      }\n      break;\n    }\n    buf.append(json.substring(pos,index));\n    pos=index;\n    String code=json.substring(pos + 2,pos + 2 + 4);\n    int char_code=Integer.parseInt(code,16);\n    buf.append((char)char_code);\n    pos+=6;\n  }\n  return buf.toString().replace(\"\\\\\",\"\");\n}\n', '0', '6', '4');
INSERT INTO `case_study` VALUES ('3335', 'handle(File,ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\InstagramHandler.java', 'xdm', '31', '398', '331', '-1000', '4', '0.0829', '0.0495', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'public static boolean handle(File tempFile,ParsedHookData data){\n  try {\n    StringBuffer buf=new StringBuffer();\n    InputStream in=new FileInputStream(tempFile);\n    BufferedReader r=new BufferedReader(new InputStreamReader(in));\n    while (true) {\n      String ln=r.readLine();\n      if (ln == null) {\n        break;\n      }\n      buf.append(ln + \"\\n\");\n    }\n    in.close();\n    Logger.log(\"Parsing instagram page...\");\n    if (pattern == null) {\n      pattern=Pattern.compile(\"\\\"video\\\\_url\\\"\\\\s*:\\\\s*\\\"(.*?)\\\"\");\n    }\n    Matcher matcher=pattern.matcher(buf);\n    if (matcher.find()) {\n      int start=matcher.start();\n      int end=matcher.end();\n      String url=matcher.group(1);\n      Logger.log(\"Url: \" + url);\n      HttpMetadata metadata=new HttpMetadata();\n      metadata.setUrl(url);\n      metadata.setHeaders(data.getRequestHeaders());\n      String file=data.getFile();\n      if (StringUtils.isNullOrEmptyOrBlank(file)) {\n        file=XDMUtils.getFileName(data.getUrl());\n      }\n      String ext=XDMUtils.getExtension(XDMUtils.getFileName(url));\n      if (ext != null) {\n        ext=ext.replace(\".\",\"\").toUpperCase();\n      }\n else {\n        ext=\"\";\n      }\n      XDMApp.getInstance().addMedia(metadata,file + \".\" + ext,ext);\n    }\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    return false;\n  }\n}\n', '0.5', '14', '8');
INSERT INTO `case_study` VALUES ('3336', 'handle(File,ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\M3U8Handler.java', 'xdm', '31', '330', '195', '-1000', '3', '0.1441', '0.1057', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public static boolean handle(File m3u8file,ParsedHookData data){\n  try {\n    M3U8Manifest manifest=new M3U8Manifest(m3u8file.getAbsolutePath(),data.getUrl());\n    if (manifest.isEncrypted()) {\n      return true;\n    }\n    if (!manifest.isMasterPlaylist()) {\n      HlsMetadata metadata=new HlsMetadata();\n      metadata.setUrl(data.getUrl());\n      metadata.setHeaders(data.getRequestHeaders());\n      String file=data.getFile();\n      if (StringUtils.isNullOrEmptyOrBlank(file)) {\n        file=XDMUtils.getFileName(data.getUrl());\n      }\n      XDMApp.getInstance().addMedia(metadata,file + \".ts\",\"HLS\");\n    }\n else {\n      ArrayList<String> urls=manifest.getMediaUrls();\n      if (urls != null) {\n        for (int i=0; i < urls.size(); i++) {\n          String url=urls.get(i);\n          M3U8MediaInfo info=manifest.getMediaProperty(i);\n          HlsMetadata metadata=new HlsMetadata();\n          metadata.setUrl(url);\n          metadata.setHeaders(data.getRequestHeaders());\n          String file=data.getFile();\n          if (StringUtils.isNullOrEmptyOrBlank(file)) {\n            file=XDMUtils.getFileName(data.getUrl());\n          }\n          StringBuilder infoStr=new StringBuilder();\n          if (!StringUtils.isNullOrEmptyOrBlank(info.getBandwidth())) {\n            infoStr.append(info.getBandwidth());\n          }\n          if (infoStr.length() > 0) {\n            infoStr.append(\" \");\n          }\n          if (!StringUtils.isNullOrEmptyOrBlank(info.getResolution())) {\n            infoStr.append(info.getResolution());\n          }\n          XDMApp.getInstance().addMedia(metadata,file + \".ts\",infoStr.toString());\n        }\n      }\n    }\n    return true;\n  }\n catch (  Exception e) {\n  }\n  return false;\n}\n', '0.47058823529411764', '13', '11');
INSERT INTO `case_study` VALUES ('3340', 'onDownload(Request,Response)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '14', '66', '41', '-1000', '5', '0.1571', '0.1212', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'private void onDownload(Request request,Response res) throws UnsupportedEncodingException {\n  try {\n    Logger.log(new String(request.getBody()));\n    byte[] b=request.getBody();\n    ParsedHookData data=ParsedHookData.parse(b);\n    if (data.getUrl() != null && data.getUrl().length() > 0) {\n      HttpMetadata metadata=new HttpMetadata();\n      metadata.setUrl(data.getUrl());\n      metadata.setHeaders(data.getRequestHeaders());\n      metadata.setSize(data.getContentLength());\n      String file=data.getFile();\n      XDMApp.getInstance().addDownload(metadata,file);\n    }\n  }\n  finally {\n    setResponseOk(res);\n  }\n}\n', '0.38461538461538464', '6', '3');
INSERT INTO `case_study` VALUES ('3341', 'onVideo(Request,Response)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '14', '74', '57', '-1000', '6', '0.1429', '0.0985', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'private void onVideo(Request request,Response res) throws UnsupportedEncodingException {\n  try {\n    Logger.log(new String(request.getBody()));\n    if (!Config.getInstance().isShowVideoNotification()) {\n      return;\n    }\n    byte[] b=request.getBody();\n    ParsedHookData data=ParsedHookData.parse(b);\n    String type=data.getContentType();\n    if (type == null) {\n      type=\"\";\n    }\n    if (type.contains(\"f4f\") || type.contains(\"m4s\") || type.contains(\"mp2t\")|| data.getUrl().contains(\"fcs\")|| data.getUrl().contains(\"abst\")|| data.getUrl().contains(\"f4x\")|| data.getUrl().contains(\".fbcdn\")) {\n      return;\n    }\n    if (!(processDashSegment(data) || processVideoManifest(data))) {\n      processNormalVideo(data);\n    }\n  }\n  finally {\n    setResponseOk(res);\n  }\n}\n', '0.5714285714285714', '5', '12');
INSERT INTO `case_study` VALUES ('3343', 'onCmd(Request,Response)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '19', '145', '119', '-1000', '5', '0.1158', '0.0549', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private void onCmd(Request request,Response res){\n  byte[] data=request.getBody();\n  if (data == null || data.length < 1) {\n    XDMApp.getInstance().showMainWindow();\n  }\n else {\n    String[] arr=new String(data).split(\"\\n\");\n    for (int i=0; i < arr.length; i++) {\n      String str=arr[i];\n      int index=str.indexOf(\":\");\n      if (index < 1)       continue;\n      String key=str.substring(0,index).trim();\n      String val=str.substring(index + 1).trim();\n      if (key.equals(\"url\")) {\n        String url=val;\n        HttpMetadata metadata=new HttpMetadata();\n        metadata.setUrl(url);\n        String file=XDMUtils.getFileName(url);\n        XDMApp.getInstance().addDownload(metadata,file);\n      }\n    }\n  }\n  setResponseOk(res);\n}\n', '0.5714285714285714', '12', '6');
INSERT INTO `case_study` VALUES ('3344', 'onSync(Request,Response)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '26', '174', '23', '-1000', '3', '0.2179', '0.3287', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void onSync(Request request,Response res){\n  StringBuffer json=new StringBuffer();\n  json.append(\"{\\n\\\"enabled\\\": \");\n  json.append(Config.getInstance().isBrowserMonitoringEnabled());\n  json.append(\",\\n\\\"blockedHosts\\\": [\");\n  appendArray(Config.getInstance().getBlockedHosts(),json);\n  json.append(\"],\");\n  json.append(\"\\n\\\"videoUrls\\\": [\");\n  appendArray(Config.getInstance().getVidUrls(),json);\n  json.append(\"],\");\n  json.append(\"\\n\\\"fileExts\\\": [\");\n  appendArray(Config.getInstance().getFileExts(),json);\n  json.append(\"],\");\n  json.append(\"\\n\\\"vidExts\\\": [\");\n  appendArray(Config.getInstance().getVidExts(),json);\n  json.append(\"]\");\n  json.append(\"\\n}\");\n  byte[] b=json.toString().getBytes();\n  res.setCode(200);\n  res.setMessage(\"OK\");\n  HeaderCollection headers=new HeaderCollection();\n  headers.addHeader(\"Content-Length\",b.length + \"\");\n  headers.addHeader(\"Content-Type\",\"application/json\");\n  res.setHeaders(headers);\n  res.setBody(b);\n}\n', '0.25', '5', '1');
INSERT INTO `case_study` VALUES ('3345', 'appendArray(String[],StringBuffer)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '9', '26', '16', '-1000', '3', '0.3056', '0.1405', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void appendArray(String[] arr,StringBuffer buf){\n  boolean insertComma=false;\n  if (arr != null && arr.length > 0) {\n    for (int i=0; i < arr.length; i++) {\n      if (insertComma) {\n        buf.append(\",\");\n      }\n else {\n        insertComma=true;\n      }\n      buf.append(\"\\\"\" + arr[i] + \"\\\"\");\n    }\n  }\n}\n', '0', '4', '5');
INSERT INTO `case_study` VALUES ('3346', 'processRequest(Request,Response)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '11', '37', '19', '-1000', '4', '0.4242', '0.2628', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void processRequest(Request request,Response res) throws IOException {\n  String verb=request.getUrl();\n  if (verb.equals(\"/sync\")) {\n    onSync(request,response);\n  }\n else   if (verb.equals(\"/download\")) {\n    onDownload(request,response);\n  }\n else   if (verb.equals(\"/video\")) {\n    onVideo(request,response);\n  }\n else   if (verb.equals(\"/cmd\")) {\n    onCmd(request,response);\n  }\n else   if (verb.equals(\"/quit\")) {\n    onQuit(request,response);\n  }\n else {\n    throw new IOException(\"invalid verb\");\n  }\n}\n', '1', '3', '6');
INSERT INTO `case_study` VALUES ('3347', 'serviceRequest()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '10', '38', '31', '-1000', '5', '0.2', '0.0603', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'private void serviceRequest(){\n  try {\n    inStream=sock.getInputStream();\n    outStream=sock.getOutputStream();\n    while (true) {\n      this.request.read(inStream);\n      this.processRequest(this.request,this.response);\n      this.response.write(outStream);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  cleanup();\n}\n', '1', '5', '3');
INSERT INTO `case_study` VALUES ('3348', 'cleanup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '8', '25', '22', '-1000', '6', '0.1875', '0.1111', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'private void cleanup(){\n  try {\n    inStream.close();\n  }\n catch (  Exception e) {\n  }\n  try {\n    outStream.close();\n  }\n catch (  Exception e) {\n  }\n  try {\n    sock.close();\n  }\n catch (  Exception e) {\n  }\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('3350', 'processDashSegment(ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '79', '2510', '1939', '-1000', '3', '0.063', '0.055', '0', '1', '1', '1', '0', '0', '1', '1', '1', '1', 'private boolean processDashSegment(ParsedHookData data){\n  try {\n    URL url=new URL(data.getUrl());\n    String host=url.getHost();\n    if (!(host.contains(\"youtube.com\") || host.contains(\"googlevideo.com\"))) {\n      Logger.log(\"non yt host\");\n      return false;\n    }\n    String type=data.getContentType();\n    if (type == null) {\n      type=\"\";\n    }\n    if (!(type.contains(\"audio/\") || type.contains(\"video/\") || type.contains(\"application/octet\"))) {\n      Logger.log(\"non yt type\");\n      return false;\n    }\n    String low_path=data.getUrl().toLowerCase();\n    if (low_path.indexOf(\"videoplayback\") >= 0 && low_path.indexOf(\"itag\") >= 0) {\n      if (StringUtils.isNullOrEmptyOrBlank(url.getQuery())) {\n        return false;\n      }\n      int index=data.getUrl().indexOf(\"?\");\n      String path=data.getUrl().substring(0,index);\n      String query=data.getUrl().substring(index + 1);\n      String arr[]=query.split(\"&\");\n      StringBuilder yt_url=new StringBuilder();\n      yt_url.append(path + \"?\");\n      int itag=0;\n      long clen=0;\n      String id=\"\";\n      String mime=\"\";\n      for (int i=0; i < arr.length; i++) {\n        String str=arr[i];\n        index=str.indexOf(\"=\");\n        if (index > 0) {\n          String key=str.substring(0,index).trim();\n          String val=str.substring(index + 1).trim();\n          if (key.startsWith(\"range\")) {\n            continue;\n          }\n          if (key.equals(\"itag\")) {\n            itag=Integer.parseInt(val);\n          }\n          if (key.equals(\"clen\")) {\n            clen=Integer.parseInt(val);\n          }\n          if (key.startsWith(\"mime\")) {\n            mime=URLDecoder.decode(val,\"UTF-8\");\n          }\n          if (str.startsWith(\"id\")) {\n            id=val;\n          }\n        }\n        yt_url.append(str);\n        if (i < arr.length - 1) {\n          yt_url.append(\"&\");\n        }\n      }\n      if (itag != 0) {\n        if (YtUtil.isNormalVideo(itag)) {\n          Logger.log(\"Normal vid\");\n          return false;\n        }\n      }\n      DASH_INFO info=new DASH_INFO();\n      info.url=yt_url.toString();\n      info.clen=clen;\n      info.video=mime.startsWith(\"video\");\n      info.itag=itag;\n      info.id=id;\n      info.mime=mime;\n      info.headers=data.getRequestHeaders();\n      Logger.log(\"processing yt mime: \" + mime + \" id: \"+ id+ \" clen: \"+ clen+ \" itag: \"+ itag);\n      if (YtUtil.addToQueue(info)) {\n        DASH_INFO di=YtUtil.getDASHPair(info);\n        if (di != null) {\n          DashMetadata dm=new DashMetadata();\n          dm.setUrl(info.video ? info.url : di.url);\n          dm.setUrl2(info.video ? di.url : info.url);\n          dm.setLen1(info.video ? info.clen : di.clen);\n          dm.setLen2(info.video ? di.clen : info.clen);\n          dm.setHeaders(info.video ? info.headers : di.headers);\n          dm.setHeaders2(info.video ? di.headers : info.headers);\n          String file=data.getFile();\n          if (StringUtils.isNullOrEmptyOrBlank(file)) {\n            file=XDMUtils.getFileName(data.getUrl());\n          }\n          Logger.log(\"file: \" + file + \" url1: \"+ dm.getUrl()+ \" url2: \"+ dm.getUrl2()+ \" len1: \"+ dm.getLen1()+ \" len2: \"+ dm.getLen2());\n          String szStr=null;\n          if (info.clen > 0 && di.clen > 0) {\n            szStr=FormatUtilities.formatSize(info.clen + di.clen);\n          }\n          String videoContentType=info.video ? info.mime : di.mime;\n          String audioContentType=di.video ? di.mime : info.mime;\n          String ext=getYtDashFormat(videoContentType,audioContentType);\n          file+=\".\" + ext;\n          if (info.video) {\n          }\n          XDMApp.getInstance().addMedia(dm,file,YtUtil.getInfoFromITAG(info.video ? info.itag : di.itag) + (szStr == null ? \"\" : \" \" + szStr));\n          return true;\n        }\n      }\n      return true;\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  return false;\n}\n', '0.38461538461538464', '27', '37');
INSERT INTO `case_study` VALUES ('3351', 'processVideoManifest(ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '32', '339', '182', '-1000', '5', '0.1183', '0.1645', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private boolean processVideoManifest(ParsedHookData data){\n  String url=data.getUrl();\n  String file=data.getFile();\n  String contentType=data.getContentType();\n  if (contentType == null) {\n    contentType=\"\";\n  }\n  String ext=XDMUtils.getExtension(XDMUtils.getFileName(data.getUrl()));\n  File manifestfile=null;\n  try {\n    if (contentType.contains(\"mpegurl\") || \".m3u8\".equalsIgnoreCase(ext)) {\n      Logger.log(\"Downloading m3u8 manifest\");\n      manifestfile=downloadMenifest(data);\n      return M3U8Handler.handle(manifestfile,data);\n    }\n    if (contentType.contains(\"f4m\") || \".f4m\".equalsIgnoreCase(ext)) {\n      Logger.log(\"Downloading f4m manifest\");\n      manifestfile=downloadMenifest(data);\n      return F4mHandler.handle(manifestfile,data);\n    }\n    if (url.contains(\".facebook.com\") && url.toLowerCase().contains(\"pagelet\")) {\n      Logger.log(\"Downloading fb manifest\");\n      manifestfile=downloadMenifest(data);\n      return FBHandler.handle(manifestfile,data);\n    }\n    if (url.contains(\"player.vimeo.com\") && contentType.toLowerCase().contains(\"json\")) {\n      Logger.log(\"Downloading video manifest\");\n      manifestfile=downloadMenifest(data);\n      return VimeoHandler.handle(manifestfile,data);\n    }\n    if (url.contains(\"instagram.com/p/\")) {\n      Logger.log(\"Downloading video manifest\");\n      manifestfile=downloadMenifest(data);\n      return InstagramHandler.handle(manifestfile,data);\n    }\n  }\n catch (  Exception e) {\n  }\n finally {\n    if (manifestfile != null) {\n      manifestfile.delete();\n    }\n  }\n  return false;\n}\n', '0.7272727272727273', '7', '13');
INSERT INTO `case_study` VALUES ('3352', 'processNormalVideo(ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '33', '403', '278', '-1000', '4', '0.1119', '0.1438', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private void processNormalVideo(ParsedHookData data){\n  String file=data.getFile();\n  String type=data.getContentType();\n  if (type == null) {\n    type=\"\";\n  }\n  if (StringUtils.isNullOrEmptyOrBlank(file)) {\n    file=XDMUtils.getFileName(data.getUrl());\n  }\n  String ext=\"\";\n  if (type.contains(\"video/mp4\")) {\n    ext=\"mp4\";\n  }\n else   if (type.contains(\"video/x-flv\")) {\n    ext=\"flv\";\n  }\n else   if (type.contains(\"video/webm\")) {\n    ext=\"mkv\";\n  }\n else   if (type.contains(\"matroska\") || type.contains(\"mkv\")) {\n    ext=\"mkv\";\n  }\n else   if (type.equals(\"audio/mpeg\") || type.contains(\"audio/mp3\")) {\n    ext=\"mp3\";\n  }\n else   if (type.contains(\"audio/aac\")) {\n    ext=\"aac\";\n  }\n else   if (type.contains(\"audio/mp4\")) {\n    ext=\"m4a\";\n  }\n else {\n    return;\n  }\n  file+=\".\" + ext;\n  if (data.getContentLength() < Config.getInstance().getMinVidSize()) {\n    Logger.log(\"video less than min size\");\n    return;\n  }\n  HttpMetadata metadata=new HttpMetadata();\n  metadata.setUrl(data.getUrl());\n  metadata.setHeaders(data.getRequestHeaders());\n  metadata.setSize(data.getContentLength());\n  long size=data.getContentLength();\n  if (size > 0) {\n    if (data.isPartialResponse()) {\n      size=-1;\n    }\n  }\n  String sz=(size > 0 ? FormatUtilities.formatSize(size) : \"\");\n  if (ext.length() > 0) {\n    sz+=\" \" + ext.toUpperCase();\n  }\n  XDMApp.getInstance().addMedia(metadata,file,sz);\n}\n', '0.4444444444444444', '7', '17');
INSERT INTO `case_study` VALUES ('3353', 'downloadMenifest(ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\MonitoringSession.java', 'xdm', '26', '269', '213', '-1000', '3', '0.1071', '0.0817', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private File downloadMenifest(ParsedHookData data){\n  JavaHttpClient client=null;\n  OutputStream out=null;\n  try {\n    client=new JavaHttpClient(data.getUrl());\n    Iterator<HttpHeader> headers=data.getRequestHeaders().getAll();\n    while (headers.hasNext()) {\n      HttpHeader header=headers.next();\n      client.addHeader(header.getName(),header.getValue());\n    }\n    client.connect();\n    int resp=client.getStatusCode();\n    Logger.log(\"manifest download response: \" + resp);\n    if (resp == 206 || resp == 200) {\n      InputStream in=client.getInputStream();\n      File tmpFile=new File(Config.getInstance().getTemporaryFolder(),UUID.randomUUID().toString());\n      long len=client.getContentLength();\n      out=new FileOutputStream(tmpFile);\n      XDMUtils.copyStream(in,out,len);\n      Logger.log(\"manifest download successfull\");\n      return tmpFile;\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      out.close();\n    }\n catch (    Exception e) {\n    }\n    try {\n      client.dispose();\n    }\n catch (    Exception e) {\n    }\n  }\n  return null;\n}\n', '0.5', '12', '7');
INSERT INTO `case_study` VALUES ('3355', 'parse(byte[])', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\ParsedHookData.java', 'xdm', '40', '558', '336', '-1000', '5', '0.1039', '0.1168', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public static ParsedHookData parse(byte[] b) throws UnsupportedEncodingException {\n  ParsedHookData data=new ParsedHookData();\n  data.requestHeaders=new HeaderCollection();\n  data.responseHeaders=new HeaderCollection();\n  String strBuf=new String(b,\"utf-8\");\n  String[] arr=strBuf.split(\"\\r\\n\");\n  for (int i=0; i < arr.length; i++) {\n    String str=arr[i];\n    if (!str.contains(\"=\")) {\n      continue;\n    }\n    String ln=str;\n    int index=ln.indexOf(\"=\");\n    String key=ln.substring(0,index).trim().toLowerCase();\n    String val=ln.substring(index + 1).trim();\n    if (key.equals(\"url\")) {\n      data.setUrl(val);\n    }\n else     if (key.equals(\"file\")) {\n      val=XDMUtils.getFileName(val);\n      data.setFile(val);\n    }\n else     if (key.equals(\"req\")) {\n      index=val.indexOf(\":\");\n      if (index > 0) {\n        String headerName=val.substring(0,index).trim().toLowerCase();\n        String headerValue=val.substring(index + 1).trim();\n        if (headerName.equals(\"range\") && (!headerValue.startsWith(\"bytes=0-\"))) {\n          data.setPartialResponse(true);\n        }\n        if (!isBlockedHeader(headerName)) {\n          data.requestHeaders.addHeader(headerName,headerValue);\n        }\n        System.out.println(ln);\n      }\n    }\n else     if (key.equals(\"res\")) {\n      index=val.indexOf(\":\");\n      if (index > 0) {\n        String headerName=val.substring(0,index).trim().toLowerCase();\n        String headerValue=val.substring(index + 1).trim();\n        data.responseHeaders.addHeader(headerName,headerValue);\n      }\n    }\n  }\n  if (data.responseHeaders.containsHeader(\"content-length\") || data.responseHeaders.containsHeader(\"content-range\")) {\n    data.contentLength=NetUtils.getContentLength(data.responseHeaders);\n  }\n  if (data.responseHeaders.containsHeader(\"content-type\")) {\n    data.contentType=NetUtils.getCleanContentType(data.responseHeaders.getValue(\"content-type\"));\n  }\n  try {\n    data.setExt(XDMUtils.getExtension(XDMUtils.getFileName(data.getUrl())));\n  }\n catch (  Exception e) {\n  }\n  return data;\n}\n', '0.375', '15', '16');
INSERT INTO `case_study` VALUES ('3356', 'isBlockedHeader(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\ParsedHookData.java', 'xdm', '12', '66', '66', '-1000', '12', '0.0833', '0', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'private static boolean isBlockedHeader(String name){\n  for (int i=0; i < blockedHeaders.length; i++) {\n    if (name.startsWith(blockedHeaders[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('3373', 'read(InputStream)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\Request.java', 'xdm', '24', '239', '202', '-1000', '5', '0.1012', '0.0594', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void read(InputStream in) throws IOException {\n  String reqLine=NetUtils.readLine(in);\n  if (reqLine == null || reqLine.length() < 1) {\n    throw new IOException(\"Invalid request line: \" + reqLine);\n  }\n  String[] arr=reqLine.split(\" \");\n  if (arr.length != 3) {\n    throw new IOException(\"Invalid request: \" + reqLine);\n  }\n  this.url=arr[1];\n  this.method=arr[0].toLowerCase().equals(\"post\") ? 1 : 2;\n  this.headers=new HeaderCollection();\n  headers.loadFromStream(in);\n  String header=headers.getValue(\"Content-Length\");\n  if (header != null) {\n    long len=Long.parseLong(header);\n    body=new byte[(int)len];\n    int off=0;\n    while (len > 0) {\n      int x=in.read(body,off,body.length - off);\n      if (x == -1) {\n        throw new IOException(\"Unexpected EOF\");\n      }\n      len-=x;\n      off+=x;\n    }\n  }\n}\n', '0.5', '10', '8');
INSERT INTO `case_study` VALUES ('3382', 'write(OutputStream)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\Response.java', 'xdm', '12', '48', '30', '-1000', '3', '0.2222', '0.1205', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void write(OutputStream out) throws IOException {\n  StringBuffer buf=new StringBuffer();\n  buf.append(\"HTTP/1.1 \" + code + \" \"+ message+ \"\\r\\n\");\n  if (code != 204) {\n    headers.addHeader(\"Content-Length\",(body == null || body.length < 0) ? \"0\" : body.length + \"\");\n  }\n  headers.appendToBuffer(buf);\n  buf.append(\"\\r\\n\");\n  out.write(buf.toString().getBytes());\n  if (body != null && body.length > 0) {\n    out.write(body);\n  }\n  out.flush();\n}\n', '0.5', '2', '7');
INSERT INTO `case_study` VALUES ('3391', 'handle(File,ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\VimeoHandler.java', 'xdm', '35', '344', '93', '-1000', '5', '0.1122', '0.2355', '0', '0', '0', '0', '0', '1', '1', '0', '1', '1', 'public static boolean handle(File tempFile,ParsedHookData data){\n  try {\n    StringBuffer buf=new StringBuffer();\n    InputStream in=new FileInputStream(tempFile);\n    BufferedReader r=new BufferedReader(new InputStreamReader(in));\n    while (true) {\n      String ln=r.readLine();\n      if (ln == null) {\n        break;\n      }\n      buf.append(ln + \"\\n\");\n    }\n    in.close();\n    String keyword=\"\\\"progressive\\\"\";\n    int index=buf.indexOf(keyword);\n    if (index < 0) {\n      return false;\n    }\n    index+=keyword.length();\n    index=buf.indexOf(\":\",index);\n    if (index < 0) {\n      return false;\n    }\n    index++;\n    index=buf.indexOf(\"[\",index);\n    if (index < 0) {\n      return false;\n    }\n    index++;\n    int start=index;\n    index=buf.indexOf(\"]\",index);\n    if (index < 0) {\n      return false;\n    }\n    String str=buf.substring(start,index);\n    index=0;\n    while (index != -1) {\n      index=str.indexOf(\"{\",index);\n      if (index > -1) {\n        index++;\n        start=index;\n        index=str.indexOf(\"}\",index);\n        if (index > -1) {\n          String s=str.substring(start,index);\n          processString(s,data);\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  return false;\n}\n', '1', '12', '11');
INSERT INTO `case_study` VALUES ('3392', 'processString(String,ParsedHookData)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\VimeoHandler.java', 'xdm', '30', '363', '291', '-1000', '3', '0.102', '0.0709', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private static void processString(String str,ParsedHookData data){\n  String quality=\"\", type=\"\", url=\"\";\n  String[] arr=str.split(\",\");\n  for (int i=0; i < arr.length; i++) {\n    int index=arr[i].indexOf(\":\");\n    if (index > 0) {\n      String key=arr[i].substring(0,index).replace(\"\\\"\",\"\");\n      String val=arr[i].substring(index + 1).replace(\"\\\"\",\"\");\n      if (key.equals(\"url\")) {\n        url=val;\n        Logger.log(url);\n      }\n      if (key.equals(\"quality\")) {\n        quality=val;\n        Logger.log(quality);\n      }\n      if (key.equals(\"mime\")) {\n        type=val;\n        Logger.log(type);\n      }\n    }\n  }\n  String ext=\"mp4\";\n  if (type.contains(\"video/mp4\")) {\n    ext=\"mp4\";\n  }\n else   if (type.contains(\"video/webm\")) {\n    ext=\"webm\";\n  }\n  HttpMetadata metadata=new HttpMetadata();\n  metadata.setUrl(url);\n  metadata.setHeaders(data.getRequestHeaders());\n  String file=data.getFile();\n  if (StringUtils.isNullOrEmptyOrBlank(file)) {\n    file=XDMUtils.getFileName(data.getUrl());\n  }\n  XDMApp.getInstance().addMedia(metadata,file + \".\" + ext,ext.toUpperCase() + \" \" + quality);\n}\n', '0.5454545454545454', '13', '9');
INSERT INTO `case_study` VALUES ('3394', 'addToQueue(DASH_INFO)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\YtUtil.java', 'xdm', '20', '134', '78', '-1000', '4', '0.1778', '0.1287', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static boolean addToQueue(DASH_INFO info){\nsynchronized (lockObject) {\n    if (videoQueue.size() > 32) {\n      videoQueue.remove(0);\n    }\n    if (audioQueue.size() > 32) {\n      audioQueue.remove(0);\n    }\n    if (info.video) {\n      for (int i=videoQueue.size() - 1; i >= 0; i--) {\n        DASH_INFO di=videoQueue.get(i);\n        if (di.clen == info.clen) {\n          if (di.id.equals(info.id)) {\n            return false;\n          }\n        }\n      }\n      videoQueue.add(info);\n      Logger.log(\"video added \" + videoQueue.size());\n      return true;\n    }\n else {\n      for (int i=audioQueue.size() - 1; i >= 0; i--) {\n        DASH_INFO di=audioQueue.get(i);\n        if (di.clen == info.clen) {\n          if (di.id.equals(info.id)) {\n            return false;\n          }\n        }\n      }\n      audioQueue.add(info);\n      Logger.log(\"added added \" + audioQueue.size());\n      return true;\n    }\n  }\n}\n', '1', '5', '10');
INSERT INTO `case_study` VALUES ('3397', 'loadITAGs()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\monitoring\\YtUtil.java', 'xdm', '74', '810', '0', '-1000', '13', '0.1166', '0.7027', '0', '1', '1', '0', '0', '1', '1', '0', '0', '1', 'static void loadITAGs(){\n  if (itags != null) {\n    return;\n  }\n  itags=new HashMap<Integer,String>();\n  itags.put(5,\"320 x 240\");\n  itags.put(6,\"450 x 270\");\n  itags.put(13,\"Small\");\n  itags.put(17,\"176 x 144\");\n  itags.put(18,\"480 x 360\");\n  itags.put(22,\"1280 x 720\");\n  itags.put(34,\"480 x 360\");\n  itags.put(35,\"640 x 480 \");\n  itags.put(36,\"320 x 240\");\n  itags.put(37,\"1920 x 1080\");\n  itags.put(38,\"2048 x 1080\");\n  itags.put(43,\"480 x 360\");\n  itags.put(44,\"640 x 480\");\n  itags.put(45,\"1280 x 720\");\n  itags.put(46,\"1920 x 1080\");\n  itags.put(59,\"854 x 480\");\n  itags.put(78,\"854 x 480\");\n  itags.put(82,\"480 x 360   3D\");\n  itags.put(83,\"640 x 480   3D\");\n  itags.put(84,\"1280 x 720   3D\");\n  itags.put(85,\"1920 x 1080  3D\");\n  itags.put(100,\"480 x 360   3D\");\n  itags.put(101,\"640 x 480   3D\");\n  itags.put(102,\"1280 x 720   3D\");\n  itags.put(133,\"320 x 240\");\n  itags.put(134,\"480 x 360\");\n  itags.put(135,\"640 x 480\");\n  itags.put(136,\"1280 x 720\");\n  itags.put(137,\"1920 x 1080\");\n  itags.put(139,\"Low bitrate\");\n  itags.put(140,\"Med bitrate\");\n  itags.put(141,\"Hi  bitrate\");\n  itags.put(160,\"256 x 144\");\n  itags.put(167,\"360p\");\n  itags.put(168,\"480p\");\n  itags.put(169,\"720p\");\n  itags.put(170,\"1080p\");\n  itags.put(171,\"Med bitrate\");\n  itags.put(172,\"Hi  bitrate\");\n  itags.put(218,\"480\");\n  itags.put(219,\"480\");\n  itags.put(242,\"320 x 240\");\n  itags.put(243,\"480 x 360\");\n  itags.put(244,\"640 x 480\");\n  itags.put(245,\"640 x 480\");\n  itags.put(246,\"640 x 480\");\n  itags.put(247,\"1280 x 720\");\n  itags.put(248,\"1920 x 1080\");\n  itags.put(264,\"1440p\");\n  itags.put(266,\"2160p\");\n  itags.put(271,\"1440p\");\n  itags.put(272,\"2160p\");\n  itags.put(278,\"144p\");\n  itags.put(298,\"720p\");\n  itags.put(302,\"720p\");\n  itags.put(303,\"1080p\");\n  itags.put(308,\"1440p\");\n  itags.put(313,\"2160p\");\n  itags.put(315,\"2160p\");\n  itags.put(299,\"2160p\");\n}\n', '0', '0', '2');
INSERT INTO `case_study` VALUES ('3403', 'findProxyForUrl(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\AutoProxyHandler.java', 'xdm', '9', '30', '24', '-1000', '5', '0.1852', '0.0894', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private ProxyInfo findProxyForUrl(String url,String host) throws NoSuchMethodException, ScriptException, IOException {\n  if (!pacLoaded) {\n    loadPac();\n  }\n  Object localObject=((Invocable)engine).invokeFunction(\"FindProxyForURL\",new Object[]{url,host});\n  System.out.println(localObject);\n  ProxyInfo[] arr=extractAutoProxySetting((String)localObject);\n  if (arr == null || arr.length < 1)   return null;\n  return arr[0];\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('3404', 'extractAutoProxySetting(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\AutoProxyHandler.java', 'xdm', '17', '97', '58', '-1000', '3', '0.2279', '0.1117', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private final ProxyInfo[] extractAutoProxySetting(String paramString){\n  if (paramString != null) {\n    StringTokenizer localStringTokenizer=new StringTokenizer(paramString,\";\",false);\n    ProxyInfo[] arrayOfProxyInfo=new ProxyInfo[localStringTokenizer.countTokens()];\n    int i=0;\n    while (localStringTokenizer.hasMoreTokens()) {\n      String str=localStringTokenizer.nextToken();\n      int j=str.indexOf(\"PROXY\");\n      if (j != -1) {\n        arrayOfProxyInfo[(i++)]=new ProxyInfo(str.substring(j + 6));\n      }\n else {\n        j=str.indexOf(\"SOCKS\");\n        if (j != -1) {\n          arrayOfProxyInfo[(i++)]=new ProxyInfo(null,str.substring(j + 6));\n        }\n else {\n          arrayOfProxyInfo[(i++)]=new ProxyInfo(null,-1);\n        }\n      }\n    }\n    return arrayOfProxyInfo;\n  }\n  return new ProxyInfo[]{new ProxyInfo(null)};\n}\n', '1', '6', '5');
INSERT INTO `case_study` VALUES ('3405', 'loadPacScript()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\AutoProxyHandler.java', 'xdm', '11', '45', '35', '-1000', '4', '0.2121', '0.0815', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private String loadPacScript() throws IOException {\n  Logger.log(\"Loading PAC script\");\n  InputStream pacStram=new URL(pacUrl).openStream();\n  StringBuilder sb=new StringBuilder();\n  byte[] buf=new byte[512];\n  while (true) {\n    int x=pacStram.read(buf);\n    if (x == -1) {\n      break;\n    }\n    sb.append(new String(buf,0,x));\n  }\n  Logger.log(\"Done loading PAC script\");\n  return sb.toString();\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('3407', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\AutoProxyHandler.java', 'xdm', '34', '336', '111', '-1000', '5', '0.1471', '0.319', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', 'private void init() throws ScriptException, IOException {\n  Logger.log(\"Initializing PAC Handler\");\n  ScriptEngineManager mgr=new ScriptEngineManager(null);\n  engine=mgr.getEngineByName(\"js\");\n  engine.put(\"obj\",this);\n  this.autoProxyScript=new StringBuffer();\n  this.autoProxyScript.append(\"var _mon = new Array(\'JAN\', \'FEB\', \'MAR\', \'APR\', \'MAY\', \'JUN\', \'JUL\', \'AUG\', \'SEP\', \'OCT\', \'NOV\', \'DEC\');\\nvar _day = new Array(\'SUN\', \'MON\', \'TUE\', \'WED\', \'THU\', \'FRI\', \'SAT\');\\nfunction _isGmt(i) {\\n return typeof i == \'string\' && i == \'GMT\'; }\");\n  this.autoProxyScript.append(\"function dnsDomainIs(host, domain) {\\nif (domain != null && domain.charAt(0) != \'.\')\\nreturn shExpMatch(host, domain);\\nreturn shExpMatch(host, \'*\' + domain); }\");\n  this.autoProxyScript.append(\"function isPlainHostName(host){\\nreturn (dnsDomainLevels(host) == 0); }\");\n  this.autoProxyScript.append(\"function convert_addr(ipchars) {\\n    var bytes = ipchars.split(\'.\');\\n    var result = ((bytes[0] & 0xff) << 24) |\\n                 ((bytes[1] & 0xff) << 16) |\\n                 ((bytes[2] & 0xff) <<  8) |\\n                  (bytes[3] & 0xff);\\n    return result;\\n}\\n\");\n  this.autoProxyScript.append(\"function isInNet(ipaddr, pattern, maskstr) {\\n    var ipPattern = /^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$/;\\n    var test = ipaddr.match(ipPattern);\\n    if (test == null) {\\n        ipaddr = dnsResolve(ipaddr);\\n        if (ipaddr == null)\\n            return false;\\n    } else if ((test[1] > 255) || (test[2] > 255) || \\n               (test[3] > 255) || (test[4] > 255) ) {\\n        return false;\\n    }\\n    var host = convert_addr(ipaddr);\\n    var pat  = convert_addr(pattern);\\n    var mask = convert_addr(maskstr);\\n    return ((host & mask) == (pat & mask));\\n    \\n}\\n\");\n  this.autoProxyScript.append(\"function dnsResolve(host){\\n return String(obj.dnsResolve(host));\\n }\");\n  this.autoProxyScript.append(\"function isResolvable(host){\\nreturn (dnsResolve(host) != \'\'); }\");\n  this.autoProxyScript.append(\"function localHostOrDomainIs(host, hostdom){\\nreturn shExpMatch(hostdom, host + \'*\'); }\");\n  this.autoProxyScript.append(\"function dnsDomainLevels(host){\\nvar s = host + \'\';\\nfor (var i=0, j=0; i < s.length; i++)\\nif (s.charAt(i) == \'.\')\\nj++;\\nreturn j; }\");\n  this.autoProxyScript.append(\"function myIpAddress(){\\nreturn \'\");\n  try {\n    InetAddress localInetAddress=InetAddress.getLocalHost();\n    this.autoProxyScript.append(localInetAddress.getHostAddress());\n  }\n catch (  Throwable localThrowable) {\n    localThrowable.printStackTrace();\n    this.autoProxyScript.append(\"127.0.0.1\");\n  }\n  this.autoProxyScript.append(\"\'; }\");\n  this.autoProxyScript.append(\"function shExpMatch(str, shexp){ \\n if (typeof str != \'string\' || typeof shexp != \'string\') return false; \\n if (shexp == \'*\') return true; \\n if (str == \'\' && shexp == \'\') return true; \\n str = str.toLowerCase();\\n shexp = shexp.toLowerCase();\\n var index = shexp.indexOf(\'*\');\\n if (index == -1) { return (str == shexp); } \\n else if (index == 0) { \\n for (var i=0; i <= str.length; i++) { \\n if (shExpMatch(str.substring(i), shexp.substring(1))) return true; \\n } return false; } \\nelse { \\nvar sub = null, sub2 = null; \\nsub = shexp.substring(0, index);\\nif (index <= str.length) sub2 = str.substring(0, index); \\nif (sub != \'\' && sub2 != \'\' && sub == sub2) { \\nreturn shExpMatch(str.substring(index), shexp.substring(index)); }\\nelse { return false; }\\n} }\");\n  this.autoProxyScript.append(\"function _dateRange(day1, month1, year1, day2, month2, year2, gmt){\\nif (typeof day1 != \'number\' || day1 <= 0 || typeof month1 != \'string\' || typeof year1 != \'number\' || year1 <= 0\\n || typeof day2 != \'number\' || day2 <= 0 || typeof month2 != \'string\' || typeof year2 != \'number\' || year2 <= 0\\n || typeof gmt != \'boolean\') return false; \\nvar m1 = -1, m2 = -1;\\nfor (var i=0; i < _mon.length; i++){\\nif (_mon[i] == month1)\\nm1 = i;\\nif (_mon[i] == month2)\\nm2 = i;\\n}\\nvar cur = new Date();\\nvar d1 = new Date(year1, m1, day1, 0, 0, 0);\\nvar d2 = new Date(year2, m2, day2, 23, 59, 59);\\nif (gmt == true)\\ncur = new Date(cur.getTime() - cur.getTimezoneOffset() * 60 * 1000);\\nreturn ((d1.getTime() <= cur.getTime()) && (cur.getTime() <= d2.getTime()));\\n}\\nfunction dateRange(p1, p2, p3, p4, p5, p6, p7){\\nvar cur = new Date();\\nif (typeof p1 == \'undefined\')\\nreturn false;\\nelse if (typeof p2 == \'undefined\' || _isGmt(p2))\\n{\\nif ((typeof p1) == \'string\')\\nreturn _dateRange(1, p1, cur.getFullYear(), 31, p1, cur.getFullYear(), _isGmt(p2));\\nelse if (typeof p1 == \'number\' && p1 > 31)\\nreturn _dateRange(1, \'JAN\', p1, 31, \'DEC\', p1, _isGmt(p2));\\nelse {\\nfor (var i=0; i < _mon.length; i++)\\nif (_dateRange(p1, _mon[i], cur.getFullYear(), p1, _mon[i], cur.getFullYear(), _isGmt(p2)))\\n return true;\\nreturn false;\\n}\\n}\\nelse if (typeof p3 == \'undefined\' || _isGmt(p3))\\n{\\nif ((typeof p1) == \'string\')\\nreturn _dateRange(1, p1, cur.getFullYear(), 31, p2, cur.getFullYear(), _isGmt(p3));\\nelse if (typeof p1 == \'number\' && typeof p2 == \'number\' && (p1 > 31 || p2 > 31))\\nreturn _dateRange(1, \'JAN\', p1, 31, \'DEC\', p2, _isGmt(p3));\\nelse \\n{\\nif ((typeof p2) == \'string\')\\n{\\nreturn _dateRange(p1, p2, cur.getFullYear(), p1, p2, cur.getFullYear(), _isGmt(p3));\\n}\\nelse \\n{\\nfor (var i=0; i < _mon.length; i++)\\nif (_dateRange(p1, _mon[i], cur.getFullYear(), p2, _mon[i], cur.getFullYear(), _isGmt(p3)))\\nreturn true;\\nreturn false;\\n}\\n}\\n}\\nelse if (typeof p4 == \'undefined\' || _isGmt(p4))\\nreturn _dateRange(p1, p2, p3, p1, p2, p3, _isGmt(p4));\\nelse if (typeof p5 == \'undefined\' || _isGmt(p5))\\n{\\nif (typeof p2 == \'number\')\\nreturn _dateRange(1, p1, p2, 31, p3, p4, _isGmt(p5));\\nelse \\nreturn _dateRange(p1, p2, cur.getFullYear(), p3, p4, cur.getFullYear(), _isGmt(p5))\\n}\\nelse if (typeof p6 == \'undefined\')\\nreturn false;\\nelse \\nreturn _dateRange(p1, p2, p3, p4, p5, p6, _isGmt(p7));\\n}\");\n  this.autoProxyScript.append(\"function timeRange(p1, p2, p3, p4, p5, p6, p7) {\\nif (typeof p1 == \'undefined\')\\nreturn false;\\nelse if (typeof p2 == \'undefined\' || _isGmt(p2))\\nreturn _timeRange(p1, 0, 0, p1, 59, 59, _isGmt(p2));\\nelse if (typeof p3 == \'undefined\' || _isGmt(p3))\\nreturn _timeRange(p1, 0, 0, p2, 0, 0, _isGmt(p3));\\nelse if (typeof p4 == \'undefined\')\\nreturn false;\\nelse if (typeof p5 == \'undefined\' || _isGmt(p5))\\nreturn _timeRange(p1, p2, 0, p3, p4, 0, _isGmt(p5));\\nelse if (typeof p6 == \'undefined\')\\nreturn false;\\nelse \\nreturn _timeRange(p1, p2, p3, p4, p5, p6, _isGmt(p7));\\n}\\nfunction _timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt) {\\nif (typeof hour1 != \'number\' || typeof min1 != \'number\' || typeof sec1 != \'number\' \\n|| hour1 < 0 || min1 < 0 || sec1 < 0 \\n|| typeof hour2 != \'number\' || typeof min2 != \'number\' || typeof sec2 != \'number\' \\n|| hour2 < 0 || min2 < 0 || sec2 < 0 \\n|| typeof gmt != \'boolean\')  return false; \\nvar cur = new Date();\\nvar d1 = new Date();\\nvar d2 = new Date();\\nd1.setHours(hour1);\\nd1.setMinutes(min1);\\nd1.setSeconds(sec1);\\nd2.setHours(hour2);\\nd2.setMinutes(min2);\\nd2.setSeconds(sec2);\\nif (gmt == true)\\ncur = new Date(cur.getTime() - cur.getTimezoneOffset() * 60 * 1000);\\nreturn ((d1.getTime() <= cur.getTime()) && (cur.getTime() <= d2.getTime()));\\n}\");\n  this.autoProxyScript.append(\"function weekdayRange(wd1, wd2, gmt){\\nif (typeof wd1 == \'undefined\') \\nreturn false;\\nelse if (typeof wd2 == \'undefined\' || _isGmt(wd2)) \\nreturn _weekdayRange(wd1, wd1, _isGmt(wd2)); \\nelse \\nreturn _weekdayRange(wd1, wd2, _isGmt(gmt)); }\\nfunction _weekdayRange(wd1, wd2, gmt) {\\nif (typeof wd1 != \'string\' || typeof wd2 != \'string\' || typeof gmt != \'boolean\') return false; \\nvar w1 = -1, w2 = -1;\\nfor (var i=0; i < _day.length; i++) {\\nif (_day[i] == wd1)\\nw1 = i;\\nif (_day[i] == wd2)\\nw2 = i; }\\nvar cur = new Date();\\nif (gmt == true)\\ncur = new Date(cur.getTime() - cur.getTimezoneOffset() * 60 * 1000);\\nvar w3 = cur.getDay();\\nif (w1 > w2)\\nw2 = w2 + 7;\\nif (w1 > w3)\\nw3 = w3 + 7;\\nreturn (w1 <= w3 && w3 <= w2); }\");\n  this.autoProxyScript.append(\" function alert() {} \");\n  Logger.log(\"Executing builtin PAC functions\");\n  engine.eval(this.autoProxyScript.toString());\n  ScriptEngineFactory sef=engine.getFactory();\n  System.out.println(sef.getMethodCallSyntax(\"obj\",\"dnsResolve\",\"string\"));\n  engine.eval(\"obj.dnsResolve(\'\')\");\n  Logger.log(\"Done executing builtin PAC functions\");\n}\n', '1', '24', '50');
INSERT INTO `case_study` VALUES ('3408', 'dnsResolve(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\AutoProxyHandler.java', 'xdm', '6', '12', '9', '-1000', '4', '0.2778', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public String dnsResolve(String paramString){\n  String str=\"\";\n  try {\n    str=InetAddress.getByName(paramString).getHostAddress();\n  }\n catch (  UnknownHostException localUnknownHostException) {\n    localUnknownHostException.printStackTrace();\n  }\n  return str;\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('3413', 'read(byte[],int,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\FixedRangeInputStream.java', 'xdm', '12', '40', '14', '-1000', '4', '0.2361', '0.1968', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public int read() throws IOException {\n  if (rem == 0) {\n    return -1;\n  }\n  int x=baseStream.read();\n  if (x == -1) {\n    if (rem > 0) {\n      throw new IOException(\"Unexpected eof\");\n    }\n else     return -1;\n  }\n  if (rem > 0) {\n    rem-=x;\n  }\n  return x;\n}\n', '0', '1', '5');
INSERT INTO `case_study` VALUES ('3427', 'putSocket(Socket,String,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\KeepAliveConnectionCache.java', 'xdm', '8', '13', '0', '-1000', '3', '0.25', '0.2593', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', 'public synchronized void putSocket(Socket socket,String host,int port){\n  KeepAliveInfo info=new KeepAliveInfo();\n  info.setLastUsed(System.currentTimeMillis());\n  info.setHost(host);\n  info.setPort(port);\n  info.setSocket(socket);\n  socketList.add(info);\n}\n', '0.2', '4', '1');
INSERT INTO `case_study` VALUES ('3429', 'scavengeCache()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\KeepAliveConnectionCache.java', 'xdm', '17', '111', '86', '-1000', '5', '0.1497', '0.0788', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private void scavengeCache(){\n  ArrayList<Socket> sockets2Close=new ArrayList<Socket>();\nsynchronized (_this) {\n    for (int i=0; i < socketList.size(); i++) {\n      KeepAliveInfo info=socketList.get(i);\n      long now=System.currentTimeMillis();\n      if (now - info.getLastUsed() >= MAX_KEEP_ALIVE_INT) {\n        socketList.remove(i);\n        sockets2Close.add(info.getSocket());\n      }\n    }\n  }\n  for (int i=0; i < socketList.size(); i++) {\n    KeepAliveInfo info=socketList.get(i);\n    long now=System.currentTimeMillis();\n    if (now - info.getLastUsed() >= MAX_KEEP_ALIVE_INT) {\n      socketList.remove(i);\n      try {\n        info.getSocket().close();\n      }\n catch (      IOException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n}\n', '0.5', '8', '6');
INSERT INTO `case_study` VALUES ('3430', 'run()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\KeepAliveConnectionCache.java', 'xdm', '10', '39', '33', '-1000', '6', '0.2', '0.0694', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void run(){\n  while (!stop) {\n    long lastrun=System.currentTimeMillis();\n    scavengeCache();\n    long now=System.currentTimeMillis();\n    if (now - lastrun < MAX_KEEP_ALIVE_INT) {\n      try {\n        Thread.sleep(MAX_KEEP_ALIVE_INT - (now - lastrun));\n      }\n catch (      InterruptedException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n}\n', '0', '3', '4');
INSERT INTO `case_study` VALUES ('3442', 'parse(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\ParsedURL.java', 'xdm', '18', '71', '0', '-1000', '4', '0.1869', '0.1902', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static ParsedURL parse(String urlString){\n  try {\n    URL url=new URL(urlString);\n    ParsedURL parsedURL=new ParsedURL();\n    parsedURL._url=urlString;\n    parsedURL.host=url.getHost();\n    parsedURL.port=url.getPort();\n    if (parsedURL.port < 0) {\n      parsedURL.port=url.getDefaultPort();\n    }\n    parsedURL.protocol=url.getProtocol();\n    parsedURL.pathAndQuery=url.getPath();\n    if (StringUtils.isNullOrEmptyOrBlank(parsedURL.pathAndQuery)) {\n      parsedURL.pathAndQuery=\"/\";\n    }\n    String query=url.getQuery();\n    if (!StringUtils.isNullOrEmptyOrBlank(query)) {\n      parsedURL.pathAndQuery+=\"?\" + query;\n    }\n    return parsedURL;\n  }\n catch (  Exception e) {\n    return null;\n  }\n}\n', '1', '5', '5');
INSERT INTO `case_study` VALUES ('3449', 'ProxyInfo(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\ProxyInfo.java', 'xdm', '20', '71', '0', '-1000', '3', '0.21', '0.2809', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public ProxyInfo(String paramString1,int paramInt1,String paramString2,int paramInt2){\n  this.proxy=paramString1;\n  this.port=paramInt1;\n  this.socksProxy=paramString2;\n  this.socksPort=paramInt2;\n}\n', '0', '8', '1');
INSERT INTO `case_study` VALUES ('3458', 'toString()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\ProxyInfo.java', 'xdm', '6', '13', '11', '-1000', '4', '0.25', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public String toString(){\n  if (this.proxy != null) {\n    return this.proxy + \":\" + this.port;\n  }\n  if (this.socksProxy != null) {\n    return this.socksProxy + \":\" + this.socksPort;\n  }\n  return \"DIRECT\";\n}\n', '0', '6', '3');
INSERT INTO `case_study` VALUES ('3460', 'resolve(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\ProxyResolver.java', 'xdm', '21', '143', '76', '-1000', '3', '0.1571', '0.1714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static WebProxy resolve(String url){\n  Config config=Config.getInstance();\n  int proxyMode=config.getProxyMode();\n  if (proxyMode == 1) {\n    try {\n      String pacUrl=config.getProxyPac();\n      AutoProxyHandler pacHandler=AutoProxyHandler.getInstance();\n      String pacUrl2=pacHandler.getPacUrl();\n      if (pacUrl2 == null || pacUrl2.compareTo(pacUrl) != 0) {\n        pacHandler.setPacUrl(pacUrl);\n      }\n      return pacHandler.getProxyForUrl(url);\n    }\n catch (    Exception e) {\n      return null;\n    }\n  }\n  if (proxyMode == 2) {\n    if (config.getProxyHost() == null || config.getProxyHost().length() < 1) {\n      return null;\n    }\n    if (config.getProxyPort() < 1) {\n      return null;\n    }\n    return new WebProxy(config.getProxyHost(),config.getProxyPort());\n  }\n  if (proxyMode == 3) {\n    if (config.getSocksHost() == null || config.getSocksHost().length() < 1) {\n      return null;\n    }\n    if (config.getSocksPort() < 1) {\n      return null;\n    }\n    WebProxy wp=new WebProxy(config.getSocksHost(),config.getSocksPort());\n    wp.setSocks(true);\n    return wp;\n  }\n  return null;\n}\n', '0.23076923076923078', '8', '13');
INSERT INTO `case_study` VALUES ('3461', 'wrapSSL(Socket,String,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\SocketFactory.java', 'xdm', '7', '17', '13', '-1000', '4', '0.2381', '0.09', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static SSLSocket wrapSSL(Socket socket,String host,int port) throws NetworkException {\n  try {\n    SSLSocket sock2=(SSLSocket)(HttpContext.getInstance().getSSLContext().getSocketFactory()).createSocket(socket,host,port,true);\n    sock2.startHandshake();\n    return sock2;\n  }\n catch (  IOException e) {\n    throw new NetworkException(\"Https connection failed: \" + host + \":\"+ port);\n  }\n}\n', '0.6666666666666666', '5', '2');
INSERT INTO `case_study` VALUES ('3462', 'createSocket(String,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\SocketFactory.java', 'xdm', '11', '33', '11', '-1000', '4', '0.1948', '0.2265', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static Socket createSocket(String host,int port) throws HostUnreachableException {\n  try {\n    Socket sock=new Socket();\n    sock.setSoTimeout(Config.getInstance().getNetworkTimeout() * 1000);\n    sock.setTcpNoDelay(true);\n    sock.setReceiveBufferSize(tcpBufSize);\n    sock.setSoLinger(false,0);\n    sock.connect(new InetSocketAddress(host,port));\n    return sock;\n  }\n catch (  IOException e) {\n    throw new HostUnreachableException(\"Unable to connect to: \" + host + \":\"+ port);\n  }\n}\n', '0.6666666666666666', '4', '2');
INSERT INTO `case_study` VALUES ('3465', 'encode(byte[])', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\Base64.java', 'xdm', '28', '209', '40', '-1000', '3', '0.1709', '0.1719', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static String encode(byte[] bytes){\n  int length=bytes.length;\n  if (length == 0)   return \"\";\n  StringBuffer buffer=new StringBuffer((int)Math.ceil((double)length / 3d) * 4);\n  int remainder=length % 3;\n  length-=remainder;\n  int block;\n  int i=0;\n  while (i < length) {\n    block=((bytes[i++] & 0xff) << 16) | ((bytes[i++] & 0xff) << 8) | (bytes[i++] & 0xff);\n    buffer.append(ALPHABET.charAt(block >>> 18));\n    buffer.append(ALPHABET.charAt((block >>> 12) & 0x3f));\n    buffer.append(ALPHABET.charAt((block >>> 6) & 0x3f));\n    buffer.append(ALPHABET.charAt(block & 0x3f));\n  }\n  if (remainder == 0)   return buffer.toString();\n  if (remainder == 1) {\n    block=(bytes[i] & 0xff) << 4;\n    buffer.append(ALPHABET.charAt(block >>> 6));\n    buffer.append(ALPHABET.charAt(block & 0x3f));\n    buffer.append(\"==\");\n    return buffer.toString();\n  }\n  block=(((bytes[i++] & 0xff) << 8) | ((bytes[i]) & 0xff)) << 2;\n  buffer.append(ALPHABET.charAt(block >>> 12));\n  buffer.append(ALPHABET.charAt((block >>> 6) & 0x3f));\n  buffer.append(ALPHABET.charAt(block & 0x3f));\n  buffer.append(\"=\");\n  return buffer.toString();\n}\n', '0', '6', '5');
INSERT INTO `case_study` VALUES ('3466', 'decode(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\Base64.java', 'xdm', '16', '83', '46', '-1000', '3', '0.1771', '0.096', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static byte[] decode(String string){\n  int length=string.length();\n  if (length == 0)   return new byte[0];\n  int pad=(string.charAt(length - 2) == \'=\') ? 2 : (string.charAt(length - 1) == \'=\') ? 1 : 0;\n  int size=length * 3 / 4 - pad;\n  byte[] buffer=new byte[size];\n  int block;\n  int i=0;\n  int index=0;\n  while (i < length) {\n    block=(ALPHABET.indexOf(string.charAt(i++)) & 0xff) << 18 | (ALPHABET.indexOf(string.charAt(i++)) & 0xff) << 12 | (ALPHABET.indexOf(string.charAt(i++)) & 0xff) << 6 | (ALPHABET.indexOf(string.charAt(i++)) & 0xff);\n    buffer[index++]=(byte)(block >>> 16);\n    if (index < size)     buffer[index++]=(byte)((block >>> 8) & 0xff);\n    if (index < size)     buffer[index++]=(byte)(block & 0xff);\n  }\n  return buffer;\n}\n', '0', '8', '7');
INSERT INTO `case_study` VALUES ('3467', 'launchFirefox(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\BrowserLauncher.java', 'xdm', '13', '66', '54', '-1000', '2', '0.1538', '0.1204', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static boolean launchFirefox(String args){\n  int os=XDMUtils.detectOS();\n  if (os == XDMUtils.WINDOWS) {\n    File[] ffPaths={new File(System.getenv(\"PROGRAMFILES\"),\"Mozilla Firefox\\\\firefox.exe\"),new File(System.getenv(\"PROGRAMFILES(X86)\"),\"Mozilla Firefox\\\\firefox.exe\")};\n    for (int i=0; i < ffPaths.length; i++) {\n      System.out.println(ffPaths[i]);\n      if (ffPaths[i].exists()) {\n        return XDMUtils.exec(\"\\\"\" + ffPaths[i] + \"\\\" \"+ args);\n      }\n    }\n  }\n  if (os == XDMUtils.MAC) {\n    File[] ffPaths={new File(\"/Applications/Firefox.app\")};\n    for (int i=0; i < ffPaths.length; i++) {\n      if (ffPaths[i].exists()) {\n        return MacUtils.launchApp(ffPaths[i].getAbsolutePath(),args);\n      }\n    }\n  }\n  return false;\n}\n', '0.6666666666666666', '6', '7');
INSERT INTO `case_study` VALUES ('3468', 'launchChrome(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\BrowserLauncher.java', 'xdm', '13', '66', '54', '-1000', '3', '0.1538', '0.1204', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static boolean launchChrome(String args){\n  int os=XDMUtils.detectOS();\n  if (os == XDMUtils.WINDOWS) {\n    File[] ffPaths={new File(System.getenv(\"PROGRAMFILES\"),\"Google\\\\Chrome\\\\Application\\\\chrome.exe\"),new File(System.getenv(\"PROGRAMFILES(X86)\"),\"Google\\\\Chrome\\\\Application\\\\chrome.exe\"),new File(System.getenv(\"LOCALAPPDATA\"),\"Google\\\\Chrome\\\\Application\\\\chrome.exe\")};\n    for (int i=0; i < ffPaths.length; i++) {\n      if (ffPaths[i].exists()) {\n        return XDMUtils.exec(\"\\\"\" + ffPaths[i] + \"\\\" \"+ args);\n      }\n    }\n  }\n  if (os == XDMUtils.MAC) {\n    File[] ffPaths={new File(\"/Applications/Google Chrome.app\")};\n    for (int i=0; i < ffPaths.length; i++) {\n      if (ffPaths[i].exists()) {\n        return MacUtils.launchApp(ffPaths[i].getAbsolutePath(),args);\n      }\n    }\n  }\n  return false;\n}\n', '0.6666666666666666', '6', '7');
INSERT INTO `case_study` VALUES ('3474', 'addTimePart(long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\DateTimeUtils.java', 'xdm', '10', '23', '1', '-1000', '3', '0.3333', '0.3598', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static Date addTimePart(long sec){\n  if (sec < 0) {\n    return null;\n  }\n  Calendar cal=Calendar.getInstance();\n  cal.set(Calendar.HOUR_OF_DAY,0);\n  cal.set(Calendar.MINUTE,0);\n  cal.set(Calendar.SECOND,0);\n  cal.set(Calendar.MILLISECOND,0);\n  cal.add(Calendar.SECOND,(int)sec);\n  return cal.getTime();\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('3477', 'FFmpegDownloader()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\FFmpegDownloader.java', 'xdm', '12', '50', '34', '-1000', '5', '0.2292', '0.2462', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', 'public FFmpegDownloader(){\n  if (XDMUtils.detectOS() == XDMUtils.WINDOWS) {\n    if (XDMUtils.below7()) {\n      url+=\"xp.zip.xz\";\n    }\n else {\n      url+=\"win.zip.xz\";\n    }\n  }\n else   if (XDMUtils.detectOS() == XDMUtils.MAC) {\n    url+=\"mac.zip.xz\";\n  }\n else   if (XDMUtils.detectOS() == XDMUtils.LINUX) {\n    if (XDMUtils.getOsArch() == 32) {\n      url+=\"linux86.zip.xz\";\n    }\n else {\n      url+=\"linux64.zip.xz\";\n    }\n  }\n  tmpFile=UUID.randomUUID().toString();\n}\n', '0.3333333333333333', '0', '6');
INSERT INTO `case_study` VALUES ('3478', 'start()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\FFmpegDownloader.java', 'xdm', '10', '33', '21', '-1000', '3', '0.2', '0.0782', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void start(){\n  HttpMetadata metadata=new HttpMetadata();\n  metadata.setUrl(url);\n  System.out.println(url);\n  d=new HttpDownloader(metadata.getId(),Config.getInstance().getTemporaryFolder(),metadata);\n  d.registerListener(this);\n  d.start();\n  wnd=new DownloadWindow(metadata.getId(),this);\n  wnd.setVisible(true);\n}\n', '0.6666666666666666', '1', '1');
INSERT INTO `case_study` VALUES ('3488', 'deleteTmpFiles(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\FFmpegDownloader.java', 'xdm', '15', '70', '35', '-1000', '4', '0.225', '0.1322', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void deleteTmpFiles(String id){\n  Logger.log(\"Deleting metadata for \" + id);\n  File mf=new File(Config.getInstance().getMetadataFolder(),id);\n  boolean deleted=mf.delete();\n  Logger.log(\"Deleted manifest \" + id + \" \"+ deleted);\n  File df=new File(Config.getInstance().getTemporaryFolder(),id);\n  File[] files=df.listFiles();\n  if (files != null && files.length > 0) {\n    for (    File f : files) {\n      deleted=f.delete();\n      Logger.log(\"Deleted tmp file \" + id + \" \"+ deleted);\n    }\n  }\n  deleted=df.delete();\n  Logger.log(\"Deleted tmp folder \" + id + \" \"+ deleted);\n}\n', '0.5', '6', '4');
INSERT INTO `case_study` VALUES ('3489', 'extractFFmpeg()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\FFmpegDownloader.java', 'xdm', '28', '329', '280', '-1000', '5', '0.0873', '0.0626', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void extractFFmpeg(){\n  ZipInputStream zipIn=null;\n  OutputStream out=null;\n  wnd2=new FFmpegExtractorWnd(this);\n  wnd2.setVisible(true);\n  try {\n    File input=new File(Config.getInstance().getTemporaryFolder(),tmpFile);\n    zipIn=null;\n    while (true) {\n      ZipEntry ent=zipIn.getNextEntry();\n      if (ent == null)       break;\n      String name=ent.getName();\n      File outFile=new File(Config.getInstance().getDataFolder(),name);\n      out=new FileOutputStream(outFile);\n      byte[] buf=new byte[8192];\n      while (true) {\n        int x=zipIn.read(buf);\n        if (x == -1)         break;\n        out.write(buf,0,x);\n      }\n      out.close();\n      out=null;\n      outFile.setExecutable(true);\n    }\n    input.delete();\n    wnd2.dispose();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      zipIn.close();\n      if (out != null)       out.close();\n    }\n catch (    Exception e) {\n      Logger.log(e);\n    }\n  }\n}\n', '0.6', '10', '8');
INSERT INTO `case_study` VALUES ('3491', 'formatDate(long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\FormatUtilities.java', 'xdm', '6', '11', '7', '-1000', '3', '0.3333', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static String formatDate(long date){\n  if (_format == null) {\n    _format=new SimpleDateFormat(\"yyyy-MM-dd\");\n  }\n  Date dt=new Date(date);\n  return _format.format(dt);\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('3492', 'formatSize(double)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\FormatUtilities.java', 'xdm', '7', '6', '0', '-1000', '2', '0.5', '0.3333', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static String formatSize(double length){\n  if (length < 0)   return \"---\";\n  if (length > MB) {\n    return String.format(\"%.1f MB\",(float)length / MB);\n  }\n else   if (length > KB) {\n    return String.format(\"%.1f KB\",(float)length / KB);\n  }\n else {\n    return String.format(\"%d B\",(int)length);\n  }\n}\n', '0', '1', '4');
INSERT INTO `case_study` VALUES ('3495', 'hms(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\FormatUtilities.java', 'xdm', '8', '18', '8', '-1000', '3', '0.2917', '0.1198', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static String hms(int sec){\n  int hrs=0, min=0;\n  hrs=sec / 3600;\n  min=(sec % 3600) / 60;\n  sec=sec % 60;\n  String str=String.format(\"%02d:%02d:%02d\",hrs,min,sec);\n  return str;\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('3496', 'parseHttpDate(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\HttpDateParser.java', 'xdm', '9', '28', '20', '-1000', '4', '0.2037', '0.119', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static Date parseHttpDate(String lastModified){\n  if (StringUtils.isNullOrEmptyOrBlank(lastModified)) {\n    return null;\n  }\n  if (fmt == null) {\n    fmt=new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss z\",Locale.US);\n    fmt.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n  }\n  try {\n    return fmt.parse(lastModified);\n  }\n catch (  ParseException e) {\n    Logger.log(e);\n  }\n  return null;\n}\n', '1', '2', '4');
INSERT INTO `case_study` VALUES ('3497', 'initShutdown()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\LinuxUtils.java', 'xdm', '9', '32', '28', '-1000', '5', '0.1667', '0.0452', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public static void initShutdown(){\n  for (int i=0; i < shutdownCmds.length; i++) {\n    String cmd=shutdownCmds[0];\n    try {\n      Process proc=Runtime.getRuntime().exec(cmd);\n      int ret=proc.waitFor();\n      if (ret == 0)       break;\n    }\n catch (    Exception e) {\n      Logger.log(e);\n    }\n  }\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('3498', 'open(File)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\LinuxUtils.java', 'xdm', '9', '31', '26', '-1000', '5', '0.2222', '0.0909', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void open(final File f) throws FileNotFoundException {\n  if (!f.exists()) {\n    throw new FileNotFoundException();\n  }\n  try {\n    ProcessBuilder pb=new ProcessBuilder();\n    pb.command(\"xdg-open\",f.getAbsolutePath());\n    pb.start();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('3500', 'addToStartup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\LinuxUtils.java', 'xdm', '13', '65', '52', '-1000', '5', '0.1648', '0.0985', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void addToStartup(){\n  File dir=new File(System.getProperty(\"user.home\"),\".config/autostart\");\n  dir.mkdirs();\n  File f=new File(dir,\"xdman.desktop\");\n  FileOutputStream fs=null;\n  try {\n    fs=new FileOutputStream(f);\n    fs.write(getDesktopFileString().getBytes());\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      if (fs != null)       fs.close();\n    }\n catch (    Exception e2) {\n    }\n  }\n  f.setExecutable(true);\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('3501', 'isAlreadyAutoStart()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\LinuxUtils.java', 'xdm', '16', '102', '84', '-1000', '5', '0.1307', '0.0637', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static boolean isAlreadyAutoStart(){\n  File f=new File(System.getProperty(\"user.home\"),\".config/autostart/xdman.desktop\");\n  if (!f.exists())   return false;\n  FileInputStream in=null;\n  byte[] buf=new byte[(int)f.length()];\n  try {\n    in=new FileInputStream(f);\n    if (in.read(buf) != f.length()) {\n      return false;\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      if (in != null)       in.close();\n    }\n catch (    Exception e2) {\n    }\n  }\n  String str=new String(buf);\n  String s1=getProperPath(System.getProperty(\"java.home\"));\n  String s2=XDMUtils.getJarFile().getAbsolutePath();\n  return str.contains(s1) && str.contains(s2);\n}\n', '1', '8', '6');
INSERT INTO `case_study` VALUES ('3505', 'browseURL(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\LinuxUtils.java', 'xdm', '7', '17', '13', '-1000', '4', '0.25', '0.125', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static void browseURL(final String url){\n  try {\n    ProcessBuilder pb=new ProcessBuilder();\n    pb.command(\"xdg-open\",url);\n    pb.start();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('3508', 'log(Object)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\Logger.java', 'xdm', '6', '11', '7', '-1000', '3', '0.4167', '0.1786', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static void log(Object obj){\n  if (obj instanceof Throwable) {\n    getErrorStream().print(\"[ \" + Thread.currentThread().getName() + \" ] \");\n    ((Throwable)obj).printStackTrace(getErrorStream());\n  }\n else {\n    getLogStream().println(\"[ \" + Thread.currentThread().getName() + \" ] \"+ obj);\n  }\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('3509', 'open(File)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\MacUtils.java', 'xdm', '9', '31', '26', '-1000', '5', '0.2222', '0.0909', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void open(final File f) throws FileNotFoundException {\n  if (!f.exists()) {\n    throw new FileNotFoundException();\n  }\n  try {\n    ProcessBuilder pb=new ProcessBuilder();\n    pb.command(\"open\",f.getAbsolutePath());\n    if (pb.start().waitFor() != 0) {\n      throw new FileNotFoundException();\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '3', '4');
INSERT INTO `case_study` VALUES ('3510', 'openFolder(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\MacUtils.java', 'xdm', '12', '55', '44', '-1000', '5', '0.1806', '0.0833', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public static void openFolder(String folder,String file) throws FileNotFoundException {\n  File f=new File(folder,file);\n  if (!f.exists()) {\n    throw new FileNotFoundException();\n  }\n  try {\n    ProcessBuilder pb=new ProcessBuilder();\n    Logger.log(\"Opening folder: \" + f.getAbsolutePath());\n    pb.command(\"open\",\"-R\",f.getAbsolutePath());\n    if (pb.start().waitFor() != 0) {\n      throw new FileNotFoundException();\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('3511', 'launchApp(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\MacUtils.java', 'xdm', '9', '32', '28', '-1000', '6', '0.1778', '0.0722', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static boolean launchApp(String app,String args){\n  try {\n    ProcessBuilder pb=new ProcessBuilder();\n    pb.command(\"open\",\"-n\",\"-a\",app,\"--args\",args);\n    if (pb.start().waitFor() != 0) {\n      throw new FileNotFoundException();\n    }\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    return false;\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('3513', 'addToStartup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\MacUtils.java', 'xdm', '13', '65', '52', '-1000', '5', '0.1648', '0.0985', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void addToStartup(){\n  File dir=new File(System.getProperty(\"user.home\"),\"Library/LaunchAgents\");\n  dir.mkdirs();\n  File f=new File(dir,\"org.sdg.xdman.plist\");\n  FileOutputStream fs=null;\n  try {\n    fs=new FileOutputStream(f);\n    fs.write(getStartupPlist().getBytes());\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      if (fs != null)       fs.close();\n    }\n catch (    Exception e2) {\n    }\n  }\n  f.setExecutable(true);\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('3514', 'isAlreadyAutoStart()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\MacUtils.java', 'xdm', '16', '102', '84', '-1000', '5', '0.1307', '0.0637', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static boolean isAlreadyAutoStart(){\n  File f=new File(System.getProperty(\"user.home\"),\"Library/LaunchAgents/org.sdg.xdman.plist\");\n  if (!f.exists())   return false;\n  FileInputStream in=null;\n  byte[] buf=new byte[(int)f.length()];\n  try {\n    in=new FileInputStream(f);\n    if (in.read(buf) != f.length()) {\n      return false;\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      if (in != null)       in.close();\n    }\n catch (    Exception e2) {\n    }\n  }\n  String str=new String(buf);\n  String s1=getProperPath(System.getProperty(\"java.home\"));\n  String s2=XDMUtils.getJarFile().getAbsolutePath();\n  return str.contains(s1) && str.contains(s2);\n}\n', '1', '8', '6');
INSERT INTO `case_study` VALUES ('3518', 'browseURL(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\MacUtils.java', 'xdm', '7', '17', '13', '-1000', '4', '0.25', '0.125', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static void browseURL(final String url){\n  try {\n    ProcessBuilder pb=new ProcessBuilder();\n    pb.command(\"open\",url);\n    pb.start();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('3520', 'readLine(InputStream)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\NetUtils.java', 'xdm', '7', '13', '5', '-1000', '3', '0.381', '0.2083', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static final String readLine(InputStream in) throws IOException {\n  StringBuffer buf=new StringBuffer();\n  while (true) {\n    int x=in.read();\n    if (x == -1)     throw new IOException(\"Unexpected EOF while reading header line\");\n    if (x == \'\\n\')     return buf.toString();\n    if (x != \'\\r\')     buf.append((char)x);\n  }\n}\n', '0', '3', '5');
INSERT INTO `case_study` VALUES ('3525', 'skipRemainingStream(InputStream,long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\NetUtils.java', 'xdm', '11', '38', '21', '-1000', '3', '0.2338', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public static void skipRemainingStream(InputStream inStream,long length) throws IOException {\n  byte buf[]=new byte[8192];\n  if (length > 0) {\n    while (length > 0) {\n      int r=(int)(length > buf.length ? buf.length : length);\n      int x=inStream.read(buf,0,r);\n      if (x == -1)       break;\n      length-=x;\n    }\n  }\n else {\n    while (true) {\n      int x=inStream.read(buf);\n      if (x == -1)       break;\n    }\n  }\n}\n', '0', '6', '7');
INSERT INTO `case_study` VALUES ('3528', 'sendParam(Map<String,String>)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\ParamUtils.java', 'xdm', '28', '320', '262', '-1000', '5', '0.0893', '0.0725', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static void sendParam(Map<String,String> params){\n  StringBuffer sb=new StringBuffer();\n  Iterator<String> paramIter=params.keySet().iterator();\n  while (paramIter.hasNext()) {\n    String key=paramIter.next();\n    String value=params.get(key);\n    sb.append(key + \":\" + value+ \"\\n\");\n  }\n  InetAddress addr=InetAddress.getLoopbackAddress();\n  StringBuffer reqBuf=new StringBuffer();\n  reqBuf.append(\"GET /cmd HTTP/1.1\\r\\n\");\n  reqBuf.append(\"Content-Length: \" + sb.length() + \"\\r\\n\");\n  reqBuf.append(\"Host: \" + addr.getHostName() + \"\\r\\n\");\n  reqBuf.append(\"Connection: close\\r\\n\\r\\n\");\n  reqBuf.append(sb);\n  String resp=null;\n  Socket sock=null;\n  try {\n    sock=new Socket(InetAddress.getLoopbackAddress(),9614);\n    InputStream in=sock.getInputStream();\n    OutputStream out=sock.getOutputStream();\n    out.write(reqBuf.toString().getBytes());\n    resp=NetUtils.readLine(in);\n    resp=resp.split(\" \")[1];\n  }\n catch (  Exception e) {\n  }\n finally {\n    if (sock != null) {\n      try {\n        sock.close();\n      }\n catch (      Exception e2) {\n      }\n    }\n  }\n  if (!\"200\".equals(resp)) {\n    JOptionPane.showMessageDialog(null,\"An older version of XDM is already running.\");\n  }\n}\n', '1', '13', '6');
INSERT INTO `case_study` VALUES ('3535', 'isComponentUpdateAvailable()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\UpdateChecker.java', 'xdm', '6', '9', '3', '-1000', '3', '0.6667', '0.4286', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private static int isComponentUpdateAvailable(){\n  String componentVersion=getComponentVersion();\n  System.out.println(\"current component version: \" + componentVersion);\n  if (componentVersion == null)   return -1;\n  return isUpdateAvailable(false,componentVersion) ? 0 : 1;\n}\n', '0', '1', '3');
INSERT INTO `case_study` VALUES ('3537', 'isUpdateAvailable(boolean,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\UpdateChecker.java', 'xdm', '12', '49', '32', '-1000', '3', '0.1771', '0.1374', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private static boolean isUpdateAvailable(boolean app,String version){\n  JavaHttpClient client=null;\n  try {\n    client=new JavaHttpClient((app ? APP_UPDAT_URL : COMPONENTS_UPDATE_URL) + \"?ver=\" + version);\n    client.connect();\n    int resp=client.getStatusCode();\n    Logger.log(\"manifest download response: \" + resp);\n    if (resp == 200) {\n      return true;\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      client.dispose();\n    }\n catch (    Exception e) {\n    }\n  }\n  return false;\n}\n', '0.6', '6', '5');
INSERT INTO `case_study` VALUES ('3538', 'open(File)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\WinUtils.java', 'xdm', '12', '51', '36', '-1000', '4', '0.2167', '0.1436', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static void open(File f) throws FileNotFoundException {\n  if (!f.exists()) {\n    throw new FileNotFoundException();\n  }\n  try {\n    ProcessBuilder builder=new ProcessBuilder();\n    ArrayList<String> lst=new ArrayList<String>();\n    lst.add(\"rundll32\");\n    lst.add(\"url.dll,FileProtocolHandler\");\n    lst.add(f.getAbsolutePath());\n    builder.command(lst);\n    builder.start();\n  }\n catch (  IOException e) {\n    Logger.log(e);\n  }\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('3539', 'openFolder(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\WinUtils.java', 'xdm', '14', '74', '57', '-1000', '5', '0.1633', '0.1127', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public static void openFolder(String folder,String file) throws FileNotFoundException {\n  try {\n    File f=new File(folder,file);\n    if (!f.exists()) {\n      throw new FileNotFoundException();\n    }\n    ProcessBuilder builder=new ProcessBuilder();\n    ArrayList<String> lst=new ArrayList<String>();\n    lst.add(\"explorer\");\n    lst.add(\"/select,\");\n    lst.add(f.getAbsolutePath());\n    builder.command(lst);\n    builder.start();\n  }\n catch (  IOException e) {\n    Logger.log(e);\n  }\n}\n', '1', '6', '3');
INSERT INTO `case_study` VALUES ('3544', 'browseURL(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\WinUtils.java', 'xdm', '11', '41', '27', '-1000', '4', '0.2182', '0.1636', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static void browseURL(String url){\n  try {\n    ProcessBuilder builder=new ProcessBuilder();\n    ArrayList<String> lst=new ArrayList<String>();\n    lst.add(\"rundll32\");\n    lst.add(\"url.dll,FileProtocolHandler\");\n    lst.add(url);\n    builder.command(lst);\n    builder.start();\n  }\n catch (  IOException e) {\n    Logger.log(e);\n  }\n}\n', '1', '4', '2');
INSERT INTO `case_study` VALUES ('3545', 'decodeFileName(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '13', '45', '12', '-1000', '3', '0.2692', '0.2234', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public static String decodeFileName(String str){\n  char ch[]=str.toCharArray();\n  StringBuffer buf=new StringBuffer();\n  for (int i=0; i < ch.length; i++) {\n    if (ch[i] == \'/\' || ch[i] == \'\\\\\' || ch[i] == \'\"\' || ch[i] == \'?\' || ch[i] == \'*\' || ch[i] == \'<\' || ch[i] == \'>\' || ch[i] == \':\')     continue;\n    if (ch[i] == \'%\') {\n      if (i + 2 < ch.length) {\n        int c=Integer.parseInt(ch[i + 1] + \"\" + ch[i + 2],16);\n        buf.append((char)c);\n        i+=2;\n        continue;\n      }\n    }\n    buf.append(ch[i]);\n  }\n  return buf.toString();\n}\n', '0', '5', '12');
INSERT INTO `case_study` VALUES ('3547', 'createSafeFileName(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '7', '13', '5', '-1000', '3', '0.3571', '0.1792', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private static String createSafeFileName(String str){\n  String safe_name=str;\n  for (int i=0; i < invalid_chars.length; i++) {\n    if (safe_name.indexOf(invalid_chars[i]) != -1) {\n      safe_name=safe_name.replace(invalid_chars[i],\'_\');\n    }\n  }\n  return safe_name;\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('3548', 'validateURL(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '11', '52', '49', '-1000', '9', '0.1169', '0.0556', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static boolean validateURL(String url){\n  try {\n    url=url.toLowerCase();\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\") || url.startsWith(\"ftp://\")) {\n      new URL(url);\n      return true;\n    }\n    return false;\n  }\n catch (  Exception e) {\n    return false;\n  }\n}\n', '0', '2', '5');
INSERT INTO `case_study` VALUES ('3549', 'findCategory(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '19', '151', '131', '-1000', '9', '0.0965', '0.0466', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public static int findCategory(String filename){\n  String file=filename.toLowerCase();\n  for (int i=0; i < doc.length; i++) {\n    if (file.endsWith(doc[i])) {\n      return XDMConstants.DOCUMENTS;\n    }\n  }\n  for (int i=0; i < cmp.length; i++) {\n    if (file.endsWith(cmp[i])) {\n      return XDMConstants.COMPRESSED;\n    }\n  }\n  for (int i=0; i < music.length; i++) {\n    if (file.endsWith(music[i])) {\n      return XDMConstants.MUSIC;\n    }\n  }\n  for (int i=0; i < prog.length; i++) {\n    if (file.endsWith(prog[i])) {\n      return XDMConstants.PROGRAMS;\n    }\n  }\n  for (int i=0; i < vid.length; i++) {\n    if (file.endsWith(vid[i])) {\n      return XDMConstants.VIDEO;\n    }\n  }\n  return XDMConstants.OTHER;\n}\n', '0', '7', '11');
INSERT INTO `case_study` VALUES ('3550', 'appendArray2Str(String[])', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '10', '35', '25', '-1000', '4', '0.25', '0.178', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static String appendArray2Str(String[] arr){\n  boolean first=true;\n  StringBuffer buf=new StringBuffer();\n  for (  String s : arr) {\n    if (!first) {\n      buf.append(\",\");\n    }\n    buf.append(s);\n    first=false;\n  }\n  return buf.toString();\n}\n', '0', '4', '3');
INSERT INTO `case_study` VALUES ('3551', 'appendStr2Array(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '10', '30', '15', '-1000', '3', '0.25', '0.1307', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static String[] appendStr2Array(String str){\n  String[] arr=str.split(\",\");\n  ArrayList<String> arrList=new ArrayList<String>();\n  for (  String s : arr) {\n    String txt=s.trim();\n    if (txt.length() > 0) {\n      arrList.add(txt);\n    }\n  }\n  arr=new String[arrList.size()];\n  return arrList.toArray(arr);\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('3554', 'copyStream(InputStream,OutputStream,long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '14', '70', '49', '-1000', '5', '0.1494', '0.089', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void copyStream(InputStream instream,OutputStream outstream,long size) throws Exception {\n  byte[] b=new byte[8192];\n  long rem=size;\n  while (true) {\n    int bs=(int)(size > 0 ? (rem > b.length ? b.length : rem) : b.length);\n    int x=instream.read(b,0,bs);\n    if (x == -1) {\n      if (size > 0) {\n        throw new EOFException(\"Unexpected EOF\");\n      }\n else {\n        break;\n      }\n    }\n    outstream.write(b,0,x);\n    rem-=x;\n    if (size > 0) {\n      if (rem <= 0)       break;\n    }\n  }\n}\n', '0', '7', '8');
INSERT INTO `case_study` VALUES ('3555', 'detectOS()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '7', '20', '19', '-1000', '6', '0.1786', '0.05', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static final int detectOS(){\n  String os=System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH);\n  if (os.contains(\"mac\") || os.contains(\"darwin\") || os.contains(\"os x\")|| os.contains(\"os x\")) {\n    return MAC;\n  }\n else   if (os.contains(\"linux\")) {\n    return LINUX;\n  }\n else   if (os.contains(\"windows\")) {\n    return WINDOWS;\n  }\n else {\n    return -1;\n  }\n}\n', '0', '1', '7');
INSERT INTO `case_study` VALUES ('3557', 'openFile(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '12', '56', '46', '-1000', '4', '0.1167', '0.05', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'public static void openFile(String file,String folder) throws Exception {\n  int os=detectOS();\n  File f=new File(folder,file);\nswitch (os) {\ncase WINDOWS:\n    WinUtils.open(f);\n  break;\ncase LINUX:\nLinuxUtils.open(f);\nbreak;\ncase MAC:\nMacUtils.open(f);\nbreak;\ndefault :\nDesktop.getDesktop().open(f);\n}\n}\n', '1', '4', '4');
INSERT INTO `case_study` VALUES ('3558', 'openFolder(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '13', '70', '62', '-1000', '4', '0.1189', '0.0347', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'public static void openFolder(String file,String folder) throws Exception {\n  int os=detectOS();\nswitch (os) {\ncase WINDOWS:\n    WinUtils.openFolder(folder,file);\n  break;\ncase LINUX:\nFile f=new File(folder);\nLinuxUtils.open(f);\nbreak;\ncase MAC:\nMacUtils.openFolder(folder,file);\nbreak;\ndefault :\nFile ff=new File(folder);\nDesktop.getDesktop().open(ff);\n}\n}\n', '1', '5', '4');
INSERT INTO `case_study` VALUES ('3560', 'exec(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '6', '12', '9', '-1000', '3', '0.2917', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public static boolean exec(String args){\n  try {\n    Logger.log(\"Launching: \" + args);\n    Runtime.getRuntime().exec(args);\n  }\n catch (  IOException e) {\n    Logger.log(e);\n    return false;\n  }\n  return true;\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('3562', 'keepAwakePing()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '10', '41', '37', '-1000', '7', '0.15', '0.0455', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void keepAwakePing(){\n  try {\n    int os=detectOS();\n    if (os == LINUX) {\n      LinuxUtils.keepAwakePing();\n    }\n else     if (os == WINDOWS) {\n      WinUtils.keepAwakePing();\n    }\n else     if (os == MAC) {\n      MacUtils.keepAwakePing();\n    }\n  }\n catch (  Throwable e) {\n    Logger.log(e);\n  }\n}\n', '1', '2', '5');
INSERT INTO `case_study` VALUES ('3563', 'isAlreadyAutoStart()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '10', '41', '37', '-1000', '7', '0.15', '0.0455', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static boolean isAlreadyAutoStart(){\n  try {\n    int os=detectOS();\n    if (os == LINUX) {\n      return LinuxUtils.isAlreadyAutoStart();\n    }\n else     if (os == WINDOWS) {\n      return WinUtils.isAlreadyAutoStart();\n    }\n else     if (os == MAC) {\n      return MacUtils.isAlreadyAutoStart();\n    }\n    return false;\n  }\n catch (  Throwable e) {\n    Logger.log(e);\n  }\n  return false;\n}\n', '1', '2', '5');
INSERT INTO `case_study` VALUES ('3564', 'addToStartup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '10', '41', '37', '-1000', '7', '0.15', '0.0455', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void addToStartup(){\n  try {\n    int os=detectOS();\n    if (os == LINUX) {\n      LinuxUtils.addToStartup();\n    }\n else     if (os == WINDOWS) {\n      WinUtils.addToStartup();\n    }\n else     if (os == MAC) {\n      MacUtils.addToStartup();\n    }\n  }\n catch (  Throwable e) {\n    Logger.log(e);\n  }\n}\n', '1', '2', '5');
INSERT INTO `case_study` VALUES ('3565', 'removeFromStartup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '10', '41', '37', '-1000', '7', '0.15', '0.0455', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void removeFromStartup(){\n  try {\n    int os=detectOS();\n    if (os == LINUX) {\n      LinuxUtils.removeFromStartup();\n    }\n else     if (os == WINDOWS) {\n      WinUtils.removeFromStartup();\n    }\n else     if (os == MAC) {\n      MacUtils.removeFromStartup();\n    }\n  }\n catch (  Throwable e) {\n    Logger.log(e);\n  }\n}\n', '1', '2', '5');
INSERT INTO `case_study` VALUES ('3569', 'browseURL(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\util\\XDMUtils.java', 'xdm', '8', '22', '16', '-1000', '4', '0.2143', '0.0926', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static void browseURL(String url){\n  int os=detectOS();\n  if (os == WINDOWS) {\n    WinUtils.browseURL(url);\n  }\n else   if (os == LINUX) {\n    LinuxUtils.browseURL(url);\n  }\n else   if (os == MAC) {\n    MacUtils.browseURL(url);\n  }\n}\n', '1', '2', '4');
INSERT INTO `case_study` VALUES ('3578', 'createFormat(String,String,String,String,String,int,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\videoparser\\YdlResponse.java', 'xdm', '44', '836', '726', '-1000', '21', '0.0653', '0.0666', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'public static String createFormat(String ext,String fmt1,String fmt2,String acodec,String vcodec,int width,int height){\n  StringBuffer sb=new StringBuffer();\n  ext=nvl(ext);\n  if (ext.length() > 0) {\n    sb.append(ext.toUpperCase());\n  }\n  if (width > 0 && height > 0) {\n    if (sb.length() > 0)     sb.append(\" \");\n    sb.append(width + \"x\" + height);\n  }\n  acodec=nvl(acodec);\n  if (acodec.contains(\"none\")) {\n    acodec=\"\";\n  }\n  vcodec=nvl(vcodec);\n  if (vcodec.contains(\"none\")) {\n    vcodec=\"\";\n  }\n  if (acodec.length() > 0) {\n    if (sb.length() > 0)     sb.append(\" \");\n    sb.append(acodec);\n  }\n  if (vcodec.length() > 0) {\n    if (sb.length() > 0) {\n      if (acodec.length() > 0) {\n        sb.append(\"+\");\n      }\n else {\n        sb.append(\" \");\n      }\n    }\n    sb.append(vcodec);\n  }\n  return sb.toString();\n}\n', '0', '8', '12');
INSERT INTO `case_study` VALUES ('3581', 'start()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\videoparser\\YoutubeDLHandler.java', 'xdm', '30', '401', '367', '-1000', '10', '0.0684', '0.0368', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public void start(){\n  try {\n    ByteArrayOutputStream bout=new ByteArrayOutputStream(8192);\n    List<String> args=new ArrayList<String>();\n    args.add(ydlLocation);\n    args.add(\"--no-warnings\");\n    args.add(\"-J\");\n    args.add(url);\n    ProcessBuilder pb=new ProcessBuilder(args);\n    pb.redirectErrorStream(true);\n    proc=pb.start();\n    InputStream in=proc.getInputStream();\n    byte[] buf=new byte[8192];\n    while (true) {\n      int x=in.read(buf);\n      if (x == -1)       break;\n      bout.write(buf,0,x);\n    }\n    String json=new String(bout.toByteArray());\n    System.out.println(\"----json: \" + json);\n    System.out.println(\"----json end ----\");\n    exitCode=proc.waitFor();\n    if (exitCode == 0) {\n      StringBuilder title=new StringBuilder();\n      videos.addAll(YdlResponse.parse(new ByteArrayInputStream(bout.toByteArray())));\n      this.title=title.toString();\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '10', '5');
INSERT INTO `case_study` VALUES ('3589', 'NativeMethods()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\win32\\NativeMethods.java', 'xdm', '6', '13', '11', '-1000', '4', '0.2778', '0.1071', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private NativeMethods(){\n  String dllPath=new File(XDMUtils.getJarFile().getParentFile(),\"xdm_native.dll\").getAbsolutePath();\n  try {\n    System.load(dllPath);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('3596', 'DashDownloader(String,String,DashMetadata)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '9', '34', '32', '-1000', '7', '0.1313', '0.0167', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public DashDownloader(String id,String folder,DashMetadata dm){\n  this.id=id;\n  this.folder=new File(folder,id).getAbsolutePath();\n  this.length=-1;\n  this.MAX_COUNT=Config.getInstance().getMaxSegments();\n  this.MIN_CHUNK_SIZE=Config.getInstance().getMinSegmentSize();\n  this.metadata=dm;\n  this.eta=\"---\";\n}\n', '0.3333333333333333', '10', '1');
INSERT INTO `case_study` VALUES ('3597', 'start()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '24', '218', '160', '-1000', '7', '0.1042', '0.1074', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public void start(){\n  Logger.log(\"creating folder \" + folder);\n  new File(folder).mkdirs();\n  this.lastDownloaded=downloaded;\n  this.prevTime=System.currentTimeMillis();\n  chunks=new ArrayList<Segment>();\n  try {\n    Segment c1=new SegmentImpl(this,folder);\n    c1.setTag(\"T1\");\n    c1.setLength(-1);\n    c1.setStartOffset(0);\n    c1.setDownloaded(0);\n    chunks.add(c1);\n    Segment c2=new SegmentImpl(this,folder);\n    c2.setTag(\"T2\");\n    c2.setLength(-1);\n    c2.setStartOffset(0);\n    c2.setDownloaded(0);\n    chunks.add(c2);\n    c1.download(this);\n    c2.download(this);\n  }\n catch (  IOException e) {\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    this.listener.downloadFailed(id);\n  }\n}\n', '0.5', '7', '2');
INSERT INTO `case_study` VALUES ('3599', 'chunkInitiated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '20', '114', '38', '-1000', '6', '0.1857', '0.2558', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '@Override public synchronized void chunkInitiated(String id) throws IOException {\n  if (stopFlag)   return;\n  Segment c=getById(id);\n  if (c == null) {\n    Logger.log(id + \" is no longer valid chunk\");\n  }\n  if (isFirstChunk(c)) {\n    super.getLastModifiedDate(c);\n    if (c.getTag().equals(\"T1\")) {\n      this.len1=c.getLength();\n    }\n else     if (c.getTag().equals(\"T2\")) {\n      this.len2=c.getLength();\n    }\n    saveState();\n  }\n  if (this.length < 1 && this.len1 > 0 && this.len2 > 0) {\n    this.length=len1 + len2;\n  }\n  if (c.getTag().equals(\"T1\") && this.len1 > 0) {\n    createChunk((String)c.getTag());\n  }\n  if (c.getTag().equals(\"T2\") && this.len2 > 0) {\n    createChunk((String)c.getTag());\n  }\n}\n', '0.75', '10', '13');
INSERT INTO `case_study` VALUES ('3600', 'onComplete(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '29', '354', '302', '-1000', '9', '0.1034', '0.0701', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private synchronized boolean onComplete(String id) throws IOException {\n  if (allFinished()) {\n    finished=true;\n    updateStatus();\n    try {\n      assembleFinished=false;\n      initAssemble();\n      assembleFinished=true;\n      Logger.log(\"********Download finished*********\");\n      updateStatus();\n      listener.downloadFinished(this.id);\n    }\n catch (    Exception e) {\n      if (!stopFlag) {\n        Logger.log(e);\n        this.errorCode=XDMConstants.ERR_ASM_FAILED;\n        listener.downloadFailed(this.id);\n      }\n    }\n    listener=null;\n    return true;\n  }\n  Segment chunk=getById(id);\n  Logger.log(\"Complete: \" + chunk + \" \"+ chunk.getDownloaded()+ \" \"+ chunk.getLength());\n  Segment nextNeedyChunk=findNextNeedyChunk(chunk);\n  if (nextNeedyChunk != null) {\n    Logger.log(\"****************Needy chunk found!!!\");\n    Logger.log(\"Stopping: \" + nextNeedyChunk);\n    nextNeedyChunk.stop();\n    chunks.remove(nextNeedyChunk);\n    nextNeedyChunk.dispose();\n    mergeChunk(chunk,nextNeedyChunk);\n    createChunk((String)chunk.getTag());\n    return false;\n  }\n  createChunk((String)chunk.getTag());\n  return true;\n}\n', '0.4', '7', '5');
INSERT INTO `case_study` VALUES ('3602', 'chunkUpdated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '18', '133', '113', '-1000', '9', '0.125', '0.0754', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '@Override public void chunkUpdated(String id){\n  if (stopFlag)   return;\n  long now=System.currentTimeMillis();\n  if (now - lastSaved > 5000) {\nsynchronized (this) {\n      saveState();\n    }\n    lastSaved=now;\n  }\n  if (now - lastUpdated > 1000) {\n    updateStatus();\n    lastUpdated=now;\nsynchronized (this) {\n      int activeCount=getActiveChunkCount();\n      if (activeCount < MAX_COUNT) {\n        int rem=MAX_COUNT - activeCount;\n        try {\n          retryFailedChunks(rem);\n        }\n catch (        IOException e) {\n          Logger.log(e);\n        }\n      }\n    }\n  }\n}\n', '0.6666666666666666', '5', '6');
INSERT INTO `case_study` VALUES ('3605', 'updateStatus()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '46', '901', '767', '-1000', '7', '0.0708', '0.0493', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void updateStatus(){\n  try {\n    long now=System.currentTimeMillis();\n    if (converting) {\n      progress=this.convertPrg;\n    }\n else     if (assembling) {\n      long len=length > 0 ? length : downloaded;\n      progress=(int)((totalAssembled * 100) / len);\n    }\n else {\n      long downloaded2=0;\n      if (length > 0) {\n        if (segDet == null) {\n          segDet=new SegmentDetails();\n        }\n        if (segDet.getCapacity() < chunks.size()) {\n          segDet.extend(chunks.size() - segDet.getCapacity());\n        }\n        segDet.setChunkCount(chunks.size());\n      }\n      downloadSpeed=0;\n      for (int i=0; i < chunks.size(); i++) {\n        Segment s=chunks.get(i);\n        downloaded2+=s.getDownloaded();\n        if (length > 0) {\n          long off=0;\n          if (s.getTag().equals(\"T2\")) {\n            off=len1;\n          }\n          SegmentInfo info=segDet.getChunkUpdates().get(i);\n          info.setDownloaded(s.getDownloaded());\n          info.setStart(s.getStartOffset() + off);\n          info.setLength(s.getLength());\n        }\n        downloadSpeed+=s.getTransferRate();\n      }\n      this.downloaded=downloaded2;\n      this.downloaded=downloaded2;\n      if (length > 0) {\n        progress=(int)((downloaded * 100) / length);\n        long diff=downloaded - lastDownloaded;\n        long timeSpend=now - prevTime;\n        if (timeSpend > 0) {\n          float rate=((float)diff / timeSpend) * 1000;\n          if (rate > downloadSpeed) {\n            downloadSpeed=rate;\n          }\n          this.eta=FormatUtilities.getETA(length - downloaded,rate);\n          if (this.eta == null) {\n            this.eta=\"---\";\n          }\n          lastDownloaded=downloaded;\n          prevTime=now;\n        }\n      }\n    }\n    listener.downloadUpdated(id);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.375', '17', '15');
INSERT INTO `case_study` VALUES ('3606', 'assemble(String,ArrayList<Segment>)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '47', '991', '901', '-1000', '13', '0.0536', '0.0413', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void assemble(String file,ArrayList<Segment> list) throws IOException {\n  InputStream in=null;\n  OutputStream out=null;\n  totalAssembled=0L;\n  assembling=true;\n  Logger.log(\"Combining \" + file + \" \"+ list.size());\n  try {\n    if (stopFlag)     return;\n    byte buf[]=new byte[8192 * 8];\n    Logger.log(\"assembling... \" + stopFlag);\n    Collections.sort(list,new SegmentComparator());\n    out=new FileOutputStream(new File(folder,file));\n    for (int i=0; i < list.size(); i++) {\n      Logger.log(\"chunk \" + i + \" \"+ stopFlag);\n      Segment c=list.get(i);\n      in=new FileInputStream(new File(folder,c.getId()));\n      long rem=c.getLength();\n      while (true) {\n        int x=(int)(rem > 0 ? (rem > buf.length ? buf.length : rem) : buf.length);\n        int r=in.read(buf,0,x);\n        if (stopFlag) {\n          return;\n        }\n        if (r == -1) {\n          if (length > 0) {\n            in.close();\n            out.close();\n            throw new IllegalArgumentException(\"Assemble EOF\");\n          }\n else {\n            break;\n          }\n        }\n        out.write(buf,0,r);\n        if (stopFlag) {\n          return;\n        }\n        if (length > 0) {\n          rem-=r;\n          if (rem == 0)           break;\n        }\n        totalAssembled+=r;\n        long now=System.currentTimeMillis();\n        if (now - lastUpdated > 1000) {\n          updateStatus();\n          lastUpdated=now;\n        }\n      }\n      in.close();\n    }\n    out.close();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    throw new IOException(e);\n  }\n finally {\n    if (in != null) {\n      try {\n        in.close();\n      }\n catch (      Exception e2) {\n      }\n    }\n    if (out != null) {\n      try {\n        out.close();\n      }\n catch (      Exception e2) {\n      }\n    }\n  }\n}\n', '0.75', '14', '18');
INSERT INTO `case_study` VALUES ('3607', 'isFirstChunk(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '7', '17', '13', '-1000', '4', '0.2857', '0.175', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private boolean isFirstChunk(Segment s){\n  int c=0;\n  for (  Segment ss : chunks) {\n    if (ss.getTag().equals(s.getTag())) {\n      c++;\n    }\n  }\n  return c == 1;\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('3608', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '10', '42', '39', '-1000', '7', '0.1571', '0.0476', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void stop(){\n  stopFlag=true;\n  saveState();\n  for (int i=0; i < chunks.size(); i++) {\n    chunks.get(i).stop();\n  }\n  if (this.ffmpeg != null) {\n    this.ffmpeg.stop();\n  }\n  listener.downloadStopped(id);\n  listener=null;\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('3609', 'resume()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '38', '631', '559', '-1000', '13', '0.0743', '0.0596', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', '@Override public void resume(){\n  try {\n    stopFlag=false;\n    Logger.log(\"Resuming\");\n    if (!restoreState()) {\n      Logger.log(\"Starting from beginning\");\n      start();\n      return;\n    }\n    Logger.log(\"Restore success\");\n    this.lastDownloaded=downloaded;\n    this.prevTime=System.currentTimeMillis();\n    if (allFinished()) {\n      assembleAsync();\n      return;\n    }\n    Segment c1=null;\n    for (int i=0; i < chunks.size(); i++) {\n      Segment c=chunks.get(i);\n      if (c.isFinished() || c.isActive())       continue;\n      if (c.getTag().equals(\"T1\")) {\n        c1=c;\n        break;\n      }\n    }\n    Segment c2=null;\n    for (int i=0; i < chunks.size(); i++) {\n      Segment c=chunks.get(i);\n      if (c.isFinished() || c.isActive())       continue;\n      if (c.getTag().equals(\"T2\")) {\n        c2=c;\n        break;\n      }\n    }\n    if (c1 != null) {\n      try {\n        c1.download(this);\n      }\n catch (      IOException e) {\n        Logger.log(e);\n      }\n    }\n    if (c2 != null) {\n      try {\n        c2.download(this);\n      }\n catch (      IOException e) {\n        Logger.log(e);\n      }\n    }\n    if (c1 == null && c2 == null) {\n      Logger.log(\"Internal error: no inactive/incomplete chunk found while resuming!\");\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    listener.downloadFailed(this.id);\n    return;\n  }\n}\n', '0.5714285714285714', '13', '18');
INSERT INTO `case_study` VALUES ('3614', 'saveState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '26', '224', '123', '-1000', '3', '0.1106', '0.1333', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void saveState(){\n  if (chunks.size() < 0)   return;\n  StringBuffer sb=new StringBuffer();\n  sb.append(this.length + \"\\n\");\n  sb.append(downloaded + \"\\n\");\n  sb.append(this.len1 + \"\\n\");\n  sb.append(this.len2 + \"\\n\");\n  sb.append(chunks.size() + \"\\n\");\n  for (int i=0; i < chunks.size(); i++) {\n    Segment seg=chunks.get(i);\n    sb.append(seg.getId() + \"\\n\");\n    sb.append(seg.getLength() + \"\\n\");\n    sb.append(seg.getStartOffset() + \"\\n\");\n    sb.append(seg.getDownloaded() + \"\\n\");\n    sb.append(seg.getTag() + \"\\n\");\n  }\n  if (!StringUtils.isNullOrEmptyOrBlank(lastModified)) {\n    sb.append(this.lastModified + \"\\n\");\n  }\n  try {\n    File tmp=new File(folder,System.currentTimeMillis() + \".tmp\");\n    File out=new File(folder,\"state.txt\");\n    FileOutputStream fs=new FileOutputStream(tmp);\n    fs.write(sb.toString().getBytes());\n    fs.close();\n    out.delete();\n    tmp.renameTo(out);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.42857142857142855', '11', '5');
INSERT INTO `case_study` VALUES ('3615', 'restoreState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '31', '329', '193', '-1000', '3', '0.0884', '0.1048', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private boolean restoreState(){\n  BufferedReader br=null;\n  chunks=new ArrayList<Segment>();\n  File file=new File(folder,\"state.txt\");\n  if (!file.exists()) {\n    file=getBackupFile(folder);\n    if (file == null) {\n      return false;\n    }\n  }\n  try {\n    br=new BufferedReader(new FileReader(file));\n    this.length=Long.parseLong(br.readLine());\n    this.downloaded=Long.parseLong(br.readLine());\n    this.len1=Long.parseLong(br.readLine());\n    this.len2=Long.parseLong(br.readLine());\n    int chunkCount=Integer.parseInt(br.readLine());\n    for (int i=0; i < chunkCount; i++) {\n      String cid=br.readLine();\n      long len=Long.parseLong(br.readLine());\n      long off=Long.parseLong(br.readLine());\n      long dwn=Long.parseLong(br.readLine());\n      String tag=br.readLine();\n      Segment seg=new SegmentImpl(folder,cid,off,len,dwn);\n      seg.setTag(tag);\n      Logger.log(\"id: \" + seg.getId() + \"\\nlength: \"+ seg.getLength()+ \"\\noffset: \"+ seg.getStartOffset()+ \"\\ndownload: \"+ seg.getDownloaded());\n      chunks.add(seg);\n    }\n    this.lastModified=br.readLine();\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(\"Failed to load saved state\");\n    Logger.log(e);\n  }\n finally {\n    if (br != null) {\n      try {\n        br.close();\n      }\n catch (      IOException e) {\n      }\n    }\n  }\n  return false;\n}\n', '0.5', '17', '7');
INSERT INTO `case_study` VALUES ('3618', 'createChunk(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '14', '67', '43', '-1000', '3', '0.1786', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private synchronized void createChunk(String tag) throws IOException {\n  if (stopFlag)   return;\n  int activeCount=getActiveChunkCount();\n  Logger.log(\"active count:\" + activeCount);\n  if (activeCount == MAX_COUNT) {\n    return;\n  }\n  int rem=MAX_COUNT - activeCount;\n  rem-=retryFailedChunks(rem);\n  if (rem > 0) {\n    Segment c1=findMaxChunk();\n    Segment c=splitChunk(c1);\n    if (c != null) {\n      Logger.log(\"creating chunk \" + c);\n      chunks.add(c);\n      c.download(this);\n    }\n  }\n}\n', '0.75', '5', '5');
INSERT INTO `case_study` VALUES ('3619', 'findMaxChunk()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '12', '45', '24', '-1000', '2', '0.2381', '0.1394', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private Segment findMaxChunk(){\n  if (stopFlag)   return null;\n  long size=-1;\n  String id=null;\n  for (int i=0; i < chunks.size(); i++) {\n    Segment c=chunks.get(i);\n    if (c.isActive()) {\n      long rem=c.getLength() - c.getDownloaded();\n      if (rem > size) {\n        id=c.getId();\n        size=rem;\n      }\n    }\n  }\n  if (size < MIN_CHUNK_SIZE)   return null;\n  return getById(id);\n}\n', '0.4', '5', '6');
INSERT INTO `case_study` VALUES ('3621', 'splitChunk(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '12', '35', '4', '-1000', '2', '0.2396', '0.1944', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private Segment splitChunk(Segment c) throws IOException {\n  if (c == null || stopFlag)   return null;\n  long rem=c.getLength() - c.getDownloaded();\n  long offset=c.getStartOffset() + c.getLength() - rem / 2;\n  long len=rem / 2;\n  Logger.log(\"Changing length from: \" + c.getLength() + \" to \"+ (c.getLength() - rem / 2));\n  c.setLength(c.getLength() - rem / 2);\n  Segment c2=new SegmentImpl(this,folder);\n  c2.setTag(c.getTag());\n  c2.setLength(len);\n  c2.setStartOffset(offset);\n  return c2;\n}\n', '0.3333333333333333', '5', '3');
INSERT INTO `case_study` VALUES ('3622', 'findNextNeedyChunk(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '8', '16', '4', '-1000', '2', '0.325', '0.2333', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private Segment findNextNeedyChunk(Segment chunk){\n  if (stopFlag)   return null;\n  long offset=chunk.getStartOffset() + chunk.getLength();\n  for (int i=0; i < chunks.size(); i++) {\n    Segment c=chunks.get(i);\n    if (c.getDownloaded() == 0) {\n      if (!c.isFinished()) {\n        if (c.getStartOffset() == offset && chunk.getTag().equals(c.getTag())) {\n          return c;\n        }\n      }\n    }\n  }\n  return null;\n}\n', '0.2', '4', '7');
INSERT INTO `case_study` VALUES ('3623', 'progress(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\dash\\DashDownloader.java', 'xdm', '7', '18', '15', '-1000', '5', '0.2143', '0.1111', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override public void progress(int progress){\n  this.convertPrg=progress;\n  long now=System.currentTimeMillis();\n  if (now - lastUpdated > 1000) {\n    updateStatus();\n    lastUpdated=now;\n  }\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('3624', 'HdsDownloader(String,String,HdsMetadata)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '10', '44', '43', '-1000', '9', '0.1083', '0.0057', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public HdsDownloader(String id,String folder,HdsMetadata metadata){\n  this.id=id;\n  this.folder=new File(folder,id).getAbsolutePath();\n  this.length=-1;\n  this.metadata=metadata;\n  this.MAX_COUNT=Config.getInstance().getMaxSegments();\n  urlList=new ArrayList<String>();\n  chunks=new ArrayList<Segment>();\n  this.eta=\"---\";\n}\n', '0.5', '9', '1');
INSERT INTO `case_study` VALUES ('3625', 'start()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '16', '94', '68', '-1000', '7', '0.1146', '0.1312', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void start(){\n  Logger.log(\"creating folder \" + folder);\n  new File(folder).mkdirs();\n  this.lastDownloaded=downloaded;\n  this.prevTime=System.currentTimeMillis();\n  try {\n    manifestSegment=new SegmentImpl(this,folder);\n    manifestSegment.setTag(\"MF\");\n    manifestSegment.setLength(-1);\n    manifestSegment.setStartOffset(0);\n    manifestSegment.setDownloaded(0);\n    manifestSegment.setTag(\"HLS\");\n    manifestSegment.download(this);\n  }\n catch (  IOException e) {\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    this.listener.downloadFailed(id);\n  }\n}\n', '0.5', '5', '2');
INSERT INTO `case_study` VALUES ('3626', 'chunkInitiated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '6', '12', '9', '-1000', '4', '0.2778', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '@Override public void chunkInitiated(String id){\n  if (!id.equals(manifestSegment.getId())) {\n    processSegments();\n  }\n else {\n    isJavaClientRequired=((HttpChannel)manifestSegment.getChannel()).isJavaClientRequired();\n    super.getLastModifiedDate(manifestSegment);\n  }\n}\n', '0.6666666666666666', '1', '2');
INSERT INTO `case_study` VALUES ('3627', 'chunkComplete(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '33', '445', '362', '-1000', '11', '0.0956', '0.0796', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '@Override public boolean chunkComplete(String id){\n  if (finished) {\n    return true;\n  }\n  if (stopFlag) {\n    return true;\n  }\n  if (id.equals(manifestSegment.getId())) {\n    if (initOrUpdateSegments()) {\n      listener.downloadConfirmed(this.id);\n    }\n else {\n      if (!stopFlag) {\n        this.errorCode=XDMConstants.ERR_INVALID_RESP;\n        listener.downloadFailed(this.id);\n        return true;\n      }\n    }\n  }\n else {\n    Segment s=getById(id);\n    if (s.getLength() < 0) {\n      s.setLength(s.getDownloaded());\n    }\n    if (allFinished()) {\n      finished=true;\n      long len=0L;\n      for (      Segment ss : chunks) {\n        len+=ss.getLength();\n      }\n      if (len > 0) {\n        this.length=len;\n      }\n      saveState();\n      updateStatus();\n      try {\n        assembleFinished=false;\n        assemble();\n        Logger.log(\"********Download finished*********\");\n        updateStatus();\n        assembleFinished=true;\n        listener.downloadFinished(this.id);\n      }\n catch (      Exception e) {\n        if (!stopFlag) {\n          Logger.log(e);\n          this.errorCode=XDMConstants.ERR_ASM_FAILED;\n          listener.downloadFailed(this.id);\n        }\n      }\n      listener=null;\n      return true;\n    }\n  }\n  processSegments();\n  return true;\n}\n', '0.4', '12', '12');
INSERT INTO `case_study` VALUES ('3628', 'chunkUpdated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '13', '68', '58', '-1000', '9', '0.1795', '0.1267', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void chunkUpdated(String id){\n  if (stopFlag)   return;\n  long now=System.currentTimeMillis();\n  if (now - lastSaved > 5000) {\nsynchronized (this) {\n      saveState();\n    }\n    lastSaved=now;\n  }\n  if (now - lastUpdated > 1000) {\n    updateStatus();\n    lastUpdated=now;\nsynchronized (this) {\n      processSegments();\n    }\n  }\n}\n', '0', '2', '4');
INSERT INTO `case_study` VALUES ('3629', 'createChannel(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '10', '32', '19', '-1000', '4', '0.225', '0.0939', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public AbstractChannel createChannel(Segment segment){\n  for (int i=0; i < chunks.size(); i++) {\n    if (segment == chunks.get(i)) {\n      HdsMetadata md=new HdsMetadata();\n      md.setUrl(urlList.get(i));\n      md.setHeaders(metadata.getHeaders());\n      return new HttpChannel(segment,md.getUrl(),md.getHeaders(),-1,isJavaClientRequired);\n    }\n  }\n  Logger.log(\"Create manifest channel\");\n  return new HttpChannel(segment,metadata.getUrl(),metadata.getHeaders(),-1,isJavaClientRequired);\n}\n', '0.5714285714285714', '3', '3');
INSERT INTO `case_study` VALUES ('3631', 'initOrUpdateSegments()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '30', '341', '247', '-1000', '2', '0.1', '0.0865', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private boolean initOrUpdateSegments(){\n  try {\n    F4MManifest mf=new F4MManifest(metadata.getUrl(),new File(folder,manifestSegment.getId()).getAbsolutePath());\n    mf.setSelectedBitRate(metadata.getBitRate());\n    this.totalDuration=mf.getDuration();\n    Logger.log(\"Total duration \" + totalDuration);\n    ArrayList<String> urls=mf.getMediaUrls();\n    if (urls.size() < 1) {\n      Logger.log(\"Manifest contains no media\");\n      return false;\n    }\n    if (urlList.size() > 0 && urlList.size() != urls.size()) {\n      Logger.log(\"Manifest media count mismatch- expected: \" + urlList.size() + \" got: \"+ urls.size());\n      return false;\n    }\n    if (urlList.size() > 0) {\n      urlList.clear();\n    }\n    urlList.addAll(urls);\n    String newExtension=null;\n    if (chunks.size() < 1) {\n      for (int i=0; i < urlList.size(); i++) {\n        if (newExtension == null && outputFormat == 0) {\n          newExtension=findExtension(urlList.get(i));\n          Logger.log(\"HDS: found new extension: \" + newExtension);\n          if (newExtension != null) {\n            this.newFileName=getOutputFileName(false).replace(\".flv\",newExtension);\n          }\n else {\n            newExtension=\".flv\";\n          }\n        }\n        Logger.log(\"HDS: Newfile name: \" + this.newFileName);\n        Segment s2=new SegmentImpl(this,folder);\n        s2.setTag(\"HLS\");\n        s2.setLength(-1);\n        Logger.log(\"Adding chunk: \" + s2);\n        chunks.add(s2);\n      }\n    }\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    return false;\n  }\n}\n', '0.5833333333333334', '9', '11');
INSERT INTO `case_study` VALUES ('3632', 'processSegments()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '9', '27', '18', '-1000', '3', '0.2444', '0.1167', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private synchronized void processSegments(){\n  int activeCount=getActiveChunkCount();\n  Logger.log(\"active: \" + activeCount);\n  if (activeCount < MAX_COUNT) {\n    int rem=MAX_COUNT - activeCount;\n    try {\n      retryFailedChunks(rem);\n    }\n catch (    IOException e) {\n      Logger.log(e);\n    }\n  }\n}\n', '0.6666666666666666', '3', '3');
INSERT INTO `case_study` VALUES ('3633', 'updateStatus()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '50', '1066', '907', '-1000', '7', '0.0618', '0.0458', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void updateStatus(){\n  try {\n    long now=System.currentTimeMillis();\n    if (this.eta == null) {\n      this.eta=\"---\";\n    }\n    if (converting) {\n      progress=this.convertPrg;\n    }\n else     if (assembling) {\n      long len=length > 0 ? length : downloaded;\n      progress=(int)((totalAssembled * 100) / len);\n    }\n else {\n      long downloaded2=0;\n      int processedSegments=0;\n      int partPrg=0;\n      downloadSpeed=0;\n      for (int i=0; i < chunks.size(); i++) {\n        Segment s=chunks.get(i);\n        downloaded2+=s.getDownloaded();\n        downloadSpeed+=s.getTransferRate();\n        if (s.isFinished()) {\n          processedSegments++;\n        }\n else         if (s.getDownloaded() > 0 && s.getLength() > 0) {\n          int prg2=(int)((s.getDownloaded() * 100) / s.getLength());\n          partPrg+=prg2;\n        }\n      }\n      this.downloaded=downloaded2;\n      if (chunks.size() > 0) {\n        progress=(int)((processedSegments * 100) / chunks.size());\n        progress+=(partPrg / chunks.size());\n        if (segDet == null) {\n          segDet=new SegmentDetails();\n          if (segDet.getCapacity() < chunks.size()) {\n            segDet.extend(chunks.size() - segDet.getCapacity());\n          }\n          segDet.setChunkCount(chunks.size());\n        }\n        SegmentInfo info=segDet.getChunkUpdates().get(0);\n        info.setDownloaded(progress);\n        info.setLength(100);\n        info.setStart(0);\n        long diff=downloaded - lastDownloaded;\n        long timeSpend=now - prevTime;\n        if (timeSpend > 0) {\n          float rate=((float)diff / timeSpend) * 1000;\n          if (rate > downloadSpeed) {\n            downloadSpeed=rate;\n          }\n          int prgDiff=progress - lastProgress;\n          if (prgDiff > 0) {\n            long eta=(timeSpend * (100 - progress) / 1000 * prgDiff);\n            lastProgress=progress;\n            this.eta=FormatUtilities.hms((int)eta);\n          }\n          prevTime=now;\n          lastDownloaded=downloaded;\n        }\n      }\n    }\n    listener.downloadUpdated(id);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.4', '20', '16');
INSERT INTO `case_study` VALUES ('3634', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '10', '42', '39', '-1000', '7', '0.1571', '0.0476', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void stop(){\n  stopFlag=true;\n  saveState();\n  for (int i=0; i < chunks.size(); i++) {\n    chunks.get(i).stop();\n  }\n  if (this.ffmpeg != null) {\n    this.ffmpeg.stop();\n  }\n  listener.downloadStopped(id);\n  listener=null;\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('3635', 'resume()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '19', '160', '149', '-1000', '13', '0.0766', '0.0567', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '@Override public void resume(){\n  try {\n    stopFlag=false;\n    Logger.log(\"Resuming\");\n    if (!restoreState()) {\n      Logger.log(\"Starting from beginning\");\n      start();\n      return;\n    }\n    Logger.log(\"Restore success\");\n    this.lastDownloaded=downloaded;\n    this.lastProgress=this.progress;\n    this.prevTime=System.currentTimeMillis();\n    if (allFinished()) {\n      assembleAsync();\n    }\n else {\n      Logger.log(\"Starting\");\n      start();\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    listener.downloadFailed(this.id);\n    return;\n  }\n}\n', '1', '7', '4');
INSERT INTO `case_study` VALUES ('3640', 'saveState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '32', '341', '186', '-1000', '3', '0.099', '0.1393', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void saveState(){\n  if (chunks.size() < 0)   return;\n  StringBuffer sb=new StringBuffer();\n  sb.append(this.length + \"\\n\");\n  sb.append(downloaded + \"\\n\");\n  sb.append(((long)this.totalDuration) + \"\\n\");\n  sb.append(urlList.size() + \"\\n\");\n  for (int i=0; i < urlList.size(); i++) {\n    String url=urlList.get(i);\n    sb.append(url + \"\\n\");\n  }\n  sb.append(chunks.size() + \"\\n\");\n  for (int i=0; i < chunks.size(); i++) {\n    Segment seg=chunks.get(i);\n    sb.append(seg.getId() + \"\\n\");\n    if (seg.isFinished()) {\n      sb.append(seg.getLength() + \"\\n\");\n      sb.append(seg.getStartOffset() + \"\\n\");\n      sb.append(seg.getDownloaded() + \"\\n\");\n    }\n else {\n      sb.append(\"-1\\n\");\n      sb.append(seg.getStartOffset() + \"\\n\");\n      sb.append(seg.getDownloaded() + \"\\n\");\n    }\n  }\n  if (!StringUtils.isNullOrEmptyOrBlank(lastModified)) {\n    sb.append(this.lastModified + \"\\n\");\n  }\n  try {\n    File tmp=new File(folder,System.currentTimeMillis() + \".tmp\");\n    File out=new File(folder,\"state.txt\");\n    FileOutputStream fs=new FileOutputStream(tmp);\n    fs.write(sb.toString().getBytes());\n    fs.close();\n    out.delete();\n    tmp.renameTo(out);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.42857142857142855', '12', '7');
INSERT INTO `case_study` VALUES ('3641', 'restoreState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '33', '391', '254', '-1000', '3', '0.08', '0.0906', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private boolean restoreState(){\n  BufferedReader br=null;\n  chunks=new ArrayList<Segment>();\n  File file=new File(folder,\"state.txt\");\n  if (!file.exists()) {\n    file=getBackupFile(folder);\n    if (file == null) {\n      return false;\n    }\n  }\n  try {\n    br=new BufferedReader(new FileReader(file));\n    this.length=Long.parseLong(br.readLine());\n    this.downloaded=Long.parseLong(br.readLine());\n    this.totalDuration=Long.parseLong(br.readLine());\n    int urlCount=Integer.parseInt(br.readLine());\n    for (int i=0; i < urlCount; i++) {\n      String url=br.readLine();\n      urlList.add(url);\n    }\n    int chunkCount=Integer.parseInt(br.readLine());\n    for (int i=0; i < chunkCount; i++) {\n      String cid=br.readLine();\n      long len=Long.parseLong(br.readLine());\n      long off=Long.parseLong(br.readLine());\n      long dwn=Long.parseLong(br.readLine());\n      Segment seg=new SegmentImpl(folder,cid,off,len,dwn);\n      seg.setTag(\"HLS\");\n      Logger.log(\"id: \" + seg.getId() + \"\\nlength: \"+ seg.getLength()+ \"\\noffset: \"+ seg.getStartOffset()+ \"\\ndownload: \"+ seg.getDownloaded());\n      chunks.add(seg);\n    }\n    this.lastModified=br.readLine();\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(\"Failed to load saved state\");\n    Logger.log(e);\n  }\n finally {\n    if (br != null) {\n      try {\n        br.close();\n      }\n catch (      IOException e) {\n      }\n    }\n  }\n  return false;\n}\n', '0.5', '18', '8');
INSERT INTO `case_study` VALUES ('3644', 'findExtension(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '13', '53', '28', '-1000', '4', '0.2308', '0.1563', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private String findExtension(String urlStr){\n  String newExtension=null;\n  String fileName=XDMUtils.getFileName(urlStr);\n  if (!StringUtils.isNullOrEmptyOrBlank(fileName)) {\n    String ext=XDMUtils.getExtension(fileName);\n    if ((!StringUtils.isNullOrEmptyOrBlank(ext)) && ext.length() > 1) {\n      if (!ext.toLowerCase().contains(\"ts\")) {\n        newExtension=ext;\n        if (newExtension.contains(\"m4s\")) {\n          Logger.log(\"HLS extension: MP4\");\n          newExtension=\".mp4\";\n        }\n      }\n    }\n  }\n  return newExtension;\n}\n', '0.75', '4', '6');
INSERT INTO `case_study` VALUES ('3645', 'assemble()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '50', '1108', '991', '-1000', '10', '0.0513', '0.0434', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void assemble() throws IOException {\n  InputStream in=null;\n  OutputStream out=null;\n  totalAssembled=0L;\n  assembling=true;\n  assembleFinished=false;\n  File outFile=new File(outputFormat == 0 ? getOutputFolder() : folder,getOutputFileName(true));\n  try {\n    if (stopFlag)     return;\n    Logger.log(\"assembling... \");\n    out=new FileOutputStream(outFile);\n    out.write(flv_sig);\n    for (    Segment s : chunks) {\n      File inFile=new File(folder,s.getId());\n      in=new FileInputStream(inFile);\n      long streamPos=0, streamLen=inFile.length();\n      while (streamPos < streamLen) {\n        if (stopFlag) {\n          return;\n        }\n        long boxsize=readInt32(in);\n        streamPos+=4;\n        String box_type=readStringBytes(in,4);\n        streamPos+=4;\n        if (boxsize == 1) {\n          boxsize=readInt64(in) - 16;\n          streamPos+=8;\n        }\n else {\n          boxsize-=8;\n        }\n        if (box_type.equals(\"mdat\")) {\n          long boxsz=boxsize;\n          while (boxsz > 0) {\n            if (stopFlag)             return;\n            int c=(int)(boxsz > b.length ? b.length : boxsz);\n            int x=in.read(b,0,c);\n            if (x == -1)             throw new IOException(\"Unexpected EOF\");\n            out.write(b,0,x);\n            boxsz-=x;\n            totalAssembled+=x;\n            long now=System.currentTimeMillis();\n            if (now - lastUpdated > 1000) {\n              updateStatus();\n              lastUpdated=now;\n            }\n          }\n        }\n else {\n          in.skip(boxsize);\n        }\n        streamPos+=boxsize;\n      }\n      in.close();\n    }\n    Logger.log(\"Output format: \" + outputFormat);\n    assembleFinished=true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    try {\n      out.close();\n    }\n catch (    Exception e2) {\n    }\n    try {\n      in.close();\n    }\n catch (    Exception e2) {\n    }\n  }\n}\n', '0.75', '16', '16');
INSERT INTO `case_study` VALUES ('3646', 'copyBytes(InputStream,OutputStream,long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '8', '20', '12', '-1000', '3', '0.2321', '0.0975', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void copyBytes(InputStream src,OutputStream dest,long len) throws IOException {\n  while (len > 0) {\n    if (stopFlag)     return;\n    int c=(int)(len > b.length ? b.length : len);\n    int x=src.read(b,0,c);\n    if (x == -1)     throw new IOException(\"Unexpected EOF\");\n    dest.write(b,0,x);\n    len-=x;\n  }\n}\n', '0', '5', '5');
INSERT INTO `case_study` VALUES ('3647', 'progress(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '7', '18', '15', '-1000', '5', '0.2143', '0.1111', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override public void progress(int progress){\n  this.convertPrg=progress;\n  long now=System.currentTimeMillis();\n  if (now - lastUpdated > 1000) {\n    updateStatus();\n    lastUpdated=now;\n  }\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('3648', 'readInt32(InputStream)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '9', '27', '18', '-1000', '4', '0.2444', '0.101', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private long readInt32(InputStream s) throws IOException {\n  byte[] bytesData=new byte[4];\n  if (s.read(bytesData,0,bytesData.length) != bytesData.length) {\n    throw new IOException(\"Invalid F4F box\");\n  }\n  long iValLo=(long)((bytesData[3] & 0xff) + ((long)(bytesData[2] & 0xff) * 256));\n  long iValHi=(long)((bytesData[1] & 0xff) + ((long)(bytesData[0] & 0xff) * 256));\n  long iVal=iValLo + (iValHi * 65536);\n  return iVal;\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('3649', 'readInt64(InputStream)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '6', '11', '7', '-1000', '3', '0.3333', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private long readInt64(InputStream s) throws IOException {\n  long iValHi=readInt32(s);\n  long iValLo=readInt32(s);\n  long iVal=iValLo + (iValHi * 4294967296L);\n  return iVal;\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('3650', 'readStringBytes(InputStream,long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hds\\HdsDownloader.java', 'xdm', '6', '12', '9', '-1000', '4', '0.25', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private String readStringBytes(InputStream s,long len) throws IOException {\n  StringBuilder resultValue=new StringBuilder(4);\n  for (int i=0; i < len; i++) {\n    resultValue.append((char)s.read());\n  }\n  return resultValue.toString();\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('3651', 'HlsDownloader(String,String,HlsMetadata)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '10', '44', '43', '-1000', '9', '0.1083', '0.0057', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public HlsDownloader(String id,String folder,HlsMetadata metadata){\n  this.id=id;\n  this.folder=new File(folder,id).getAbsolutePath();\n  this.length=-1;\n  this.metadata=metadata;\n  this.MAX_COUNT=Config.getInstance().getMaxSegments();\n  urlList=new ArrayList<String>();\n  chunks=new ArrayList<Segment>();\n  this.eta=\"---\";\n}\n', '0.5', '9', '1');
INSERT INTO `case_study` VALUES ('3652', 'start()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '16', '94', '68', '-1000', '7', '0.1146', '0.1312', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void start(){\n  Logger.log(\"creating folder \" + folder);\n  new File(folder).mkdirs();\n  this.lastDownloaded=downloaded;\n  this.prevTime=System.currentTimeMillis();\n  try {\n    manifestSegment=new SegmentImpl(this,folder);\n    manifestSegment.setTag(\"MF\");\n    manifestSegment.setLength(-1);\n    manifestSegment.setStartOffset(0);\n    manifestSegment.setDownloaded(0);\n    manifestSegment.setTag(\"HLS\");\n    manifestSegment.download(this);\n  }\n catch (  IOException e) {\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    this.listener.downloadFailed(id);\n  }\n}\n', '0.5', '5', '2');
INSERT INTO `case_study` VALUES ('3653', 'chunkInitiated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '6', '12', '9', '-1000', '4', '0.2778', '0.1111', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '@Override public void chunkInitiated(String id){\n  if (!id.equals(manifestSegment.getId())) {\n    processSegments();\n  }\n else {\n    isJavaClientRequired=((HttpChannel)manifestSegment.getChannel()).isJavaClientRequired();\n    super.getLastModifiedDate(manifestSegment);\n  }\n}\n', '0.6666666666666666', '1', '2');
INSERT INTO `case_study` VALUES ('3654', 'chunkComplete(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '28', '313', '248', '-1000', '11', '0.1179', '0.0934', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '@Override public boolean chunkComplete(String id){\n  if (finished) {\n    return true;\n  }\n  if (stopFlag) {\n    return true;\n  }\n  if (id.equals(manifestSegment.getId())) {\n    if (initOrUpdateSegments()) {\n      listener.downloadConfirmed(this.id);\n    }\n else {\n      if (!stopFlag) {\n        this.errorCode=XDMConstants.ERR_INVALID_RESP;\n        listener.downloadFailed(this.id);\n        return true;\n      }\n    }\n  }\n else {\n    Segment s=getById(id);\n    if (s.getLength() < 0) {\n      s.setLength(s.getDownloaded());\n    }\n    if (allFinished()) {\n      saveState();\n      finished=true;\n      updateStatus();\n      try {\n        assembleFinished=false;\n        assemble();\n        Logger.log(\"********Download finished*********\");\n        updateStatus();\n        assembleFinished=true;\n        listener.downloadFinished(this.id);\n      }\n catch (      Exception e) {\n        if (!stopFlag) {\n          Logger.log(e);\n          this.errorCode=XDMConstants.ERR_ASM_FAILED;\n          listener.downloadFailed(this.id);\n        }\n      }\n      listener=null;\n      return true;\n    }\n  }\n  processSegments();\n  return true;\n}\n', '0.4', '9', '10');
INSERT INTO `case_study` VALUES ('3655', 'chunkUpdated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '13', '68', '58', '-1000', '9', '0.1795', '0.1267', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void chunkUpdated(String id){\n  if (stopFlag)   return;\n  long now=System.currentTimeMillis();\n  if (now - lastSaved > 5000) {\nsynchronized (this) {\n      saveState();\n    }\n    lastSaved=now;\n  }\n  if (now - lastUpdated > 1000) {\n    updateStatus();\n    lastUpdated=now;\nsynchronized (this) {\n      processSegments();\n    }\n  }\n}\n', '0', '2', '4');
INSERT INTO `case_study` VALUES ('3656', 'createChannel(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '10', '32', '19', '-1000', '4', '0.225', '0.0939', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public AbstractChannel createChannel(Segment segment){\n  for (int i=0; i < chunks.size(); i++) {\n    if (segment == chunks.get(i)) {\n      HlsMetadata md=new HlsMetadata();\n      md.setUrl(urlList.get(i));\n      md.setHeaders(metadata.getHeaders());\n      return new HttpChannel(segment,md.getUrl(),md.getHeaders(),-1,isJavaClientRequired);\n    }\n  }\n  Logger.log(\"Create manifest channel\");\n  return new HttpChannel(segment,metadata.getUrl(),metadata.getHeaders(),-1,isJavaClientRequired);\n}\n', '0.5714285714285714', '3', '3');
INSERT INTO `case_study` VALUES ('3658', 'initOrUpdateSegments()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '29', '316', '226', '-1000', '2', '0.1034', '0.0927', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private boolean initOrUpdateSegments(){\n  try {\n    M3U8Manifest mf=new M3U8Manifest(new File(folder,manifestSegment.getId()).getAbsolutePath(),metadata.getUrl());\n    this.totalDuration=mf.getDuration();\n    Logger.log(\"Total duration\");\n    ArrayList<String> urls=mf.getMediaUrls();\n    if (urls.size() < 1) {\n      Logger.log(\"Manifest contains no media\");\n      return false;\n    }\n    if (urlList.size() > 0 && urlList.size() != urls.size()) {\n      Logger.log(\"Manifest media count mismatch- expected: \" + urlList.size() + \" got: \"+ urls.size());\n      return false;\n    }\n    if (urlList.size() > 0) {\n      urlList.clear();\n    }\n    urlList.addAll(urls);\n    String newExtension=null;\n    if (chunks.size() < 1) {\n      for (int i=0; i < urlList.size(); i++) {\n        if (newExtension == null && outputFormat == 0) {\n          newExtension=findExtension(urlList.get(i));\n          Logger.log(\"HLS: found new extension: \" + newExtension);\n          if (newExtension != null) {\n            this.newFileName=getOutputFileName(true).replace(\".ts\",newExtension);\n          }\n else {\n            newExtension=\".ts\";\n          }\n        }\n        Logger.log(\"HLS: Newfile name: \" + this.newFileName);\n        Segment s2=new SegmentImpl(this,folder);\n        s2.setTag(\"HLS\");\n        s2.setLength(-1);\n        Logger.log(\"Adding chunk: \" + s2);\n        chunks.add(s2);\n      }\n    }\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    return false;\n  }\n}\n', '0.6', '9', '11');
INSERT INTO `case_study` VALUES ('3659', 'processSegments()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '9', '27', '18', '-1000', '3', '0.2444', '0.1167', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private synchronized void processSegments(){\n  int activeCount=getActiveChunkCount();\n  Logger.log(\"active: \" + activeCount);\n  if (activeCount < MAX_COUNT) {\n    int rem=MAX_COUNT - activeCount;\n    try {\n      retryFailedChunks(rem);\n    }\n catch (    IOException e) {\n      Logger.log(e);\n    }\n  }\n}\n', '0.6666666666666666', '3', '3');
INSERT INTO `case_study` VALUES ('3660', 'updateStatus()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '50', '1066', '907', '-1000', '7', '0.0618', '0.0458', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void updateStatus(){\n  try {\n    long now=System.currentTimeMillis();\n    if (this.eta == null) {\n      this.eta=\"---\";\n    }\n    if (converting) {\n      progress=this.convertPrg;\n    }\n else     if (assembling) {\n      long len=length > 0 ? length : downloaded;\n      progress=(int)((totalAssembled * 100) / len);\n    }\n else {\n      long downloaded2=0;\n      int processedSegments=0;\n      int partPrg=0;\n      downloadSpeed=0;\n      for (int i=0; i < chunks.size(); i++) {\n        Segment s=chunks.get(i);\n        downloaded2+=s.getDownloaded();\n        downloadSpeed+=s.getTransferRate();\n        if (s.isFinished()) {\n          processedSegments++;\n        }\n else         if (s.getDownloaded() > 0 && s.getLength() > 0) {\n          int prg2=(int)((s.getDownloaded() * 100) / s.getLength());\n          partPrg+=prg2;\n        }\n      }\n      this.downloaded=downloaded2;\n      if (chunks.size() > 0) {\n        progress=(int)((processedSegments * 100) / chunks.size());\n        progress+=(partPrg / chunks.size());\n        if (segDet == null) {\n          segDet=new SegmentDetails();\n          if (segDet.getCapacity() < chunks.size()) {\n            segDet.extend(chunks.size() - segDet.getCapacity());\n          }\n          segDet.setChunkCount(chunks.size());\n        }\n        SegmentInfo info=segDet.getChunkUpdates().get(0);\n        info.setDownloaded(progress);\n        info.setLength(100);\n        info.setStart(0);\n        long diff=downloaded - lastDownloaded;\n        long timeSpend=now - prevTime;\n        if (timeSpend > 0) {\n          float rate=((float)diff / timeSpend) * 1000;\n          if (rate > downloadSpeed) {\n            downloadSpeed=rate;\n          }\n          int prgDiff=progress - lastProgress;\n          if (prgDiff > 0) {\n            long eta=(timeSpend * (100 - progress) / 1000 * prgDiff);\n            lastProgress=progress;\n            this.eta=FormatUtilities.hms((int)eta);\n          }\n          prevTime=now;\n          lastDownloaded=downloaded;\n        }\n      }\n    }\n    listener.downloadUpdated(id);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.4', '20', '16');
INSERT INTO `case_study` VALUES ('3661', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '10', '42', '39', '-1000', '7', '0.1571', '0.0476', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void stop(){\n  stopFlag=true;\n  saveState();\n  for (int i=0; i < chunks.size(); i++) {\n    chunks.get(i).stop();\n  }\n  if (this.ffmpeg != null) {\n    this.ffmpeg.stop();\n  }\n  listener.downloadStopped(id);\n  listener=null;\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('3662', 'resume()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '19', '160', '149', '-1000', '13', '0.0766', '0.0567', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '@Override public void resume(){\n  try {\n    stopFlag=false;\n    Logger.log(\"Resuming\");\n    if (!restoreState()) {\n      Logger.log(\"Starting from beginning\");\n      start();\n      return;\n    }\n    Logger.log(\"Restore success\");\n    this.lastDownloaded=downloaded;\n    this.lastProgress=this.progress;\n    this.prevTime=System.currentTimeMillis();\n    if (allFinished()) {\n      assembleAsync();\n    }\n else {\n      Logger.log(\"Starting\");\n      start();\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    this.errorCode=XDMConstants.RESUME_FAILED;\n    listener.downloadFailed(this.id);\n    return;\n  }\n}\n', '1', '7', '4');
INSERT INTO `case_study` VALUES ('3667', 'saveState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '32', '341', '186', '-1000', '3', '0.099', '0.1393', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void saveState(){\n  if (chunks.size() < 0)   return;\n  StringBuffer sb=new StringBuffer();\n  sb.append(this.length + \"\\n\");\n  sb.append(downloaded + \"\\n\");\n  sb.append(((long)this.totalDuration) + \"\\n\");\n  sb.append(urlList.size() + \"\\n\");\n  for (int i=0; i < urlList.size(); i++) {\n    String url=urlList.get(i);\n    sb.append(url + \"\\n\");\n  }\n  sb.append(chunks.size() + \"\\n\");\n  for (int i=0; i < chunks.size(); i++) {\n    Segment seg=chunks.get(i);\n    sb.append(seg.getId() + \"\\n\");\n    if (seg.isFinished()) {\n      sb.append(seg.getLength() + \"\\n\");\n      sb.append(seg.getStartOffset() + \"\\n\");\n      sb.append(seg.getDownloaded() + \"\\n\");\n    }\n else {\n      sb.append(\"-1\\n\");\n      sb.append(seg.getStartOffset() + \"\\n\");\n      sb.append(seg.getDownloaded() + \"\\n\");\n    }\n  }\n  if (!StringUtils.isNullOrEmptyOrBlank(lastModified)) {\n    sb.append(this.lastModified + \"\\n\");\n  }\n  try {\n    File tmp=new File(folder,System.currentTimeMillis() + \".tmp\");\n    File out=new File(folder,\"state.txt\");\n    FileOutputStream fs=new FileOutputStream(tmp);\n    fs.write(sb.toString().getBytes());\n    fs.close();\n    out.delete();\n    tmp.renameTo(out);\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.42857142857142855', '12', '7');
INSERT INTO `case_study` VALUES ('3668', 'restoreState()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '33', '391', '254', '-1000', '3', '0.08', '0.0906', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private boolean restoreState(){\n  BufferedReader br=null;\n  chunks=new ArrayList<Segment>();\n  File file=new File(folder,\"state.txt\");\n  if (!file.exists()) {\n    file=getBackupFile(folder);\n    if (file == null) {\n      return false;\n    }\n  }\n  try {\n    br=new BufferedReader(new FileReader(file));\n    this.length=Long.parseLong(br.readLine());\n    this.downloaded=Long.parseLong(br.readLine());\n    this.totalDuration=Long.parseLong(br.readLine());\n    int urlCount=Integer.parseInt(br.readLine());\n    for (int i=0; i < urlCount; i++) {\n      String url=br.readLine();\n      urlList.add(url);\n    }\n    int chunkCount=Integer.parseInt(br.readLine());\n    for (int i=0; i < chunkCount; i++) {\n      String cid=br.readLine();\n      long len=Long.parseLong(br.readLine());\n      long off=Long.parseLong(br.readLine());\n      long dwn=Long.parseLong(br.readLine());\n      Segment seg=new SegmentImpl(folder,cid,off,len,dwn);\n      seg.setTag(\"HLS\");\n      Logger.log(\"id: \" + seg.getId() + \"\\nlength: \"+ seg.getLength()+ \"\\noffset: \"+ seg.getStartOffset()+ \"\\ndownload: \"+ seg.getDownloaded());\n      chunks.add(seg);\n    }\n    this.lastModified=br.readLine();\n    return true;\n  }\n catch (  Exception e) {\n    Logger.log(\"Failed to load saved state\");\n    Logger.log(e);\n  }\n finally {\n    if (br != null) {\n      try {\n        br.close();\n      }\n catch (      IOException e) {\n      }\n    }\n  }\n  return false;\n}\n', '0.5', '18', '8');
INSERT INTO `case_study` VALUES ('3671', 'findExtension(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '13', '53', '28', '-1000', '4', '0.2308', '0.1563', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private String findExtension(String urlStr){\n  String newExtension=null;\n  String fileName=XDMUtils.getFileName(urlStr);\n  if (!StringUtils.isNullOrEmptyOrBlank(fileName)) {\n    String ext=XDMUtils.getExtension(fileName);\n    if ((!StringUtils.isNullOrEmptyOrBlank(ext)) && ext.length() > 1) {\n      if (!ext.toLowerCase().contains(\"ts\")) {\n        newExtension=ext;\n        if (newExtension.contains(\"m4s\")) {\n          Logger.log(\"HLS extension: MP4\");\n          newExtension=\".mp4\";\n        }\n      }\n    }\n  }\n  return newExtension;\n}\n', '0.75', '4', '6');
INSERT INTO `case_study` VALUES ('3672', 'assemble()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '25', '264', '228', '-1000', '6', '0.0821', '0.0513', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void assemble() throws IOException {\n  StringBuffer sb=new StringBuffer();\n  for (  Segment s : chunks) {\n    sb.append(\"file \'\" + new File(folder,s.getId()) + \"\'\\r\\n\");\n  }\n  OutputStream outFile=null;\n  File hlsFile=new File(folder,id + \"-hls.txt\");\n  try {\n    outFile=new FileOutputStream(hlsFile);\n    outFile.write(sb.toString().getBytes());\n    outFile.close();\n  }\n catch (  Exception e) {\n    try {\n      outFile.close();\n    }\n catch (    Exception e2) {\n    }\n  }\n  this.converting=true;\n  List<String> inputFiles=new ArrayList<String>();\n  inputFiles.add(hlsFile.getAbsolutePath());\n  this.ffmpeg=new FFmpeg(inputFiles,new File(getOutputFolder(),getOutputFileName(true)).getAbsolutePath(),this,MediaFormats.getSupportedFormats()[outputFormat],outputFormat == 0);\n  ffmpeg.setHls(true);\n  ffmpeg.setHLSDuration(totalDuration);\n  int ret=ffmpeg.convert();\n  Logger.log(\"FFmpeg exit code: \" + ret);\n  if (ret != 0) {\n    throw new IOException(\"FFmpeg failed\");\n  }\n else {\n    long length=new File(getOutputFolder(),getOutputFileName(false)).length();\n    if (length > 0) {\n      this.length=length;\n    }\n  }\n}\n', '0.5555555555555556', '12', '6');
INSERT INTO `case_study` VALUES ('3673', 'progress(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\hls\\HlsDownloader.java', 'xdm', '7', '18', '15', '-1000', '5', '0.2143', '0.1111', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override public void progress(int progress){\n  this.convertPrg=progress;\n  long now=System.currentTimeMillis();\n  if (now - lastUpdated > 1000) {\n    updateStatus();\n    lastUpdated=now;\n  }\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('3674', 'HttpChannel(Segment,String,HeaderCollection,long,boolean)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\http\\HttpChannel.java', 'xdm', '7', '20', '19', '-1000', '6', '0.1587', '0.0238', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public HttpChannel(Segment chunk,String url,HeaderCollection headers,long totalLength,boolean javaClientRequired){\n  super(chunk);\n  this.url=url;\n  this.headers=headers;\n  this.totalLength=totalLength;\n  this.javaClientRequired=javaClientRequired;\n}\n', '0', '9', '1');
INSERT INTO `case_study` VALUES ('3675', 'connectImpl()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\http\\HttpChannel.java', 'xdm', '128', '7400', '6672', '-1000', '13', '0.0382', '0.0422', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '@Override protected boolean connectImpl(){\n  int sleepInterval=0;\n  boolean isRedirect=false;\n  if (stop) {\n    closeImpl();\n    return false;\n  }\n  if (!\"HLS\".equals(chunk.getTag())) {\n    if (chunk.getLength() < 0 && chunk.getDownloaded() > 0) {\n      errorCode=XDMConstants.ERR_NO_RESUME;\n      closeImpl();\n      Logger.log(\"server does not support resuming\");\n      return false;\n    }\n    try {\n      chunk.reopenStream();\n    }\n catch (    IOException e) {\n      Logger.log(e);\n      closeImpl();\n      errorCode=XDMConstants.ERR_NO_RESUME;\n      return false;\n    }\n  }\n else {\n    try {\n      chunk.reopenStream();\n      chunk.resetStream();\n      chunk.setDownloaded(0);\n    }\n catch (    IOException e) {\n      Logger.log(\"Stream rest failed\");\n      Logger.log(e);\n    }\n  }\n  while (!stop) {\n    isRedirect=false;\n    try {\n      Logger.log(\"Connecting to: \" + url + \" \"+ chunk.getTag());\n      WebProxy wp=ProxyResolver.resolve(url);\n      if (wp != null) {\n        javaClientRequired=true;\n      }\n      if (javaClientRequired) {\n        hc=new JavaHttpClient(url);\n      }\n else {\n        hc=new XDMHttpClient(url);\n      }\n      if (headers != null) {\n        Iterator<HttpHeader> headerIt=headers.getAll();\n        while (headerIt.hasNext()) {\n          HttpHeader header=headerIt.next();\n          hc.setHeader(header.getName(),header.getValue());\n        }\n      }\n      long length=chunk.getLength();\n      long startOff=chunk.getStartOffset() + chunk.getDownloaded();\n      long endOff=startOff + length - chunk.getDownloaded();\n      long expectedLength=endOff - startOff;\n      if (length > 0 && expectedLength > 0) {\n        Logger.log(chunk + \" requesting:- \" + \"Range:\"+ \"bytes=\"+ startOff+ \"-\"+ (endOff - 1));\n        hc.setHeader(\"Range\",\"bytes=\" + startOff + \"-\"+ (endOff - 1));\n      }\n else {\n        hc.setHeader(\"Range\",\"bytes=0-\");\n      }\n      hc.connect();\n      if (stop) {\n        closeImpl();\n        return false;\n      }\n      int code=hc.getStatusCode();\n      Logger.log(chunk + \": \" + code);\n      if (code >= 300 && code < 400) {\n        closeImpl();\n        if (totalLength > 0) {\n          errorCode=XDMConstants.ERR_INVALID_RESP;\n          Logger.log(chunk + \" Redirecting twice\");\n          return false;\n        }\n else {\n          url=hc.getResponseHeader(\"location\");\n          Logger.log(chunk + \" location: \" + url);\n          if (!url.startsWith(\"http\")) {\n            if (!url.startsWith(\"/\")) {\n              url=\"/\" + url;\n            }\n            url=\"http://\" + hc.getHost() + url;\n          }\n          url=url.replace(\" \",\"%20\");\n          isRedirect=true;\n          redirected=true;\n          redirectUrl=url;\n          throw new Exception(\"Redirecting to: \" + url);\n        }\n      }\n      if (code != 200 && code != 206 && code != 416 && code != 413 && code != 401 && code != 408 && code != 407 && code != 503) {\n        errorCode=XDMConstants.ERR_INVALID_RESP;\n        closeImpl();\n        return false;\n      }\n      if (code == 407 || code == 401) {\n        if (javaClientRequired) {\n          Logger.log(\"asking for password\");\n          boolean proxy=code == 407;\n          if (!chunk.promptCredential(hc.getHost(),proxy)) {\n            errorCode=XDMConstants.ERR_INVALID_RESP;\n            closeImpl();\n            return false;\n          }\n        }\n        throw new JavaClientRequiredException();\n      }\n      if (\"T1\".equals(chunk.getTag()) || \"T2\".equals(chunk.getTag())) {\n        if (\"text/plain\".equals(hc.getResponseHeader(\"content-type\"))) {\n          ByteArrayOutputStream bout=new ByteArrayOutputStream();\n          InputStream inStr=hc.getInputStream();\n          System.out.println(inStr);\n          long len=hc.getContentLength();\n          int read=0;\n          System.out.println(\"reading url of length: \" + len);\n          while (true) {\n            if (len > 0 && read == len)             break;\n            int x=inStr.read();\n            if (x == -1) {\n              if (len > 0) {\n                throw new IOException(\"Unable to read url: unexpected EOF\");\n              }\n else {\n                break;\n              }\n            }\n            read++;\n            System.out.print((char)x);\n            bout.write(x);\n          }\n          byte[] buf=bout.toByteArray();\n          url=new String(buf,Charset.forName(\"ASCII\"));\n          isRedirect=true;\n          throw new Exception(\"Youtube text redirect to: \" + url);\n        }\n      }\n      if (((chunk.getDownloaded() + chunk.getStartOffset()) > 0) && code != 206) {\n        closeImpl();\n        errorCode=XDMConstants.ERR_NO_RESUME;\n        return false;\n      }\n      if (\"HLS\".equals(chunk.getTag())) {\n        firstLength=-1;\n      }\n else {\n        firstLength=hc.getContentLength();\n      }\n      if (length > 0) {\n        if (firstLength != expectedLength) {\n          Logger.log(chunk + \" length mismatch: expected: \" + expectedLength+ \" got: \"+ firstLength);\n          errorCode=XDMConstants.ERR_NO_RESUME;\n          closeImpl();\n          return false;\n        }\n      }\n      if (hc.getContentLength() > 0 && XDMUtils.getFreeSpace(null) < hc.getContentLength()) {\n        Logger.log(\"Disk is full\");\n        errorCode=XDMConstants.DISK_FAIURE;\n        closeImpl();\n        return false;\n      }\n      in=hc.getInputStream();\n      Logger.log(\"Connection success\");\n      return true;\n    }\n catch (    JavaClientRequiredException e) {\n      Logger.log(\"java client required\");\n      javaClientRequired=true;\n      sleepInterval=0;\n    }\ncatch (    Exception e) {\n      Logger.log(chunk);\n      Logger.log(e);\n      if (isRedirect) {\n        closeImpl();\n        continue;\n      }\n      sleepInterval=5000;\n    }\n    closeImpl();\n    try {\n      Thread.sleep(sleepInterval);\n    }\n catch (    Exception e) {\n    }\n  }\n  Logger.log(\"return as \" + errorCode);\n  return false;\n}\n', '0.4166666666666667', '22', '51');
INSERT INTO `case_study` VALUES ('3689', 'chunkConfirmed(Segment)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\http\\HttpDownloader.java', 'xdm', '27', '253', '155', '-1000', '3', '0.1282', '0.128', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '@Override protected void chunkConfirmed(Segment c){\n  HttpChannel hc=(HttpChannel)c.getChannel();\n  this.isJavaClientRequired=hc.isJavaClientRequired();\n  super.getLastModifiedDate(c);\n  if (hc.isRedirected()) {\n    metadata.setUrl(hc.getRedirectUrl());\n    metadata.save();\n    if (outputFormat == 0) {\n      newFileName=XDMUtils.getFileName(metadata.getUrl());\n      Logger.log(\"set new filename: \" + newFileName);\n      Logger.log(\"new file name: \" + newFileName);\n    }\n  }\n  String contentDispositionHeader=hc.getHeader(\"content-disposition\");\n  if (contentDispositionHeader != null) {\n    if (outputFormat == 0) {\n      String name=NetUtils.getNameFromContentDisposition(contentDispositionHeader);\n      if (name != null) {\n        this.newFileName=name;\n        Logger.log(\"set new filename: \" + newFileName);\n      }\n    }\n  }\n  if ((hc.getHeader(\"content-type\") + \"\").contains(\"/html\")) {\n    if (this.newFileName != null) {\n      String upperStr=this.newFileName.toUpperCase();\n      if (!(upperStr.endsWith(\".HTML\") || upperStr.endsWith(\".HTM\"))) {\n        outputFormat=0;\n        this.newFileName+=\".html\";\n        Logger.log(\"set new filename: \" + newFileName);\n      }\n    }\n  }\n  Logger.log(\"new filename: \" + newFileName);\n}\n', '0.5454545454545454', '10', '10');
INSERT INTO `case_study` VALUES ('3691', 'derive()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\DashMetadata.java', 'xdm', '11', '27', '0', '-1000', '4', '0.4545', '0.4074', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public HttpMetadata derive(){\n  Logger.log(\"derive dash metadata\");\n  DashMetadata md=new DashMetadata();\n  md.setHeaders(this.getHeaders());\n  md.setHeaders2(this.getHeaders2());\n  md.setUrl(this.getUrl());\n  md.setUrl2(this.getUrl2());\n  md.setLen1(this.getLen1());\n  md.setLen2(this.getLen2());\n  return md;\n}\n', '0.4', '1', '1');
INSERT INTO `case_study` VALUES ('3706', 'derive()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\HdsMetadata.java', 'xdm', '8', '18', '8', '-1000', '4', '0.2813', '0.2099', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public HttpMetadata derive(){\n  Logger.log(\"derive hds metadata\");\n  HdsMetadata md=new HdsMetadata();\n  md.setHeaders(this.getHeaders());\n  md.setUrl(this.getUrl());\n  md.setBitRate(bitRate);\n  return md;\n}\n', '0.4', '1', '1');
INSERT INTO `case_study` VALUES ('3712', 'derive()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\HlsMetadata.java', 'xdm', '7', '15', '9', '-1000', '4', '0.3333', '0.2', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@Override public HttpMetadata derive(){\n  Logger.log(\"derive hls metadata\");\n  HlsMetadata md=new HlsMetadata();\n  md.setHeaders(this.getHeaders());\n  md.setUrl(this.getUrl());\n  return md;\n}\n', '0.4', '1', '1');
INSERT INTO `case_study` VALUES ('3713', 'derive()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\HttpMetadata.java', 'xdm', '8', '18', '8', '-1000', '4', '0.3333', '0.2593', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'public HttpMetadata derive(){\n  Logger.log(\"derive normal metadata\");\n  HttpMetadata md=new HttpMetadata();\n  md.setHeaders(this.getHeaders());\n  md.setUrl(this.getUrl());\n  md.setSize(getSize());\n  return md;\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('3722', 'load(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\HttpMetadata.java', 'xdm', '63', '1477', '1001', '-1000', '3', '0.0645', '0.1009', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', 'public static HttpMetadata load(String id){\n  Logger.log(\"loading metadata: \" + id);\n  BufferedReader br=null;\n  HttpMetadata metadata=null;\n  int type;\n  try {\n    br=new BufferedReader(new FileReader(new File(Config.getInstance().getMetadataFolder(),id)));\n    String ln=br.readLine();\n    if (ln == null) {\n      Logger.log(\"invalid metadata, file is empty\");\n      return null;\n    }\n    int index=ln.indexOf(\":\");\n    if (index < 0) {\n      Logger.log(\"invalid metadata file starting with: \" + ln);\n      return null;\n    }\n    String key=ln.substring(0,index).trim().toLowerCase();\n    String val=ln.substring(index + 1).trim();\n    if (key.equals(\"type\")) {\n      type=Integer.parseInt(val);\n      if (type == XDMConstants.HTTP) {\n        metadata=new HttpMetadata(id);\n      }\n else       if (type == XDMConstants.HLS) {\n        metadata=new HlsMetadata(id);\n      }\n else       if (type == XDMConstants.HDS) {\n        metadata=new HdsMetadata(id);\n      }\n else       if (type == XDMConstants.DASH) {\n        metadata=new DashMetadata(id);\n      }\n    }\n else {\n      Logger.log(\"invalid metadata file starting with: \" + ln);\n      return null;\n    }\n    while (true) {\n      ln=br.readLine();\n      if (ln == null)       break;\n      index=ln.indexOf(\":\");\n      if (index < 0)       continue;\n      key=ln.substring(0,index).trim().toLowerCase();\n      val=ln.substring(index + 1).trim();\n      if (key.equals(\"url\")) {\n        metadata.setUrl(val);\n      }\n      if (key.equals(\"size\")) {\n        metadata.setSize(Long.parseLong(val));\n      }\n      if (key.equals(\"header\")) {\n        int index2=val.indexOf(\":\");\n        if (index2 < 0) {\n          continue;\n        }\n        String key1=val.substring(0,index2).trim();\n        String val1=val.substring(index2 + 1).trim();\n        metadata.headers.addHeader(key1,val1);\n      }\n      if (key.equals(\"header2\")) {\n        int index2=val.indexOf(\":\");\n        if (index2 < 0) {\n          continue;\n        }\n        String key1=val.substring(0,index2).trim();\n        String val1=val.substring(index2 + 1).trim();\n        ((DashMetadata)metadata).getHeaders2().addHeader(key1,val1);\n      }\n      if (key.equals(\"url2\")) {\n        ((DashMetadata)metadata).setUrl2(val);\n      }\n      if (key.equals(\"len1\")) {\n        ((DashMetadata)metadata).setLen1(Long.parseLong(val));\n      }\n      if (key.equals(\"len2\")) {\n        ((DashMetadata)metadata).setLen2(Long.parseLong(val));\n      }\n      if (key.equals(\"bitrate\")) {\n        ((HdsMetadata)metadata).setBitRate(Integer.parseInt(val));\n      }\n      if (key.equals(\"ydlurl\")) {\n        Logger.log(\"ydurl: \" + val);\n        metadata.ydlUrl=val;\n      }\n    }\n    br.close();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    if (br != null) {\n      try {\n        br.close();\n      }\n catch (      Exception ex) {\n      }\n    }\n  }\n  return metadata;\n}\n', '0.5', '16', '25');
INSERT INTO `case_study` VALUES ('3723', 'save()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\HttpMetadata.java', 'xdm', '38', '594', '485', '-1000', '5', '0.0748', '0.0757', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', 'public void save(){\n  FileOutputStream fw=null;\n  try {\n    StringBuilder sb=new StringBuilder();\n    if (url == null)     throw new NullPointerException(\"url is null\");\n    sb.append(\"type: \" + getType() + \"\\n\");\n    sb.append(\"url: \" + url + \"\\n\");\n    sb.append(\"size: \" + size + \"\\n\");\n    if (headers != null) {\n      Iterator<HttpHeader> headerIterator=headers.getAll();\n      while (headerIterator.hasNext()) {\n        HttpHeader header=headerIterator.next();\n        sb.append(\"header: \" + header.getName() + \":\"+ header.getValue()+ \"\\n\");\n      }\n    }\n    if (getType() == XDMConstants.HDS) {\n      sb.append(\"bitrate: \" + ((HdsMetadata)this).getBitRate() + \"\\n\");\n    }\n    if (getType() == XDMConstants.DASH) {\n      sb.append(\"url2: \" + ((DashMetadata)this).getUrl2() + \"\\n\");\n      sb.append(\"len1: \" + ((DashMetadata)this).getLen1() + \"\\n\");\n      sb.append(\"len2: \" + ((DashMetadata)this).getLen2() + \"\\n\");\n      if (((DashMetadata)this).getHeaders2() != null) {\n        Iterator<HttpHeader> headerIterator=((DashMetadata)this).getHeaders2().getAll();\n        while (headerIterator.hasNext()) {\n          HttpHeader header=headerIterator.next();\n          sb.append(\"header2: \" + header.getName() + \":\"+ header.getValue()+ \"\\n\");\n        }\n      }\n    }\n    if (!StringUtils.isNullOrEmptyOrBlank(ydlUrl)) {\n      sb.append(\"ydlUrl: \" + ydlUrl);\n    }\n    File metadataFolder=new File(Config.getInstance().getMetadataFolder());\n    if (!metadataFolder.exists()) {\n      metadataFolder.mkdirs();\n    }\n    File file=new File(metadataFolder,id);\n    fw=new FileOutputStream(file);\n    fw.write(sb.toString().getBytes());\n    fw.close();\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    if (fw != null) {\n      try {\n        fw.close();\n      }\n catch (      Exception ex) {\n      }\n    }\n  }\n}\n', '0.5833333333333334', '10', '13');
INSERT INTO `case_study` VALUES ('3728', 'ChunkedInputStream(InputStream)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\ChunkedInputStream.java', 'xdm', '7', '20', '19', '-1000', '6', '0.1667', '0.05', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '/** \n * Wraps session input stream and reads chunk coded input.\n * @param inThe session input buffer\n */\npublic ChunkedInputStream(final InputStream in){\n  super();\n  if (in == null) {\n    throw new IllegalArgumentException(\"Session input buffer may not be null\");\n  }\n  this.in=in;\n  this.pos=0;\n  this.buffer=new StringBuffer(16);\n  this.state=CHUNK_LEN;\n}\n', '0', '5', '2');
INSERT INTO `case_study` VALUES ('3729', 'read()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\ChunkedInputStream.java', 'xdm', '14', '80', '69', '-1000', '7', '0.1349', '0.0569', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '/** \n * Read some bytes from the stream.\n * @param bThe byte array that will hold the contents from the stream.\n * @return The number of bytes returned or -1 if the end of stream has been\n * reached.\n * @throws IOExceptionin case of an I/O error\n */\npublic int read(byte[] b) throws IOException {\n  return read(b,0,b.length);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('3732', 'nextChunk()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\ChunkedInputStream.java', 'xdm', '10', '42', '39', '-1000', '8', '0.14', '0.0769', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '/** \n * Read the next chunk.\n * @throws IOExceptionin case of an I/O error\n */\nprivate void nextChunk() throws IOException {\n  chunkSize=getChunkSize();\n  if (chunkSize < 0) {\n    throw new IllegalArgumentException(\"Negative chunk size\");\n  }\n  state=CHUNK_DATA;\n  pos=0;\n  if (chunkSize == 0) {\n    eof=true;\n    parseTrailerHeaders();\n  }\n}\n', '0', '0', '3');
INSERT INTO `case_study` VALUES ('3734', 'parseTrailerHeaders()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\ChunkedInputStream.java', 'xdm', '6', '11', '7', '-1000', '3', '0.3333', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '/** \n * Reads and stores the Trailer headers.\n * @throws IOExceptionin case of an I/O error\n */\nprivate void parseTrailerHeaders() throws IOException {\n  while (true) {\n    StringBuffer buf=new StringBuffer();\n    int i=readLine(in,buf);\n    if (i == -1)     break;\n    if (buf.length() < 1) {\n      break;\n    }\n  }\n}\n', '0', '2', '4');
INSERT INTO `case_study` VALUES ('3735', 'close()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\ChunkedInputStream.java', 'xdm', '9', '31', '26', '-1000', '5', '0.2593', '0.1061', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '/** \n * Upon close, this reads the remainder of the chunked message, leaving the\n * underlying socket at a position to start reading the next response\n * without scanning.\n * @throws IOExceptionin case of an I/O error\n */\npublic void close() throws IOException {\n  if (!closed) {\n    try {\n      if (!eof) {\n        byte buffer[]=new byte[BUFFER_SIZE];\n        while (read(buffer) >= 0) {\n        }\n      }\n    }\n  finally {\n      eof=true;\n      closed=true;\n    }\n  }\n}\n', '0', '1', '4');
INSERT INTO `case_study` VALUES ('3736', 'readLine(InputStream,StringBuffer)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\ChunkedInputStream.java', 'xdm', '12', '43', '20', '-1000', '3', '0.2917', '0.2026', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public static final int readLine(InputStream in,StringBuffer buf) throws IOException {\n  boolean gotCR=false;\n  while (true) {\n    int x=in.read();\n    if (x == -1)     return (buf.length() > 0 ? buf.length() : -1);\n    if (x == \'\\n\') {\n      if (gotCR) {\n        return buf.length();\n      }\n    }\n    if (x == \'\\r\') {\n      gotCR=true;\n    }\n else {\n      gotCR=false;\n    }\n    if (x != \'\\r\')     buf.append((char)x);\n  }\n}\n', '0', '4', '8');
INSERT INTO `case_study` VALUES ('3748', 'loadFromStream(InputStream)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\HeaderCollection.java', 'xdm', '10', '29', '13', '-1000', '3', '0.2111', '0.1205', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'public void loadFromStream(InputStream inStream) throws IOException {\n  while (true) {\n    String ln=NetUtils.readLine(inStream);\n    if (ln.length() < 1)     break;\n    int index=ln.indexOf(\":\");\n    if (index > 0) {\n      String key=ln.substring(0,index).trim();\n      String value=ln.substring(index + 1).trim();\n      HttpHeader header=new HttpHeader(key,value);\n      headers.add(header);\n    }\n  }\n}\n', '1', '6', '4');
INSERT INTO `case_study` VALUES ('3765', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\HttpContext.java', 'xdm', '53', '1363', '1348', '-1000', '44', '0.0425', '0.0157', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'public void init(){\n  if (!init) {\n    Logger.log(\"Context initialized\");\n    System.setProperty(\"http.auth.preference\",\"ntlm\");\n    try {\n      try {\n        sslContext=SSLContext.getInstance(\"TLS\");\n      }\n catch (      Exception e) {\n        e.printStackTrace();\n        sslContext=SSLContext.getInstance(\"SSL\");\n      }\n      TrustManager[] trustAllCerts=new TrustManager[]{new X509ExtendedTrustManager(){\n        @Override public void checkClientTrusted(        X509Certificate[] chain,        String authType) throws CertificateException {\n        }\n        @Override public void checkServerTrusted(        X509Certificate[] chain,        String authType) throws CertificateException {\n        }\n        @Override public X509Certificate[] getAcceptedIssuers(){\n          return null;\n        }\n        @Override public void checkClientTrusted(        X509Certificate[] chain,        String authType,        Socket socket) throws CertificateException {\n        }\n        @Override public void checkClientTrusted(        X509Certificate[] chain,        String authType,        SSLEngine engine) throws CertificateException {\n        }\n        @Override public void checkServerTrusted(        X509Certificate[] chain,        String authType,        Socket socket) throws CertificateException {\n        }\n        @Override public void checkServerTrusted(        X509Certificate[] chain,        String authType,        SSLEngine engine) throws CertificateException {\n        }\n      }\n};\n      sslContext.init(null,trustAllCerts,new SecureRandom());\n      HttpsURLConnection.setDefaultSSLSocketFactory(sslContext.getSocketFactory());\n    }\n catch (    Exception e) {\n      Logger.log(e);\n    }\n    Authenticator.setDefault(new Authenticator(){\n      protected PasswordAuthentication getPasswordAuthentication(){\n        System.out.println(\"Called on \" + getRequestorType() + \" scheme: \"+ getRequestingScheme()+ \" host: \"+ getRequestingHost()+ \" url: \"+ getRequestingURL()+ \" prompt: \"+ getRequestingPrompt());\n        if (getRequestorType() == RequestorType.SERVER) {\n          PasswordAuthentication pauth=CredentialManager.getInstance().getCredentialForHost(getRequestingHost());\n          return pauth;\n        }\n else {\n          return CredentialManager.getInstance().getCredentialForProxy();\n        }\n      }\n    }\n);\n    init=true;\n  }\n}\n', '0.5', '20', '4');
INSERT INTO `case_study` VALUES ('3767', 'parse(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\HttpHeader.java', 'xdm', '7', '13', '5', '-1000', '3', '0.3429', '0.155', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public static HttpHeader parse(String str){\n  int index=str.indexOf(\":\");\n  if (index < 0)   return null;\n  String key=str.substring(0,index);\n  String val=str.substring(index + 1);\n  return new HttpHeader(key,val);\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('3774', 'JavaHttpClient(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\JavaHttpClient.java', 'xdm', '6', '14', '13', '-1000', '5', '0.1905', '0.0222', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public JavaHttpClient(String url){\n  super();\n  this._url=url;\n  this.requestHeaders=new HeaderCollection();\n  this.responseHeaders=new HeaderCollection();\n}\n', '1', '4', '1');
INSERT INTO `case_study` VALUES ('3775', 'connect()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\JavaHttpClient.java', 'xdm', '29', '355', '304', '-1000', '5', '0.0733', '0.0443', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'public void connect() throws IOException {\n  HttpContext.getInstance().init();\n  WebProxy webproxy=ProxyResolver.resolve(_url);\n  URL url=new URL(_url);\n  this.realURL=url;\n  if (webproxy != null) {\n    Proxy proxy=new Proxy(webproxy.isSocks() ? Proxy.Type.SOCKS : Proxy.Type.HTTP,new InetSocketAddress(webproxy.getHost(),webproxy.getPort()));\n    hc=(HttpURLConnection)url.openConnection(proxy);\n  }\n else {\n    hc=(HttpURLConnection)url.openConnection();\n  }\n  Iterator<HttpHeader> headers=requestHeaders.getAll();\n  while (headers.hasNext()) {\n    HttpHeader header=headers.next();\n    hc.addRequestProperty(header.getName(),header.getValue());\n  }\n  hc.setInstanceFollowRedirects(false);\n  this.statusCode=hc.getResponseCode();\n  this.statusMessage=hc.getResponseMessage();\n  Map<String,List<String>> responseHeaderMap=hc.getHeaderFields();\n  Iterator<String> headerIterator=responseHeaderMap.keySet().iterator();\n  while (headerIterator.hasNext()) {\n    String key=headerIterator.next();\n    if (key == null)     continue;\n    List<String> headerValues=responseHeaderMap.get(key);\n    Iterator<String> headerValueIterator=headerValues.iterator();\n    while (headerValueIterator.hasNext()) {\n      String value=headerValueIterator.next();\n      HttpHeader header=new HttpHeader(key,value);\n      this.responseHeaders.addHeader(header);\n    }\n  }\n}\n', '0.45454545454545453', '16', '7');
INSERT INTO `case_study` VALUES ('3780', 'WebProxy(String,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\WebProxy.java', 'xdm', '6', '15', '15', '-1000', '6', '0.1667', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public WebProxy(String host,int port){\n  super();\n  this.host=host;\n  this.port=port;\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('3789', 'dispose()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\XDMHttpClient.java', 'xdm', '8', '26', '24', '-1000', '6', '0.1667', '0.0741', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void dispose(){\n  if (closed)   return;\n  closed=true;\n  try {\n    if (in.isStreamFinished() && keepAliveSupported) {\n      releaseSocket();\n      return;\n    }\n  }\n catch (  Exception e) {\n  }\n  try {\n    this.socket.close();\n  }\n catch (  Exception e) {\n  }\n}\n', '1', '3', '6');
INSERT INTO `case_study` VALUES ('3791', 'connect()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\XDMHttpClient.java', 'xdm', '48', '1035', '942', '-1000', '9', '0.0551', '0.0387', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', '@Override public void connect() throws IOException {\n  try {\n    int port=_url.getPort();\n    String portStr=(port == 80 || port == 443) ? \"\" : \":\" + port;\n    requestHeaders.setValue(\"host\",_url.getHost() + portStr);\n    Socket sock=KeepAliveConnectionCache.getInstance().getReusableSocket(_url.getHost(),_url.getPort());\n    boolean reusing=false;\n    if (sock == null) {\n      Logger.log(\"Creating new socket\");\n      this.socket=createSocket();\n    }\n else {\n      reusing=true;\n      Logger.log(\"Reusing existing socket\");\n      this.socket=sock;\n    }\n    OutputStream sockOut=socket.getOutputStream();\n    InputStream sockIn=socket.getInputStream();\n    String reqLine=\"GET \" + _url.getPathAndQuery() + \" HTTP/1.1\";\n    StringBuffer reqBuf=new StringBuffer();\n    reqBuf.append(reqLine + \"\\r\\n\");\n    requestHeaders.appendToBuffer(reqBuf);\n    reqBuf.append(\"\\r\\n\");\n    Logger.log(\"Sending request:\\n\" + reqBuf);\n    sockOut.write(StringUtils.getBytes(reqBuf));\n    sockOut.flush();\n    statusLine=NetUtils.readLine(sockIn);\n    String[] arr=statusLine.split(\" \");\n    this.statusCode=Integer.parseInt(arr[1].trim());\n    if (arr.length > 2) {\n      this.statusMessage=arr[2].trim();\n    }\n else {\n      this.statusMessage=\"\";\n    }\n    Logger.log(statusLine);\n    responseHeaders.loadFromStream(sockIn);\n    length=NetUtils.getContentLength(responseHeaders);\n    in=new FixedRangeInputStream(NetUtils.getInputStream(responseHeaders,socket.getInputStream()),length);\n    StringBuffer b2=new StringBuffer();\n    responseHeaders.appendToBuffer(b2);\n    if (reusing) {\n      Logger.log(\"Socket reuse successfull\");\n    }\n    Logger.log(b2);\n    keepAliveSupported=!\"close\".equals(responseHeaders.getValue(\"connection\"));\n  }\n catch (  HostUnreachableException e) {\n    e.printStackTrace();\n    throw new NetworkException(\"Unable to connect to server\");\n  }\ncatch (  Exception e) {\n    e.printStackTrace();\n    throw new NetworkException(e.getMessage());\n  }\n}\n', '0.5', '17', '9');
INSERT INTO `case_study` VALUES ('3793', 'createSocket()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\XDMHttpClient.java', 'xdm', '6', '10', '5', '-1000', '3', '0.4444', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private Socket createSocket() throws IOException {\n  Socket socket=SocketFactory.createSocket(_url.getHost(),_url.getPort());\n  if (_url.getProtocol().equalsIgnoreCase(\"https\")) {\n    socket=SocketFactory.wrapSSL(socket,_url.getHost(),_url.getPort());\n  }\n  return socket;\n}\n', '0.4', '1', '2');
INSERT INTO `case_study` VALUES ('3796', 'AboutPage(XDMFrame)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\AboutPage.java', 'xdm', '32', '360', '224', '-1000', '2', '0.1138', '0.1398', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', 'public AboutPage(XDMFrame xframe){\n  super(StringResource.get(\"TITLE_ABOUT\"),350,xframe);\n  int y=0;\n  int h=0;\n  JPanel panel=new JPanel();\n  panel.setLayout(null);\n  panel.setOpaque(false);\n  y+=10;\n  h=50;\n  JLabel lblTitle=new JLabel(StringResource.get(\"FULL_NAME\"));\n  lblTitle.setFont(FontResource.getBiggerFont());\n  lblTitle.setForeground(Color.WHITE);\n  lblTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblTitle);\n  y+=h;\n  y+=20;\n  String details=String.format(StringResource.get(\"ABOUT_DETAILS\"),XDMApp.APP_VERSION,System.getProperty(\"java.version\"),System.getProperty(\"os.name\"),\"http://xdman.sourceforge.net\");\n  h=250;\n  JTextArea lblDetails=new JTextArea();\n  lblDetails.setOpaque(false);\n  lblDetails.setWrapStyleWord(true);\n  lblDetails.setLineWrap(true);\n  lblDetails.setEditable(false);\n  lblDetails.setForeground(Color.WHITE);\n  lblDetails.setText(details);\n  lblDetails.setFont(FontResource.getBigFont());\n  lblDetails.setBounds(15,y,350 - 30,h);\n  panel.add(lblDetails);\n  y+=h;\n  panel.setPreferredSize(new Dimension(350,y));\n  panel.setBounds(0,0,350,y);\n  jsp.setViewportView(panel);\n}\n', '0.6666666666666666', '7', '1');
INSERT INTO `case_study` VALUES ('3800', 'paint(Graphics)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\CircleProgressBar.java', 'xdm', '24', '202', '128', '-1000', '9', '0.0855', '0.1009', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '@Override public void paint(Graphics g){\n  Graphics2D g2=(Graphics2D)g;\n  if (g2 == null) {\n    return;\n  }\n  g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);\n  int sweep_angle=(int)(((float)value * 360) / 100);\n  g2.setColor(Color.GRAY);\n  g2.setStroke(stroke);\n  g2.drawArc(padding,padding,getWidth() - 2 * padding,getHeight() - 2 * padding,90,-360);\n  if (value > 0) {\n    g2.setColor(foreColor);\n    g2.drawArc(padding,padding,getWidth() - 2 * padding,getHeight() - 2 * padding,90,-sweep_angle);\n  }\n  g2.setFont(FontResource.getItemFont());\n  FontMetrics fm=g2.getFontMetrics();\n  String str=value + \"%\";\n  int w=(int)fm.getStringBounds(str,g2).getWidth();\n  LineMetrics lm=fm.getLineMetrics(str,g2);\n  int h=(int)(lm.getAscent() + lm.getDescent());\n  g2.drawString(str,(getWidth() - w) / 2,((getHeight() + h) / 2) - lm.getDescent());\n}\n', '1', '8', '3');
INSERT INTO `case_study` VALUES ('3806', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\CustomButton.java', 'xdm', '6', '14', '13', '-1000', '4', '0.2', '0.0238', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void init(){\n  rolloverBackground=ColorResource.getSelectionColor();\n  rolloverForeground=Color.WHITE;\n  pressedBackground=ColorResource.getDarkBgColor();\n  pressedForeground=Color.WHITE;\n}\n', '0.5', '0', '1');
INSERT INTO `case_study` VALUES ('3821', 'initUI(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadCompleteWnd.java', 'xdm', '89', '3599', '3282', '-1000', '10', '0.0449', '0.0411', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private void initUI(String file,String folder){\n  setUndecorated(true);\n  try {\n    if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n      setOpacity(0.85f);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  setSize(350,210);\n  setLocationRelativeTo(null);\n  setAlwaysOnTop(true);\n  getContentPane().setLayout(null);\n  getContentPane().setBackground(ColorResource.getDarkestBgColor());\n  JPanel titlePanel=new TitlePanel(null,this);\n  titlePanel.setOpaque(false);\n  titlePanel.setBounds(0,0,350,50);\n  add(titlePanel);\n  JButton closeBtn=new CustomButton();\n  closeBtn.setBounds(310,5,30,30);\n  closeBtn.setBackground(ColorResource.getDarkestBgColor());\n  closeBtn.setBorderPainted(false);\n  closeBtn.setFocusPainted(false);\n  closeBtn.setName(\"CLOSE\");\n  closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n  closeBtn.addActionListener(this);\n  titlePanel.add(closeBtn);\n  JLabel titleLbl=new JLabel(StringResource.get(\"CD_TITLE\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(25,15,200,30);\n  titlePanel.add(titleLbl);\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,55,350,1);\n  lineLbl.setOpaque(true);\n  add(lineLbl);\n  JLabel lblFile=new JLabel(StringResource.get(\"ND_FILE\"),JLabel.RIGHT);\n  lblFile.setBounds(0,75,70,20);\n  lblFile.setForeground(Color.WHITE);\n  add(lblFile);\n  JLabel lblSave=new JLabel(StringResource.get(\"CD_LOC\"),JLabel.RIGHT);\n  lblSave.setBounds(0,100,70,20);\n  lblSave.setForeground(Color.WHITE);\n  add(lblSave);\n  txtFile=new JTextField();\n  txtFile.setText(file);\n  txtFile.setEditable(false);\n  txtFile.setBorder(new LineBorder(ColorResource.getSelectionColor(),1));\n  txtFile.setBackground(ColorResource.getDarkestBgColor());\n  txtFile.setForeground(Color.WHITE);\n  txtFile.setBounds(80,75,220,20);\n  txtFile.setCaretColor(ColorResource.getSelectionColor());\n  add(txtFile);\n  txtFolder=new JTextField();\n  txtFolder.setText(folder);\n  txtFolder.setEditable(false);\n  txtFolder.setBorder(new LineBorder(ColorResource.getSelectionColor(),1));\n  txtFolder.setBackground(ColorResource.getDarkestBgColor());\n  txtFolder.setForeground(Color.WHITE);\n  txtFolder.setBounds(80,100,220,20);\n  txtFolder.setCaretColor(ColorResource.getSelectionColor());\n  add(txtFolder);\n  chkDontShow=new JCheckBox(StringResource.get(\"MSG_DONT_SHOW_AGAIN\"));\n  chkDontShow.setBackground(ColorResource.getDarkestBgColor());\n  chkDontShow.setName(\"MSG_DONT_SHOW_AGAIN\");\n  chkDontShow.setForeground(Color.WHITE);\n  chkDontShow.setFocusPainted(false);\n  chkDontShow.setBounds(75,125,200,20);\n  chkDontShow.setIcon(ImageResource.get(\"unchecked.png\"));\n  chkDontShow.setSelectedIcon(ImageResource.get(\"checked.png\"));\n  chkDontShow.addActionListener(this);\n  add(chkDontShow);\n  JPanel panel=new JPanel(null);\n  panel.setBounds(0,155,400,55);\n  panel.setBackground(Color.DARK_GRAY);\n  add(panel);\n  CustomButton btnMore=new CustomButton(StringResource.get(\"CD_OPEN_FILE\")), btnDN=new CustomButton(StringResource.get(\"CD_OPEN_FOLDER\")), btnCN=new CustomButton(StringResource.get(\"ND_CANCEL\"));\n  btnMore.setBounds(0,1,100,55);\n  btnMore.setName(\"CTX_OPEN_FILE\");\n  styleButton(btnMore);\n  panel.add(btnMore);\n  btnDN.setBounds(101,1,148,55);\n  btnDN.setName(\"CTX_OPEN_FOLDER\");\n  styleButton(btnDN);\n  panel.add(btnDN);\n  btnCN.setBounds(250,1,100,55);\n  btnCN.setName(\"CLOSE\");\n  styleButton(btnCN);\n  panel.add(btnCN);\n}\n', '0.875', '13', '3');
INSERT INTO `case_study` VALUES ('3822', 'styleButton(CustomButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadCompleteWnd.java', 'xdm', '10', '17', '0', '-1000', '3', '0.26', '0.3295', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void styleButton(CustomButton btn){\n  btn.setBackground(ColorResource.getDarkestBgColor());\n  btn.setPressedBackground(ColorResource.getDarkerBgColor());\n  btn.setForeground(Color.WHITE);\n  btn.setFont(FontResource.getBigFont());\n  btn.setBorderPainted(false);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setFocusPainted(false);\n  btn.addActionListener(this);\n}\n', '0.75', '1', '1');
INSERT INTO `case_study` VALUES ('3823', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadCompleteWnd.java', 'xdm', '16', '107', '94', '-1000', '7', '0.1458', '0.0864', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (e.getSource() instanceof JComponent) {\n    String name=((JComponent)e.getSource()).getName();\n    if (name.startsWith(\"MSG_DONT_SHOW_AGAIN\")) {\n      Config.getInstance().setShowDownloadCompleteWindow(!chkDontShow.isSelected());\n    }\n else     if (name.equals(\"CLOSE\")) {\n      dispose();\n    }\n else     if (name.equals(\"CTX_OPEN_FILE\")) {\n      try {\n        XDMUtils.openFile(txtFile.getText(),txtFolder.getText());\n        dispose();\n      }\n catch (      Exception e1) {\n        Logger.log(e1);\n      }\n    }\n else     if (name.equals(\"CTX_OPEN_FOLDER\")) {\n      try {\n        XDMUtils.openFolder(txtFile.getText(),txtFolder.getText());\n        dispose();\n      }\n catch (      Exception e1) {\n        Logger.log(e1);\n      }\n    }\n  }\n}\n', '0.6', '4', '8');
INSERT INTO `case_study` VALUES ('3824', 'DownloadListView(JPanel)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadListView.java', 'xdm', '33', '485', '442', '-1000', '21', '0.0697', '0.0647', '0', '0', '0', '1', '0', '1', '1', '1', '0', '0', 'public DownloadListView(JPanel container){\n  model=new DownloadTableModel();\n  XDMApp.getInstance().addListener(model);\n  table=new JTable(model);\n  table.setTableHeader(null);\n  table.setDefaultRenderer(DownloadEntry.class,new XDMTableCellRenderer());\n  table.setRowHeight(70);\n  table.setShowGrid(false);\n  table.setFillsViewportHeight(true);\n  table.setBorder(new EmptyBorder(0,0,0,0));\n  table.setDragEnabled(true);\n  JScrollPane jsp=new JScrollPane(table);\n  jsp.setBorder(new EmptyBorder(0,0,0,0));\n  container.add(jsp);\n}\n', '0.75', '2', '1');
INSERT INTO `case_study` VALUES ('3828', 'compare(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadSorter.java', 'xdm', '14', '60', '29', '-1000', '4', '0.2347', '0.1795', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public int compare(String id1,String id2){\n  DownloadEntry o1=XDMApp.getInstance().getEntry(id1);\n  DownloadEntry o2=XDMApp.getInstance().getEntry(id2);\n  int res=0;\nswitch (Config.getInstance().getSortField()) {\ncase 0:\n    res=o1.getDate() > o2.getDate() ? 1 : -1;\n  break;\ncase 1:\nres=o1.getSize() > o2.getSize() ? 1 : -1;\nbreak;\ncase 2:\nres=o1.getFile().compareTo(o2.getFile());\nbreak;\ncase 3:\nres=o1.getCategory() - o2.getCategory();\nbreak;\ndefault :\nbreak;\n}\nif (Config.getInstance().getSortAsc()) {\nreturn res;\n}\n else {\nreturn -res;\n}\n}\n', '0.3333333333333333', '5', '8');
INSERT INTO `case_study` VALUES ('3834', 'listChanged()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadTableModel.java', 'xdm', '7', '21', '21', '-1000', '7', '0.1429', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override public void listChanged(){\n  Logger.log(\"List changed\");\n  idList=XDMApp.getInstance().getDownloadList(Config.getInstance().getCategoryFilter(),Config.getInstance().getStateFilter(),Config.getInstance().getSearchText());\n  sort();\n  refreshIdMap();\n  fireTableDataChanged();\n}\n', '0.42857142857142855', '0', '1');
INSERT INTO `case_study` VALUES ('3835', 'listItemUpdated(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadTableModel.java', 'xdm', '6', '12', '9', '-1000', '4', '0.25', '0.119', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '@Override public void listItemUpdated(String id){\n  Logger.log(\"List updated\");\n  Integer index=idIndexMap.get(id);\n  if (index != null) {\n    fireTableRowsUpdated(index,index);\n  }\n}\n', '1', '2', '2');
INSERT INTO `case_study` VALUES ('3843', 'update(Downloader,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadWindow.java', 'xdm', '16', '103', '86', '-1000', '9', '0.1058', '0.0473', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void update(Downloader d,String file){\n  titleLbl.setText(file);\n  lblStat.setText(d.isAssembling() ? StringResource.get(\"STAT_ASSEMBLING\") : StringResource.get(\"DWN_TITLE\"));\n  lblDet.setText((d.isAssembling() ? StringResource.get(\"STAT_ASSEMBLING\") : StringResource.get(\"DWN_DOWNLOAD\")) + \" \" + FormatUtilities.formatSize(d.getDownloaded())+ \" \"+ ((d.getType() == XDMConstants.HTTP || d.getType() == XDMConstants.DASH) ? \"/ \" + FormatUtilities.formatSize(d.getSize()) : \"( \" + d.getProgress() + \" % )\"));\n  lblSpeed.setText(FormatUtilities.formatSize(d.getDownloadSpeed()) + \"/s\");\n  lblETA.setText(\"ETA \" + d.getEta());\n  prgCircle.setValue(d.getProgress());\n  SegmentDetails segDet=d.getSegmentDetails();\n  long sz=((d.getType() == XDMConstants.HTTP || d.getType() == XDMConstants.DASH) ? d.getSize() : 100);\n  segProgress.setValues(segDet,sz);\n}\n', '0.4166666666666667', '4', '9');
INSERT INTO `case_study` VALUES ('3844', 'createP2()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadWindow.java', 'xdm', '39', '655', '569', '-1000', '6', '0.0554', '0.0597', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', 'private void createP2(){\n  remove(prgCircle);\n  remove(lblSpeed);\n  remove(lblStat);\n  remove(segProgress);\n  remove(lblDet);\n  remove(lblETA);\n  remove(this.panel);\n  titlePanel.remove(closeBtn);\n  titlePanel.remove(minBtn);\n  JPanel p2=new JPanel(null);\n  p2.setBounds(0,60,350,190);\n  p2.setBackground(ColorResource.getDarkestBgColor());\n  txtError=new JTextArea(this.errMsg);\n  txtError.setFont(FontResource.getBigFont());\n  txtError.setEditable(false);\n  txtError.setCaretPosition(0);\n  txtError.setWrapStyleWord(true);\n  txtError.setLineWrap(true);\n  txtError.setBackground(ColorResource.getDarkestBgColor());\n  txtError.setForeground(Color.WHITE);\n  JScrollPane jsp=new JScrollPane(txtError);\n  jsp.setBounds(25,20,300,100);\n  jsp.setBorder(null);\n  CustomButton exitBtn=new CustomButton();\n  exitBtn.setText(StringResource.get(\"MSG_OK\"));\n  applyStyle(exitBtn);\n  exitBtn.setBounds(0,1,350,50);\n  exitBtn.setName(\"EXIT\");\n  JPanel panel2=new JPanel(null);\n  panel2.setBounds(0,140,350,50);\n  panel2.setBackground(Color.DARK_GRAY);\n  panel2.add(exitBtn);\n  p2.add(jsp);\n  p2.add(panel2);\n  add(p2);\n  titleLbl.setText(StringResource.get(\"MSG_FAILED\"));\n  invalidate();\n  repaint();\n}\n', '1', '6', '1');
INSERT INTO `case_study` VALUES ('3845', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadWindow.java', 'xdm', '88', '3608', '3388', '-1000', '15', '0.0389', '0.0312', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void init(){\n  setUndecorated(true);\n  try {\n    if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n      setOpacity(0.85f);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  setTitle(\"Downloading...\");\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  setSize(350,250);\n  setLocationRelativeTo(null);\n  setResizable(false);\n  getContentPane().setLayout(null);\n  getContentPane().setBackground(ColorResource.getDarkestBgColor());\n  titlePanel=new TitlePanel(null,this);\n  titlePanel.setOpaque(false);\n  titlePanel.setBounds(0,0,350,50);\n  closeBtn=new CustomButton();\n  closeBtn.setBounds(320,5,24,24);\n  closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n  closeBtn.setBackground(ColorResource.getDarkestBgColor());\n  closeBtn.setBorderPainted(false);\n  closeBtn.setFocusPainted(false);\n  closeBtn.setName(\"PAUSE\");\n  closeBtn.addActionListener(this);\n  minBtn=new CustomButton();\n  minBtn.setBounds(296,5,24,24);\n  minBtn.setIcon(ImageResource.get(\"min_btn.png\"));\n  minBtn.setBackground(ColorResource.getDarkestBgColor());\n  minBtn.setBorderPainted(false);\n  minBtn.setFocusPainted(false);\n  minBtn.setName(\"MIN\");\n  minBtn.addActionListener(this);\n  titleLbl=new JLabel(StringResource.get(\"DWN_TITLE\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(25,15,250,30);\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,55,400,2);\n  lineLbl.setOpaque(true);\n  prgCircle=new CircleProgressBar();\n  prgCircle.setValue(0);\n  prgCircle.setBounds(20,80,72,72);\n  titlePanel.add(titleLbl);\n  titlePanel.add(minBtn);\n  titlePanel.add(closeBtn);\n  lblSpeed=new JLabel(\"---\");\n  lblSpeed.setHorizontalAlignment(JLabel.CENTER);\n  lblSpeed.setBounds(15,160,80,25);\n  lblSpeed.setForeground(Color.WHITE);\n  lblStat=new JLabel(StringResource.get(\"DWN_TITLE\"));\n  lblStat.setBounds(120,85,200,25);\n  lblStat.setForeground(Color.WHITE);\n  segProgress=new SegmentPanel();\n  segProgress.setBounds(120,115,200,5);\n  lblDet=new JLabel(StringResource.get(\"DWN_PLACEHOLDER\"));\n  lblDet.setBounds(120,125,200,25);\n  lblDet.setForeground(Color.WHITE);\n  lblETA=new JLabel(\"---\");\n  lblETA.setBounds(120,150,200,25);\n  lblETA.setForeground(Color.WHITE);\n  panel=new JPanel(null);\n  panel.setBounds(0,200,350,50);\n  panel.setBackground(Color.DARK_GRAY);\n  CustomButton btnMore=new CustomButton(StringResource.get(\"DWN_HIDE\"));\n  CustomButton btnCN=new CustomButton(StringResource.get(\"MENU_PAUSE\"));\n  btnMore.setBounds(0,1,175,50);\n  btnMore.setName(\"BACKGROUND\");\n  applyStyle(btnMore);\n  btnCN.setBounds(176,1,175,50);\n  btnCN.setName(\"PAUSE\");\n  applyStyle(btnCN);\n  add(titlePanel);\n  add(lineLbl);\n  add(prgCircle);\n  add(lblSpeed);\n  add(lblStat);\n  add(segProgress);\n  add(lblDet);\n  add(lblETA);\n  panel.add(btnMore);\n  panel.add(btnCN);\n  add(panel);\n}\n', '0.8181818181818182', '4', '3');
INSERT INTO `case_study` VALUES ('3846', 'applyStyle(CustomButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadWindow.java', 'xdm', '11', '19', '0', '-1000', '3', '0.2545', '0.3704', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'void applyStyle(CustomButton btn){\n  btn.addActionListener(this);\n  btn.setBackground(ColorResource.getDarkestBgColor());\n  btn.setForeground(Color.WHITE);\n  btn.setPressedBackground(ColorResource.getDarkerBgColor());\n  btn.setFont(FontResource.getBigFont());\n  btn.setBorderPainted(false);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setFocusPainted(false);\n  btn.setFocusPainted(false);\n}\n', '0.75', '1', '1');
INSERT INTO `case_study` VALUES ('3847', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadWindow.java', 'xdm', '13', '63', '48', '-1000', '8', '0.2051', '0.1984', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  String name=((JComponent)e.getSource()).getName();\n  if (\"PAUSE\".equals(name)) {\n    pause();\n  }\n else   if (\"BACKGROUND\".equals(name)) {\n    hideWnd();\n  }\n else   if (\"PREVIEW\".equals(name)) {\n    openPreviewFolder();\n  }\n else   if (\"MIN\".equals(name)) {\n    this.setExtendedState(this.getExtendedState() | JFrame.ICONIFIED);\n  }\n else   if (\"EXIT\".equals(name)) {\n    dispose();\n  }\n}\n', '0', '2', '6');
INSERT INTO `case_study` VALUES ('3851', 'showErrorMsg(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\DownloadWindow.java', 'xdm', '18', '125', '97', '-1000', '4', '0.4444', '0.2593', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private void showErrorMsg(int code){\nswitch (code) {\ncase XDMConstants.ERR_CONN_FAILED:\n    txtError.setText(StringResource.get(\"ERR_CONN_FAILED\"));\n  return;\ncase XDMConstants.ERR_SESSION_FAILED:\ntxtError.setText(StringResource.get(\"ERR_SESSION_FAILED\"));\nreturn;\ncase XDMConstants.ERR_NO_RESUME:\ntxtError.setText(StringResource.get(\"ERR_NO_RESUME\"));\nreturn;\ncase XDMConstants.ERR_INVALID_RESP:\ntxtError.setText(StringResource.get(\"ERR_INVALID_RESP\"));\nreturn;\ncase XDMConstants.ERR_ASM_FAILED:\ntxtError.setText(StringResource.get(\"ERR_ASM_FAILED\"));\nreturn;\ncase XDMConstants.RESUME_FAILED:\ntxtError.setText(StringResource.get(\"RESUME_FAILED\"));\nreturn;\ncase XDMConstants.DISK_FAIURE:\ntxtError.setText(StringResource.get(\"ERR_DISK_FAILED\"));\nreturn;\ndefault :\ntxtError.setText(StringResource.get(\"ERR_INTERNAL\"));\nreturn;\n}\n}\n', '1', '1', '8');
INSERT INTO `case_study` VALUES ('3853', 'progress(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\FFmpegExtractorWnd.java', 'xdm', '13', '64', '50', '-1000', '4', '0.1692', '0.0779', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void progress(int progress){\n  if (progress >= prg.getMinimum() && progress <= prg.getMaximum()) {\n    prg.setValue(progress);\n  }\n  int prgDiff=progress - lastProgress;\n  long now=System.currentTimeMillis();\n  long timeSpend=now - prevTime;\n  if (timeSpend > 0) {\n    if (prgDiff > 0) {\n      long eta=(timeSpend * (100 - progress) / 1000 * prgDiff);\n      lastProgress=progress;\n      statLbl.setText(\"ETA: \" + FormatUtilities.hms((int)eta));\n    }\n    prevTime=now;\n  }\n}\n', '1', '5', '5');
INSERT INTO `case_study` VALUES ('3854', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\FFmpegExtractorWnd.java', 'xdm', '9', '26', '16', '-1000', '5', '0.3704', '0.2424', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (e.getSource() instanceof JComponent) {\n    String name=((JComponent)e.getSource()).getName();\n    if (name == null) {\n      return;\n    }\n    if (name.equals(\"CLOSE\")) {\n      stop();\n    }\n    if (name.equals(\"MIN\")) {\n      this.setExtendedState(this.getExtendedState() | JFrame.ICONIFIED);\n    }\n  }\n}\n', '0', '2', '5');
INSERT INTO `case_study` VALUES ('3855', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\FFmpegExtractorWnd.java', 'xdm', '61', '1664', '1498', '-1000', '10', '0.0516', '0.0455', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void init(){\n  setUndecorated(true);\n  try {\n    if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n      setOpacity(0.85f);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  setSize(350,200);\n  setLocationRelativeTo(null);\n  setResizable(false);\n  getContentPane().setLayout(null);\n  getContentPane().setBackground(ColorResource.getDarkestBgColor());\n  titlePanel=new TitlePanel(null,this);\n  titlePanel.setOpaque(false);\n  titlePanel.setBounds(0,0,350,50);\n  closeBtn=new CustomButton();\n  closeBtn.setBounds(320,5,24,24);\n  closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n  closeBtn.setBackground(ColorResource.getDarkestBgColor());\n  closeBtn.setBorderPainted(false);\n  closeBtn.setFocusPainted(false);\n  closeBtn.setName(\"CLOSE\");\n  closeBtn.addActionListener(this);\n  minBtn=new CustomButton();\n  minBtn.setBounds(296,5,24,24);\n  minBtn.setIcon(ImageResource.get(\"min_btn.png\"));\n  minBtn.setBackground(ColorResource.getDarkestBgColor());\n  minBtn.setBorderPainted(false);\n  minBtn.setFocusPainted(false);\n  minBtn.setName(\"MIN\");\n  minBtn.addActionListener(this);\n  titleLbl=new JLabel(StringResource.get(\"TITLE_CONVERT\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(25,15,250,30);\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,55,400,2);\n  lineLbl.setOpaque(true);\n  prg=new JProgressBar();\n  prg.setBounds(20,85,350 - 40,5);\n  statLbl=new JLabel();\n  statLbl.setForeground(Color.WHITE);\n  statLbl.setBounds(20,100,350 - 40,25);\n  titlePanel.add(titleLbl);\n  titlePanel.add(minBtn);\n  titlePanel.add(closeBtn);\n  add(lineLbl);\n  add(titlePanel);\n  add(prg);\n  add(statLbl);\n  panel=new JPanel(null);\n  panel.setBounds(0,150,350,50);\n  panel.setBackground(Color.DARK_GRAY);\n  btnCN=new CustomButton(StringResource.get(\"MENU_PAUSE\"));\n  btnCN.setBounds(0,1,350,50);\n  btnCN.setName(\"CLOSE\");\n  applyStyle(btnCN);\n  panel.add(btnCN);\n  add(panel);\n}\n', '0.875', '2', '3');
INSERT INTO `case_study` VALUES ('3856', 'applyStyle(CustomButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\FFmpegExtractorWnd.java', 'xdm', '11', '19', '0', '-1000', '3', '0.2545', '0.3704', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void applyStyle(CustomButton btn){\n  btn.addActionListener(this);\n  btn.setBackground(ColorResource.getDarkestBgColor());\n  btn.setForeground(Color.WHITE);\n  btn.setPressedBackground(ColorResource.getDarkerBgColor());\n  btn.setFont(FontResource.getBigFont());\n  btn.setBorderPainted(false);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setFocusPainted(false);\n  btn.setFocusPainted(false);\n}\n', '0.75', '1', '1');
INSERT INTO `case_study` VALUES ('3858', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\FFmpegExtractorWnd.java', 'xdm', '8', '24', '20', '-1000', '5', '0.25', '0.14', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private void stop(){\n  try {\n    if (callback != null) {\n      callback.stop();\n      callback=null;\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  dispose();\n}\n', '1', '1', '3');
INSERT INTO `case_study` VALUES ('3859', 'LayeredPanel(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\LayeredPanel.java', 'xdm', '9', '33', '30', '-1000', '7', '0.1556', '0.0769', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public LayeredPanel(int opacity){\n  bgColor=new Color(0,0,0,opacity);\n  setOpaque(false);\n  setLayout(null);\n  MouseInputAdapter ma=new MouseInputAdapter(){\n  }\n;\n  addMouseListener(ma);\n  addMouseMotionListener(ma);\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('3861', 'MainWindow()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '8', '28', '28', '-1000', '8', '0.125', '0', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public MainWindow(){\n  setTitle(StringResource.get(\"WINDOW_TITLE\"));\n  setWindowSizeAndPosition();\n  initWindow();\n  if (Config.getInstance().isFirstRun()) {\n    SettingsPage.getInstance().showPanel(this,\"BTN_MONITORING\");\n  }\n  showNotification();\n}\n', '0.6', '0', '2');
INSERT INTO `case_study` VALUES ('3862', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '110', '5411', '4827', '-1000', '15', '0.0381', '0.0562', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', '@Override public void actionPerformed(ActionEvent e){\n  popSort.show(btnSort,0,btnSort.getHeight());\n}\n', '0.37037037037037035', '27', '68');
INSERT INTO `case_study` VALUES ('3863', 'updateSidePanel(JLabel)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '9', '35', '34', '-1000', '5', '0.1333', '0.0167', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void updateSidePanel(JLabel lbl){\n  for (int i=0; i < lblCatArr.length; i++) {\n    if (lbl == lblCatArr[i]) {\n      lblCatArr[i].setBackground(ColorResource.getActiveTabColor());\n      lblCatArr[i].setOpaque(true);\n    }\n else {\n      lblCatArr[i].setOpaque(false);\n    }\n  }\n  lv.refresh();\n  sp.repaint();\n}\n', '1', '2', '3');
INSERT INTO `case_study` VALUES ('3865', 'createToolbar()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '27', '224', '97', '-1000', '6', '0.1254', '0.2067', '0', '0', '0', '0', '0', '1', '1', '0', '0', '1', 'private JPanel createToolbar(){\n  JPanel p=new JPanel(new BorderLayout());\n  Box toolBox=Box.createHorizontalBox();\n  toolBox.add(Box.createRigidArea(new Dimension(20,60)));\n  toolBox.setBackground(ColorResource.getTitleColor());\n  toolBox.setOpaque(true);\n  toolBox.add(createToolButton(\"ADD_URL\",\"tool_add.png\"));\n  toolBox.add(Box.createRigidArea(new Dimension(10,10)));\n  toolBox.add(createToolButton(\"DELETE\",\"tool_del.png\"));\n  toolBox.add(Box.createRigidArea(new Dimension(10,10)));\n  toolBox.add(createToolButton(\"PAUSE\",\"tool_pause.png\"));\n  toolBox.add(Box.createRigidArea(new Dimension(10,10)));\n  toolBox.add(createToolButton(\"RESUME\",\"tool_resume.png\"));\n  toolBox.add(Box.createRigidArea(new Dimension(10,10)));\n  toolBox.add(createToolButton(\"OPTIONS\",\"tool_settings.png\"));\n  toolBox.add(Box.createHorizontalGlue());\n  JLabel btnMonitoring=new JLabel(ImageResource.get(\"on.png\"));\n  btnMonitoring.setIconTextGap(15);\n  btnMonitoring.putClientProperty(\"xdmbutton.norollover\",\"true\");\n  btnMonitoring.setName(\"BROWSER_MONITORING\");\n  btnMonitoring.setText(StringResource.get(\"BROWSER_MONITORING\"));\n  btnMonitoring.setHorizontalTextPosition(JButton.LEADING);\n  btnMonitoring.setFont(FontResource.getBigFont());\n  btnMonitoring.setIcon(Config.getInstance().isBrowserMonitoringEnabled() ? ImageResource.get(\"on.png\") : ImageResource.get(\"off.png\"));\n  btnMonitoring.addMouseListener(new MouseAdapter(){\n    @Override public void mouseReleased(    MouseEvent e){\n      toggleMonitoring((JLabel)e.getSource());\n    }\n  }\n);\n  toolBox.add(btnMonitoring);\n  toolBox.add(Box.createRigidArea(new Dimension(25,10)));\n  p.add(toolBox);\n  return p;\n}\n', '0.8333333333333334', '4', '2');
INSERT INTO `case_study` VALUES ('3867', 'createToolButton(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '11', '19', '0', '-1000', '3', '0.2545', '0.3704', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JButton createToolButton(String name,String icon){\n  CustomButton btn=new CustomButton(ImageResource.get(icon));\n  btn.setPressedBackground(ColorResource.getDarkPressedColor());\n  btn.setRolloverBackground(Color.DARK_GRAY);\n  btn.setBorderPainted(false);\n  btn.addActionListener(this);\n  btn.setName(name);\n  btn.setBackground(ColorResource.getTitleColor());\n  btn.setMargin(new Insets(0,0,0,0));\n  return btn;\n}\n', '0.5', '3', '1');
INSERT INTO `case_study` VALUES ('3868', 'createSidePanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '23', '247', '241', '-1000', '9', '0.0683', '0.0225', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private SidePanel createSidePanel(){\n  sp=new SidePanel();\n  sp.setLayout(null);\n  sp.setPreferredSize(new Dimension(150,250));\n  lblCatArr=new JLabel[6];\n  lblCatArr[0]=createCategoryLabel(\"CAT_ALL\");\n  lblCatArr[1]=createCategoryLabel(\"CAT_DOCUMENTS\");\n  lblCatArr[2]=createCategoryLabel(\"CAT_COMPRESSED\");\n  lblCatArr[3]=createCategoryLabel(\"CAT_MUSIC\");\n  lblCatArr[4]=createCategoryLabel(\"CAT_VIDEOS\");\n  lblCatArr[5]=createCategoryLabel(\"CAT_PROGRAMS\");\n  lblCatArr[0].setBackground(ColorResource.getActiveTabColor());\n  lblCatArr[0].setOpaque(true);\n  for (int i=0; i < 6; i++) {\n    lblCatArr[i].setBounds(0,20 + (i * 35),149,27);\n    final int c=i;\n    lblCatArr[i].addMouseListener(new MouseAdapter(){\n      public void mouseReleased(      MouseEvent e){\n        actionPerformed(new ActionEvent(lblCatArr[c],0,\"\"));\n      }\n    }\n);\n    sp.add(lblCatArr[i]);\n  }\n  return sp;\n}\n', '1', '3', '2');
INSERT INTO `case_study` VALUES ('3871', 'createMainMenu()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '58', '1477', '1301', '-1000', '16', '0.0822', '0.0692', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private void createMainMenu(){\n  JMenuBar bar=new JMenuBar();\n  bar.setBorderPainted(false);\n  bar.setForeground(ColorResource.getWhite());\n  bar.setMaximumSize(new Dimension(bar.getMaximumSize().width,30));\n  bar.setBackground(ColorResource.getTitleColor());\n  JMenu file=createMenu(StringResource.get(\"MENU_FILE\"));\n  addMenuItem(\"MENU_ADD_URL\",file);\n  addMenuItem(\"MENU_VIDEO_DWN\",file);\n  addMenuItem(\"MENU_DELETE_DWN\",file);\n  addMenuItem(\"MENU_DELETE_COMPLETED\",file);\n  addMenuItem(\"MENU_EXPORT\",file);\n  addMenuItem(\"MENU_IMPORT\",file);\n  addMenuItem(\"MENU_EXIT\",file);\n  JMenu dwn=createMenu(StringResource.get(\"MENU_DOWNLOAD\"));\n  addMenuItem(\"MENU_PAUSE\",dwn);\n  addMenuItem(\"MENU_RESUME\",dwn);\n  addMenuItem(\"MENU_RESTART\",dwn);\n  addMenuItem(\"DESC_Q_TITLE\",dwn);\n  PopupMenuListener popupListener=new PopupMenuListener(){\n    @Override public void popupMenuWillBecomeVisible(    PopupMenuEvent e){\n      loadQueueMenu(startQMenu);\n      loadQueueMenu(stopQMenu);\n    }\n    @Override public void popupMenuWillBecomeInvisible(    PopupMenuEvent e){\n    }\n    @Override public void popupMenuCanceled(    PopupMenuEvent e){\n    }\n  }\n;\n  startQMenu=addSubMenu(\"MENU_START_Q\",dwn,popupListener);\n  stopQMenu=addSubMenu(\"MENU_STOP_Q\",dwn,popupListener);\n  JMenu tools=createMenu(StringResource.get(\"MENU_TOOLS\"));\n  addMenuItem(\"MENU_OPTIONS\",tools);\n  addMenuItem(\"MENU_REFRESH_LINK\",tools);\n  addMenuItem(\"MENU_PROPERTIES\",tools);\n  addMenuItem(\"MENU_SPEED_LIMITER\",tools);\n  addMenuItem(\"MENU_LANG\",tools);\n  addMenuItem(\"MENU_BROWSER_INT\",tools);\n  JMenu help=createMenu(StringResource.get(\"MENU_HELP\"));\n  addMenuItem(\"MENU_CONTENTS\",help);\n  addMenuItem(\"MENU_HOME_PAGE\",help);\n  addMenuItem(\"MENU_UPDATE\",help);\n  addMenuItem(\"OPT_UPDATE_FFMPEG\",help);\n  addMenuItem(\"MENU_ABOUT\",help);\n  bar.add(file);\n  bar.add(dwn);\n  bar.add(tools);\n  bar.add(help);\n  Box menuBox=Box.createHorizontalBox();\n  menuBox.add(Box.createHorizontalGlue());\n  menuBox.add(bar);\n  menuBox.add(Box.createHorizontalStrut(30));\n  getTitlePanel().add(menuBox);\n}\n', '0.75', '11', '1');
INSERT INTO `case_study` VALUES ('3872', 'createMenu(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '8', '18', '8', '-1000', '4', '0.25', '0.2', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private JMenu createMenu(String title){\n  JMenu menu=new JMenu(title);\n  menu.setFont(FontResource.getBoldFont());\n  menu.setBorderPainted(false);\n  menu.setBorder(new EmptyBorder(5,5,5,5));\n  return menu;\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('3873', 'addMenuItem(String,JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '8', '18', '8', '-1000', '4', '0.225', '0.16', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void addMenuItem(String id,JComponent menu){\n  JMenuItem mitem=new JMenuItem(StringResource.get(id));\n  mitem.setName(id);\n  mitem.setFont(FontResource.getNormalFont());\n  mitem.addActionListener(this);\n  menu.add(mitem);\n}\n', '1', '3', '1');
INSERT INTO `case_study` VALUES ('3874', 'addSubMenu(String,JMenu,PopupMenuListener)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '12', '38', '10', '-1000', '5', '0.1806', '0.2306', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', 'private JMenu addSubMenu(String id,JMenu parentMenu,PopupMenuListener popupListener){\n  JMenu menu=new JMenu(StringResource.get(id));\n  menu.setName(id);\n  menu.setFont(FontResource.getNormalFont());\n  menu.addActionListener(this);\n  menu.setBorderPainted(false);\n  menu.getPopupMenu().addPopupMenuListener(popupListener);\n  parentMenu.add(menu);\n  return menu;\n}\n', '1', '4', '1');
INSERT INTO `case_study` VALUES ('3875', 'createCategoryLabel(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '8', '13', '0', '-1000', '3', '0.2813', '0.3148', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JLabel createCategoryLabel(String name){\n  JLabel lblCat=new JLabel(StringResource.get(name));\n  lblCat.setName(name);\n  lblCat.setFont(FontResource.getBigFont());\n  lblCat.setForeground(Color.BLACK);\n  lblCat.setBorder(new EmptyBorder(5,20,5,5));\n  return lblCat;\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('3876', 'createSearchPane()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '63', '1713', '1473', '-1000', '2', '0.0628', '0.0658', '0', '1', '1', '1', '0', '0', '1', '1', '1', '1', 'private Component createSearchPane(){\n  btnSort=new CustomButton(\"Newest on top\");\n  btnSort.setBackground(ColorResource.getActiveTabColor());\n  btnSort.setBorderPainted(false);\n  btnSort.setFocusPainted(false);\n  btnSort.setContentAreaFilled(false);\n  btnSort.setFont(FontResource.getNormalFont());\n  txtSearch=new JTextField();\n  txtSearch.setBackground(Color.WHITE);\n  txtSearch.setForeground(Color.BLACK);\n  txtSearch.setBorder(null);\n  txtSearch.setName(\"BTN_SEARCH\");\n  txtSearch.addActionListener(this);\n  final CustomButton btnSearch=new CustomButton();\n  btnSearch.setName(\"BTN_SEARCH\");\n  btnSearch.setRolloverBackground(Color.WHITE);\n  btnSearch.setPressedBackground(Color.WHITE);\n  btnSearch.addActionListener(this);\n  btnSearch.setPreferredSize(new Dimension(20,20));\n  btnSearch.setBackground(Color.WHITE);\n  btnSearch.setIcon(ImageResource.get(\"search16.png\"));\n  btnSearch.setBorderPainted(false);\n  btnSearch.setFocusPainted(false);\n  txtSearch.addActionListener(this);\n  Box b=Box.createHorizontalBox();\n  b.setOpaque(true);\n  b.setBackground(Color.WHITE);\n  b.setPreferredSize(new Dimension(130,20));\n  b.setMaximumSize(new Dimension(130,20));\n  txtSearch.setPreferredSize(new Dimension(70,20));\n  txtSearch.setMaximumSize(new Dimension(txtSearch.getMaximumSize().width,20));\n  b.add(txtSearch);\n  b.add(btnSearch);\n  b.setBorder(new LineBorder(Color.LIGHT_GRAY,1));\n  Box bp=Box.createHorizontalBox();\n  bp.setOpaque(false);\n  bp.setBorder(new EmptyBorder(3,3,3,10));\n  bp.add(Box.createHorizontalGlue());\n  bp.add(btnSort);\n  bp.add(Box.createHorizontalStrut(10));\n  bp.add(b);\n  bp.add(Box.createHorizontalStrut(10));\n  sortItems=new JMenuItem[6];\n  sortItems[0]=new JMenuItem(StringResource.get(\"SORT_DATE\"));\n  sortItems[0].setName(\"0\");\n  sortItems[1]=new JMenuItem(StringResource.get(\"SORT_SIZE\"));\n  sortItems[1].setName(\"1\");\n  sortItems[2]=new JMenuItem(StringResource.get(\"SORT_NAME\"));\n  sortItems[2].setName(\"2\");\n  sortItems[3]=new JMenuItem(StringResource.get(\"SORT_TYPE\"));\n  sortItems[3].setName(\"3\");\n  sortItems[4]=new JMenuItem(StringResource.get(\"SORT_ASC\"));\n  sortItems[4].setName(\"4\");\n  sortItems[5]=new JMenuItem(StringResource.get(\"SORT_DESC\"));\n  sortItems[5].setName(\"5\");\n  final JPopupMenu popSort=new JPopupMenu();\n  for (int i=0; i < sortItems.length; i++) {\n    popSort.add(sortItems[i]);\n    if (i > 3) {\n      sortItems[i].putClientProperty(\"bgColor\",ColorResource.getDarkBgColor());\n    }\n    sortItems[i].addActionListener(this);\n  }\n  updateSortMenu();\n  popSort.setInvoker(btnSort);\n  btnSort.addActionListener(new ActionListener(){\n    @Override public void actionPerformed(    ActionEvent e){\n      popSort.show(btnSort,0,btnSort.getHeight());\n    }\n  }\n);\n  return bp;\n}\n', '0.625', '7', '3');
INSERT INTO `case_study` VALUES ('3878', 'updateSortMenu()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '12', '43', '20', '-1000', '2', '0.3333', '0.1919', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void updateSortMenu(){\n  for (int i=0; i < sortItems.length; i++) {\n    if (i >= 0 && i <= 3) {\n      if (i == Config.getInstance().getSortField()) {\n        sortItems[i].setFont(FontResource.getBoldFont());\n        sortItems[i].setForeground(ColorResource.getLightFontColor());\n      }\n else {\n        sortItems[i].setFont(FontResource.getNormalFont());\n        sortItems[i].setForeground(ColorResource.getDeepFontColor());\n      }\n    }\n  }\n  sortItems[4].setFont(Config.getInstance().getSortAsc() ? FontResource.getBoldFont() : FontResource.getNormalFont());\n  sortItems[4].setForeground(Config.getInstance().getSortAsc() ? ColorResource.getLightFontColor() : ColorResource.getDeepFontColor());\n  sortItems[5].setFont((!Config.getInstance().getSortAsc()) ? FontResource.getBoldFont() : FontResource.getNormalFont());\n  sortItems[5].setForeground((!Config.getInstance().getSortAsc()) ? ColorResource.getLightFontColor() : ColorResource.getDeepFontColor());\n}\n', '0.42857142857142855', '1', '9');
INSERT INTO `case_study` VALUES ('3879', 'createTabs()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '33', '443', '358', '-1000', '3', '0.0909', '0.0721', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void createTabs(){\n  CustomButton btnAllTab=new CustomButton(StringResource.get(\"ALL_DOWNLOADS\")), btnIncompleteTab=new CustomButton(StringResource.get(\"ALL_UNFINISHED\")), btnCompletedTab=new CustomButton(StringResource.get(\"ALL_FINISHED\"));\n  btnTabArr=new CustomButton[3];\n  btnTabArr[0]=btnAllTab;\n  btnTabArr[0].setName(\"ALL_DOWNLOADS\");\n  btnTabArr[1]=btnIncompleteTab;\n  btnTabArr[1].setName(\"ALL_UNFINISHED\");\n  btnTabArr[2]=btnCompletedTab;\n  btnTabArr[2].setName(\"ALL_FINISHED\");\n  for (int i=0; i < 3; i++) {\n    btnTabArr[i].setFont(FontResource.getBigBoldFont());\n    btnTabArr[i].setBorderPainted(false);\n    btnTabArr[i].setFocusPainted(false);\n    btnTabArr[i].addActionListener(this);\n  }\n  btnAllTab.setBackground(ColorResource.getActiveTabColor());\n  btnAllTab.setForeground(ColorResource.getDarkBgColor());\n  btnIncompleteTab.setBackground(ColorResource.getTitleColor());\n  btnIncompleteTab.setForeground(ColorResource.getDeepFontColor());\n  btnCompletedTab.setBackground(ColorResource.getTitleColor());\n  btnCompletedTab.setForeground(ColorResource.getDeepFontColor());\n  JPanel pp=new JPanel(new BorderLayout());\n  pp.setOpaque(false);\n  JPanel p=new JPanel(new GridLayout(1,3,5,0));\n  p.setOpaque(false);\n  Dimension d=new Dimension(380,30);\n  p.setPreferredSize(d);\n  p.setMaximumSize(d);\n  p.setMinimumSize(d);\n  p.setBackground(Color.WHITE);\n  p.add(btnAllTab);\n  p.add(btnIncompleteTab);\n  p.add(btnCompletedTab);\n  pp.add(p,BorderLayout.EAST);\n  getTitlePanel().add(pp,BorderLayout.SOUTH);\n}\n', '0.625', '7', '2');
INSERT INTO `case_study` VALUES ('3880', 'tabClicked(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '8', '21', '14', '-1000', '3', '0.2917', '0.2407', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private void tabClicked(ActionEvent e){\n  for (int i=0; i < 3; i++) {\n    if (btnTabArr[i] == e.getSource()) {\n      btnTabArr[i].setBackground(ColorResource.getActiveTabColor());\n      btnTabArr[i].setForeground(ColorResource.getDarkBgColor());\n    }\n else {\n      btnTabArr[i].setBackground(ColorResource.getTitleColor());\n      btnTabArr[i].setForeground(ColorResource.getDeepFontColor());\n    }\n  }\n}\n', '0.25', '2', '3');
INSERT INTO `case_study` VALUES ('3881', 'initWindow()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '36', '550', '470', '-1000', '10', '0.0741', '0.0784', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', 'private void initWindow(){\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  JLabel lblTitle=new JLabel(StringResource.get(\"WINDOW_TITLE\"));\n  lblTitle.setBorder(new EmptyBorder(20,20,0,0));\n  lblTitle.setFont(FontResource.getBiggestFont());\n  lblTitle.setForeground(ColorResource.getWhite());\n  getTitlePanel().add(lblTitle,BorderLayout.WEST);\n  createTabs();\n  createMainMenu();\n  BarPanel bp=new BarPanel();\n  bp.setLayout(new BorderLayout());\n  bp.add(Box.createRigidArea(new Dimension(0,30)));\n  bp.add(createSearchPane(),BorderLayout.EAST);\n  JPanel panCenter=new JPanel(new BorderLayout());\n  panCenter.setBackground(Color.WHITE);\n  panCenter.add(bp,BorderLayout.NORTH);\n  JPanel pClient=new JPanel(new BorderLayout());\n  pClient.add(panCenter);\n  pClient.add(createSidePanel(),BorderLayout.WEST);\n  toolbar=createToolbar();\n  pClient.add(toolbar,BorderLayout.SOUTH);\n  add(pClient);\n  sortStatusText=new String[4][2];\n  sortStatusText[0][0]=StringResource.get(\"SORT_DATE_DESC\");\n  sortStatusText[0][1]=StringResource.get(\"SORT_DATE_ASC\");\n  sortStatusText[1][0]=StringResource.get(\"SORT_SIZE_DESC\");\n  sortStatusText[1][1]=StringResource.get(\"SORT_SIZE_ASC\");\n  sortStatusText[2][0]=StringResource.get(\"SORT_NAME_DESC\");\n  sortStatusText[2][1]=StringResource.get(\"SORT_NAME_ASC\");\n  sortStatusText[3][0]=StringResource.get(\"SORT_TYPE_DESC\");\n  sortStatusText[3][1]=StringResource.get(\"SORT_TYPE_ASC\");\n  setMenuActionListener(this);\n  lv=new DownloadListView(panCenter);\n  filter();\n  createPopupMenu();\n}\n', '0.7777777777777778', '4', '1');
INSERT INTO `case_study` VALUES ('3883', 'stopQueue(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '9', '30', '24', '-1000', '3', '0.2222', '0.101', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void stopQueue(String name){\n  String queueId=\"\";\n  String[] arr=name.split(\":\");\n  if (arr.length > 1) {\n    queueId=arr[1].trim();\n  }\n  DownloadQueue q=XDMApp.getInstance().getQueueById(queueId);\n  if (q != null) {\n    q.stop();\n  }\n}\n', '0.6666666666666666', '4', '3');
INSERT INTO `case_study` VALUES ('3884', 'startQueue(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '9', '30', '24', '-1000', '3', '0.2222', '0.101', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void startQueue(String name){\n  String queueId=\"\";\n  String[] arr=name.split(\":\");\n  if (arr.length > 1) {\n    queueId=arr[1].trim();\n  }\n  DownloadQueue q=XDMApp.getInstance().getQueueById(queueId);\n  if (q != null) {\n    q.start();\n  }\n}\n', '0.6666666666666666', '4', '3');
INSERT INTO `case_study` VALUES ('3885', 'loadQueueMenu(JMenu)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '6', '9', '3', '-1000', '3', '0.6667', '0.4286', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'private void loadQueueMenu(JMenu menu){\n  if (menu.getName().equals(\"MENU_START_Q\")) {\n    loadStartQueueMenu(menu);\n  }\n else   if (menu.getName().equals(\"MENU_STOP_Q\")) {\n    loadStopQueueMenu(menu);\n  }\n}\n', '0', '1', '3');
INSERT INTO `case_study` VALUES ('3886', 'loadStopQueueMenu(JMenu)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '12', '49', '32', '-1000', '3', '0.1875', '0.1051', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void loadStopQueueMenu(JMenu menu){\n  menu.removeAll();\n  ArrayList<DownloadQueue> queues=XDMApp.getInstance().getQueueList();\n  for (int i=0; i < queues.size(); i++) {\n    DownloadQueue q=queues.get(i);\n    if (q.isRunning()) {\n      JMenuItem mitem=new JMenuItem(q.getName());\n      mitem.setForeground(ColorResource.getLightFontColor());\n      mitem.setName(\"STOP:\" + q.getQueueId());\n      mitem.addActionListener(this);\n      menu.add(mitem);\n    }\n  }\n}\n', '0.5', '5', '3');
INSERT INTO `case_study` VALUES ('3887', 'loadStartQueueMenu(JMenu)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '12', '49', '32', '-1000', '3', '0.1875', '0.1051', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void loadStartQueueMenu(JMenu menu){\n  menu.removeAll();\n  ArrayList<DownloadQueue> queues=XDMApp.getInstance().getQueueList();\n  for (int i=0; i < queues.size(); i++) {\n    DownloadQueue q=queues.get(i);\n    if (!q.isRunning()) {\n      JMenuItem mitem=new JMenuItem(q.getName());\n      mitem.setForeground(ColorResource.getLightFontColor());\n      mitem.setName(\"START:\" + q.getQueueId());\n      mitem.addActionListener(this);\n      menu.add(mitem);\n    }\n  }\n}\n', '0.5', '5', '3');
INSERT INTO `case_study` VALUES ('3888', 'createPopupMenu()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '25', '203', '106', '-1000', '3', '0.1077', '0.2267', '0', '0', '0', '0', '0', '0', '1', '0', '0', '1', 'private void createPopupMenu(){\n  popupCtx=new JPopupMenu();\n  addMenuItem(\"CTX_OPEN_FILE\",popupCtx);\n  addMenuItem(\"CTX_OPEN_FOLDER\",popupCtx);\n  addMenuItem(\"CTX_SAVE_AS\",popupCtx);\n  addMenuItem(\"MENU_PAUSE\",popupCtx);\n  addMenuItem(\"MENU_RESUME\",popupCtx);\n  addMenuItem(\"MENU_DELETE_DWN\",popupCtx);\n  addMenuItem(\"MENU_REFRESH_LINK\",popupCtx);\n  addMenuItem(\"CTX_COPY_URL\",popupCtx);\n  addMenuItem(\"CTX_COPY_FILE\",popupCtx);\n  convertMenu=createMenu(StringResource.get(\"OPT_CONVERT\"));\n  convertMenu.setBorder(new EmptyBorder(5,10,5,5));\n  convertMenu.setFont(FontResource.getNormalFont());\n  MediaFormat[] fmts=MediaFormats.getSupportedFormats();\n  for (int i=1; i < fmts.length; i++) {\n    MediaFormat fmt=fmts[i];\n    JMenuItem mitem=new JMenuItem(fmt.toString());\n    mitem.setName(\"FORMAT=\" + i);\n    mitem.addActionListener(this);\n    convertMenu.add(mitem);\n  }\n  popupCtx.add(convertMenu);\n  addMenuItem(\"MENU_PROPERTIES\",popupCtx);\n  popupCtx.setInvoker(lv.getTable());\n  lv.getTable().addMouseListener(new MouseAdapter(){\n    @Override public void mouseReleased(    MouseEvent me){\n      if (me.getButton() == MouseEvent.BUTTON3 || SwingUtilities.isRightMouseButton(me) || me.isPopupTrigger() || isMacPopupTrigger(me)) {\n        Point p=me.getPoint();\n        JTable tbl=lv.getTable();\n        if (tbl.getRowCount() < 1)         return;\n        if (tbl.getSelectedRow() < 0) {\n          int row=tbl.rowAtPoint(p);\n          if (row >= 0) {\n            tbl.setRowSelectionInterval(row,row);\n          }\n        }\n        if (tbl.getSelectedRows().length > 0) {\n          popupCtx.show(lv.getTable(),me.getX(),me.getY());\n        }\n      }\n    }\n  }\n);\n}\n', '1', '9', '5');
INSERT INTO `case_study` VALUES ('3891', 'showProperties()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '26', '265', '205', '-1000', '3', '0.1058', '0.075', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private void showProperties(){\n  String[] ids=lv.getSelectedIds();\n  if (ids.length > 0) {\n    String id=ids[0];\n    DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n    if (id != null) {\n      PropertiesPage propPage=PropertiesPage.getPage(this);\n      HttpMetadata md=HttpMetadata.load(id);\n      HeaderCollection headers=md.getHeaders();\n      String referer=\"\";\n      StringBuilder cookies=new StringBuilder();\n      Iterator<HttpHeader> cookieIt=headers.getAll();\n      while (cookieIt.hasNext()) {\n        HttpHeader header=cookieIt.next();\n        if (\"referer\".equalsIgnoreCase(header.getName())) {\n          referer=header.getValue();\n        }\n        if (\"cookie\".equalsIgnoreCase(header.getName())) {\n          cookies.append(header.getValue() + \"\\n\");\n        }\n      }\n      String type=\"HTTP\";\n      if (md instanceof DashMetadata) {\n        type=\"DASH\";\n      }\n else       if (md instanceof HlsMetadata) {\n        type=\"HLS\";\n      }\n else       if (md instanceof HdsMetadata) {\n        type=\"HDS\";\n      }\n      propPage.setDetails(ent.getFile(),ent.getFolder(),ent.getSize(),md.getUrl(),referer,ent.getDateStr(),cookies.toString(),type);\n      propPage.showPanel();\n    }\n  }\n}\n', '0.5', '11', '9');
INSERT INTO `case_study` VALUES ('3892', 'openRefreshPage()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '14', '79', '67', '-1000', '4', '0.125', '0.0541', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'public void openRefreshPage(){\n  String[] ids=lv.getSelectedIds();\n  if (ids.length > 0) {\n    String id=ids[0];\n    DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n    if (ent == null) {\n      return;\n    }\n    if (!(ent.getState() == XDMConstants.PAUSED || ent.getState() == XDMConstants.FAILED)) {\n      return;\n    }\n    try {\n      HttpMetadata md=HttpMetadata.load(id);\n      RefreshUrlPage rp=RefreshUrlPage.getPage(this);\n      rp.setDetails(md);\n      rp.showPanel();\n    }\n catch (    Exception e2) {\n      Logger.log(e2);\n    }\n  }\n}\n', '0.6666666666666666', '6', '6');
INSERT INTO `case_study` VALUES ('3893', 'openFile(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '11', '43', '31', '-1000', '5', '0.1616', '0.1281', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void openFile(String id){\n  DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n  if (ent != null) {\n    if (ent.getState() == XDMConstants.FINISHED) {\n      try {\n        XDMUtils.openFile(ent.getFile(),ent.getFolder());\n      }\n catch (      FileNotFoundException e) {\n        Logger.log(e);\n        MessageBox.show(this,StringResource.get(\"ERR_MSG_FILE_NOT_FOUND\"),StringResource.get(\"ERR_MSG_FILE_NOT_FOUND_MSG\"),MessageBox.OK,MessageBox.OK);\n      }\ncatch (      Exception e) {\n        Logger.log(e);\n      }\n    }\n  }\n}\n', '0.6666666666666666', '4', '5');
INSERT INTO `case_study` VALUES ('3894', 'openFolder(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '11', '43', '31', '-1000', '5', '0.1616', '0.1281', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void openFolder(String id){\n  DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n  if (ent != null) {\n    if (ent.getState() == XDMConstants.FINISHED) {\n      try {\n        XDMUtils.openFolder(ent.getFile(),ent.getFolder());\n      }\n catch (      FileNotFoundException e) {\n        Logger.log(e);\n        MessageBox.show(this,StringResource.get(\"ERR_MSG_FILE_NOT_FOUND\"),StringResource.get(\"ERR_MSG_FILE_NOT_FOUND_MSG\"),MessageBox.OK,MessageBox.OK);\n      }\ncatch (      Exception e) {\n        Logger.log(e);\n      }\n    }\n  }\n}\n', '0.6666666666666666', '4', '5');
INSERT INTO `case_study` VALUES ('3895', 'convert(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '25', '264', '228', '-1000', '6', '0.0863', '0.0416', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private void convert(String name){\n  try {\n    File inputFile=null, outputFile=null;\n    String[] ids=lv.getSelectedIds();\n    if (ids.length > 0) {\n      String id=ids[0];\n      DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n      if (ent.getState() != XDMConstants.FINISHED) {\n        return;\n      }\n      inputFile=new File(ent.getFolder(),ent.getFile());\n      if (!inputFile.exists()) {\n        System.out.println(\"Input file does not exists\");\n      }\n      int index=Integer.parseInt(name.split(\"=\")[1]);\n      MediaFormat fmt=MediaFormats.getSupportedFormats()[index];\n      String ext=fmt.getFormat();\n      String newFileName=XDMUtils.getFileNameWithoutExtension(ent.getFile()) + \".\" + ext;\n      JFileChooser jfc=new JFileChooser();\n      jfc.setSelectedFile(new File(ent.getFolder(),newFileName));\n      if (jfc.showSaveDialog(this) != JFileChooser.APPROVE_OPTION) {\n        return;\n      }\n      outputFile=jfc.getSelectedFile();\n      System.out.println(outputFile);\n      MediaConversionWnd wnd=new MediaConversionWnd(inputFile,outputFile,fmt,-1);\n      wnd.setVisible(true);\n      wnd.convert();\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n}\n', '0.6666666666666666', '13', '6');
INSERT INTO `case_study` VALUES ('3897', 'changeFile(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '11', '36', '17', '-1000', '3', '0.2159', '0.1488', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void changeFile(String id){\n  DownloadEntry ent=XDMApp.getInstance().getEntry(id);\n  if (ent == null)   return;\n  if (ent.getState() == XDMConstants.FINISHED) {\n    return;\n  }\n  JFileChooser jfc=new JFileChooser();\n  jfc.setSelectedFile(new File(XDMApp.getInstance().getOutputFolder(id),XDMApp.getInstance().getOutputFile(id,false)));\n  if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {\n    File f=jfc.getSelectedFile();\n    ent.setFolder(f.getParent());\n    ent.setFile(f.getName());\n  }\n}\n', '0.2857142857142857', '4', '4');
INSERT INTO `case_study` VALUES ('3900', 'showNotification()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '11', '46', '37', '-1000', '6', '0.1818', '0.0852', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void showNotification(){\n  int mode=XDMApp.getInstance().getNotification();\n  if (mode == -1) {\n    clearNotification();\n    return;\n  }\n  if (updateNotifyPanel == null) {\n    updateNotifyPanel=new UpdateNotifyPanel();\n    toolbar.add(updateNotifyPanel,BorderLayout.SOUTH);\n  }\n  updateNotifyPanel.setDetails(mode);\n  revalidate();\n  repaint();\n}\n', '0.5', '1', '3');
INSERT INTO `case_study` VALUES ('3901', 'clearNotification()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MainWindow.java', 'xdm', '7', '15', '9', '-1000', '4', '0.3571', '0.25', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void clearNotification(){\n  if (updateNotifyPanel == null)   return;\n  updateNotifyPanel.setVisible(false);\n  toolbar.remove(updateNotifyPanel);\n  updateNotifyPanel=null;\n  invalidate();\n  repaint();\n}\n', '0', '0', '2');
INSERT INTO `case_study` VALUES ('3902', 'MediaConversionWnd(File,File,MediaFormat,long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaConversionWnd.java', 'xdm', '7', '21', '21', '-1000', '7', '0.1429', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public MediaConversionWnd(File input,File output,MediaFormat format,long sourceDuration){\n  this.input=input;\n  this.output=output;\n  this.format=format;\n  this.sourceDuration=sourceDuration;\n  init();\n}\n', '0', '8', '1');
INSERT INTO `case_study` VALUES ('3904', 'progress(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaConversionWnd.java', 'xdm', '13', '64', '50', '-1000', '4', '0.1692', '0.0779', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '@Override public void progress(int progress){\n  if (progress >= prg.getMinimum() && progress <= prg.getMaximum()) {\n    prg.setValue(progress);\n  }\n  int prgDiff=progress - lastProgress;\n  long now=System.currentTimeMillis();\n  long timeSpend=now - prevTime;\n  if (timeSpend > 0) {\n    if (prgDiff > 0) {\n      long eta=(timeSpend * (100 - progress) / 1000 * prgDiff);\n      lastProgress=progress;\n      statLbl.setText(\"ETA: \" + FormatUtilities.hms((int)eta));\n    }\n    prevTime=now;\n  }\n}\n', '1', '5', '5');
INSERT INTO `case_study` VALUES ('3905', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaConversionWnd.java', 'xdm', '9', '26', '16', '-1000', '5', '0.3704', '0.2424', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (e.getSource() instanceof JComponent) {\n    String name=((JComponent)e.getSource()).getName();\n    if (name == null) {\n      return;\n    }\n    if (name.equals(\"CLOSE\")) {\n      stop();\n    }\n    if (name.equals(\"MIN\")) {\n      this.setExtendedState(this.getExtendedState() | JFrame.ICONIFIED);\n    }\n  }\n}\n', '0', '2', '5');
INSERT INTO `case_study` VALUES ('3906', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaConversionWnd.java', 'xdm', '61', '1664', '1498', '-1000', '10', '0.0516', '0.0455', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void init(){\n  setUndecorated(true);\n  try {\n    if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n      setOpacity(0.85f);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  setSize(350,200);\n  setLocationRelativeTo(null);\n  setResizable(false);\n  getContentPane().setLayout(null);\n  getContentPane().setBackground(ColorResource.getDarkestBgColor());\n  titlePanel=new TitlePanel(null,this);\n  titlePanel.setOpaque(false);\n  titlePanel.setBounds(0,0,350,50);\n  closeBtn=new CustomButton();\n  closeBtn.setBounds(320,5,24,24);\n  closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n  closeBtn.setBackground(ColorResource.getDarkestBgColor());\n  closeBtn.setBorderPainted(false);\n  closeBtn.setFocusPainted(false);\n  closeBtn.setName(\"CLOSE\");\n  closeBtn.addActionListener(this);\n  minBtn=new CustomButton();\n  minBtn.setBounds(296,5,24,24);\n  minBtn.setIcon(ImageResource.get(\"min_btn.png\"));\n  minBtn.setBackground(ColorResource.getDarkestBgColor());\n  minBtn.setBorderPainted(false);\n  minBtn.setFocusPainted(false);\n  minBtn.setName(\"MIN\");\n  minBtn.addActionListener(this);\n  titleLbl=new JLabel(StringResource.get(\"TITLE_CONVERT\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(25,15,250,30);\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,55,400,2);\n  lineLbl.setOpaque(true);\n  prg=new JProgressBar();\n  prg.setBounds(20,85,350 - 40,5);\n  statLbl=new JLabel();\n  statLbl.setForeground(Color.WHITE);\n  statLbl.setBounds(20,100,350 - 40,25);\n  titlePanel.add(titleLbl);\n  titlePanel.add(minBtn);\n  titlePanel.add(closeBtn);\n  add(lineLbl);\n  add(titlePanel);\n  add(prg);\n  add(statLbl);\n  panel=new JPanel(null);\n  panel.setBounds(0,150,350,50);\n  panel.setBackground(Color.DARK_GRAY);\n  btnCN=new CustomButton(StringResource.get(\"MENU_PAUSE\"));\n  btnCN.setBounds(0,1,350,50);\n  btnCN.setName(\"CLOSE\");\n  applyStyle(btnCN);\n  panel.add(btnCN);\n  add(panel);\n}\n', '0.875', '2', '3');
INSERT INTO `case_study` VALUES ('3907', 'applyStyle(CustomButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaConversionWnd.java', 'xdm', '11', '19', '0', '-1000', '3', '0.2545', '0.3704', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void applyStyle(CustomButton btn){\n  btn.addActionListener(this);\n  btn.setBackground(ColorResource.getDarkestBgColor());\n  btn.setForeground(Color.WHITE);\n  btn.setPressedBackground(ColorResource.getDarkerBgColor());\n  btn.setFont(FontResource.getBigFont());\n  btn.setBorderPainted(false);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setFocusPainted(false);\n  btn.setFocusPainted(false);\n}\n', '0.75', '1', '1');
INSERT INTO `case_study` VALUES ('3908', 'finished(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaConversionWnd.java', 'xdm', '7', '20', '19', '-1000', '6', '0.1714', '0.0185', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'private void finished(int ret){\n  if (ret == 0) {\n    dispose();\n  }\n else {\n    prg.setVisible(false);\n    statLbl.setText(StringResource.get(\"LBL_CONV_FAILED\"));\n    btnCN.setText(StringResource.get(\"LBL_CLOSE\"));\n  }\n}\n', '1', '1', '2');
INSERT INTO `case_study` VALUES ('3909', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaConversionWnd.java', 'xdm', '8', '24', '20', '-1000', '5', '0.25', '0.14', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private void stop(){\n  try {\n    if (ffmpeg != null) {\n      ffmpeg.stop();\n      ffmpeg=null;\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  dispose();\n}\n', '1', '1', '3');
INSERT INTO `case_study` VALUES ('3912', 'initUI()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaDownloaderWnd.java', 'xdm', '101', '4724', '4398', '-1000', '15', '0.0321', '0.0347', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void initUI(){\n  setUndecorated(true);\n  try {\n    if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n      setOpacity(0.85f);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  setSize(500,420);\n  setLocationRelativeTo(null);\n  getContentPane().setLayout(null);\n  getContentPane().setBackground(ColorResource.getDarkestBgColor());\n  JPanel titlePanel=new TitlePanel(null,this);\n  titlePanel.setOpaque(false);\n  titlePanel.setBounds(0,0,getWidth(),50);\n  JButton closeBtn=new CustomButton();\n  closeBtn.setBounds(getWidth() - 35,5,30,30);\n  closeBtn.setBackground(ColorResource.getDarkestBgColor());\n  closeBtn.setBorderPainted(false);\n  closeBtn.setFocusPainted(false);\n  closeBtn.setName(\"CLOSE\");\n  closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n  closeBtn.addActionListener(this);\n  titlePanel.add(closeBtn);\n  JLabel titleLbl=new JLabel(StringResource.get(\"TITLE_DOWN_VID\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(25,15,200,30);\n  titlePanel.add(titleLbl);\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,55,getWidth(),1);\n  lineLbl.setOpaque(true);\n  add(lineLbl);\n  add(titlePanel);\n  int y=55;\n  int h=30;\n  y+=15;\n  prg=new JProgressBar();\n  prg.setIndeterminate(true);\n  prg.setBounds(15,y,getWidth() - 30,5);\n  prg.setBorder(null);\n  prg.setVisible(false);\n  add(prg);\n  txtURL=new JTextField();\n  PopupAdapter.registerTxtPopup(txtURL);\n  txtURL.setBounds(15,y,getWidth() - 30 - 110,h);\n  add(txtURL);\n  btnStart=createButton(\"BTN_SEARCH_VIDEO\");\n  btnStart.setBounds(getWidth() - 15 - 100,y,100,h);\n  btnStart.setName(\"START\");\n  add(btnStart);\n  VideoDownloadItem item1=new VideoDownloadItem();\n  item1.title=\"First item for text test\";\n  item1.desc=\"Sample description for text tesing description\";\n  h=300;\n  model=new VideoTableModel();\n  table=new JTable(model);\n  table.setRowHeight(70);\n  table.setShowGrid(false);\n  table.setOpaque(false);\n  table.setBorder(new EmptyBorder(0,0,0,0));\n  table.setShowHorizontalLines(false);\n  table.setShowVerticalLines(false);\n  table.setDefaultRenderer(YdlVideo.class,new VideoItemRenderer());\n  table.setDefaultEditor(YdlVideo.class,new VideoItemEditor());\n  table.setTableHeader(null);\n  jsp=new JScrollPane();\n  jsp.setBounds(15,y,getWidth() - 30,h);\n  jsp.setBorder(new LineBorder(ColorResource.getDarkBgColor()));\n  jsp.getViewport().setOpaque(false);\n  jsp.setViewportView(table);\n  jsp.setOpaque(false);\n  DarkScrollBar scrollBar=new DarkScrollBar(JScrollBar.VERTICAL);\n  jsp.setVerticalScrollBar(scrollBar);\n  jsp.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n  add(jsp);\n  jsp.setVisible(false);\n  y+=h;\n  y+=10;\n  h=30;\n  btnDwn=createButton(\"BTN_DOWNLOAD_NOW\");\n  btnDwn.setBounds(getWidth() - 15 - 150,y,150,h);\n  btnDwn.setName(\"DOWNLOAD\");\n  btnDwn.setVisible(false);\n  add(btnDwn);\n  btnQ=createButton(\"BTN_DOWNLOAD_LATER\");\n  btnQ.setBounds(getWidth() - 15 - 150- 160,y,150,h);\n  btnQ.setName(\"BTN_Q\");\n  add(btnQ);\n  btnQ.setVisible(false);\n  btnBack=createButton(\"BTN_BACK\");\n  btnBack.setBounds(15,y,130,h);\n  btnBack.setName(\"BACK\");\n  add(btnBack);\n  btnBack.setVisible(false);\n  addWindowListener(new WindowAdapter(){\n    @Override public void windowActivated(    WindowEvent e){\n      txtURL.requestFocus();\n    }\n  }\n);\n}\n', '0.8666666666666667', '10', '3');
INSERT INTO `case_study` VALUES ('3914', 'createButton(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaDownloaderWnd.java', 'xdm', '10', '17', '0', '-1000', '3', '0.275', '0.4205', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JButton createButton(String name){\n  JButton btn=new CustomButton(StringResource.get(name));\n  btn.setBackground(ColorResource.getDarkBtnColor());\n  btn.setBorderPainted(false);\n  btn.setFocusPainted(false);\n  btn.setForeground(Color.WHITE);\n  btn.setFont(FontResource.getNormalFont());\n  btn.addActionListener(this);\n  return btn;\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('3915', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaDownloaderWnd.java', 'xdm', '41', '764', '708', '-1000', '16', '0.064', '0.0574', '0', '0', '1', '1', '0', '1', '1', '1', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  JComponent c=(JComponent)e.getSource();\n  String name=c.getName();\n  if (\"START\".equals(name)) {\n    model.clear();\n    if (txtURL.getText().length() < 1) {\n      JOptionPane.showMessageDialog(this,StringResource.get(\"MSG_NO_URL\"));\n      return;\n    }\n    if (!XDMUtils.checkComponentsInstalled()) {\n      JOptionPane.showMessageDialog(this,StringResource.get(\"LBL_COMPONENT_MISSING\"));\n      return;\n    }\n    if (!txtURL.getText().startsWith(\"http\")) {\n      txtURL.setText(\"http://\" + txtURL.getText());\n    }\n    jsp.setVisible(false);\n    prg.setVisible(true);\n    btnDwn.setVisible(true);\n    btnDwn.setText(StringResource.get(\"BTN_STOP_PROCESSING\"));\n    btnDwn.setName(\"STOP\");\n    btnStart.setVisible(false);\n    txtURL.setVisible(false);\n    stop=false;\n    getVideoItems(txtURL.getText());\n  }\n  if (\"DOWNLOAD\".equals(name)) {\n    table.getDefaultEditor(YdlVideo.class).stopCellEditing();\n    downloadVideo();\n  }\n  if (\"CLOSE\".equals(name)) {\n    stop();\n    dispose();\n  }\n  if (\"STOP\".equals(name)) {\n    stop();\n  }\n  if (\"BACK\".equals(name)) {\n    table.getDefaultEditor(YdlVideo.class).stopCellEditing();\n    model.clear();\n    prg.setVisible(false);\n    txtURL.setVisible(true);\n    btnStart.setVisible(true);\n    btnDwn.setName(\"DOWNLOAD\");\n    btnDwn.setText(StringResource.get(\"BTN_DOWNLOAD_NOW\"));\n    btnDwn.setVisible(false);\n    btnQ.setVisible(false);\n    jsp.setVisible(false);\n    btnBack.setVisible(false);\n  }\n}\n', '1', '3', '9');
INSERT INTO `case_study` VALUES ('3916', 'stop()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaDownloaderWnd.java', 'xdm', '14', '86', '81', '-1000', '10', '0.1', '0.044', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void stop(){\n  prg.setVisible(false);\n  txtURL.setVisible(true);\n  btnStart.setVisible(true);\n  btnDwn.setName(\"DOWNLOAD\");\n  btnDwn.setText(StringResource.get(\"BTN_DOWNLOAD_NOW\"));\n  btnDwn.setVisible(false);\n  btnQ.setVisible(false);\n  jsp.setVisible(false);\n  btnBack.setVisible(false);\n  stop=true;\n  if (ydl != null) {\n    ydl.stop();\n  }\n}\n', '1', '0', '2');
INSERT INTO `case_study` VALUES ('3917', 'showVideoList()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaDownloaderWnd.java', 'xdm', '10', '42', '39', '-1000', '8', '0.1286', '0.0455', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void showVideoList(){\n  btnStart.setVisible(false);\n  txtURL.setVisible(false);\n  prg.setVisible(false);\n  jsp.setVisible(true);\n  btnDwn.setName(\"DOWNLOAD\");\n  btnDwn.setText(StringResource.get(\"BTN_DOWNLOAD_NOW\"));\n  btnDwn.setVisible(true);\n  btnBack.setVisible(true);\n}\n', '1', '0', '1');
INSERT INTO `case_study` VALUES ('3919', 'downloadVideo()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MediaDownloaderWnd.java', 'xdm', '40', '626', '472', '-1000', '3', '0.0875', '0.0724', '0', '0', '0', '1', '0', '0', '1', '1', '0', '1', 'private void downloadVideo(){\n  for (  int index : table.getSelectedRows()) {\n    YdlVideo video=(YdlVideo)model.getValueAt(index,0);\n    YdlMediaFormat fmt=video.mediaFormats.get(video.index);\n    String title=video.title;\n    System.out.println(title + \" \" + title+ fmt.type);\n    String file=XDMUtils.getFileName(title) + \".\" + fmt.ext;\nswitch (fmt.type) {\ncase YdlResponse.DASH_HTTP:\n      DashMetadata dm=new DashMetadata();\n    dm.setYdlUrl(txtURL.getText());\n  dm.setUrl(fmt.videoSegments[0]);\ndm.setUrl2(fmt.audioSegments[0]);\nfor (HttpHeader header : fmt.headers) {\ndm.getHeaders().addHeader(header);\n}\nfor (HttpHeader header : fmt.headers2) {\ndm.getHeaders2().addHeader(header);\n}\nXDMApp.getInstance().addVideo(dm,file);\nbreak;\ncase YdlResponse.HLS:\nHlsMetadata md=new HlsMetadata();\nmd.setYdlUrl(txtURL.getText());\nmd.setUrl(fmt.url);\nfor (HttpHeader header : fmt.headers) {\nmd.getHeaders().addHeader(header);\n}\nXDMApp.getInstance().addVideo(md,file);\nbreak;\ncase YdlResponse.HDS:\nHdsMetadata hm=new HdsMetadata();\nhm.setYdlUrl(txtURL.getText());\nhm.setUrl(fmt.url);\nfor (HttpHeader header : fmt.headers) {\nhm.getHeaders().addHeader(header);\n}\nXDMApp.getInstance().addVideo(hm,file);\nbreak;\ncase YdlResponse.HTTP:\nHttpMetadata ht=new HttpMetadata();\nht.setYdlUrl(txtURL.getText());\nht.setUrl(fmt.url);\nfor (HttpHeader header : fmt.headers) {\nht.getHeaders().addHeader(header);\n}\nXDMApp.getInstance().addVideo(ht,file);\nbreak;\n}\n}\n}\n', '0.5714285714285714', '14', '11');
INSERT INTO `case_study` VALUES ('3921', 'MessageBox()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MessageBox.java', 'xdm', '8', '25', '22', '-1000', '6', '0.375', '0.1667', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'private MessageBox(){\n  setLayout(null);\n  MouseInputAdapter ma=new MouseInputAdapter(){\n  }\n;\n  addMouseListener(ma);\n  addMouseMotionListener(ma);\n  init();\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('3922', 'show(XDMFrame,String,String,int,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MessageBox.java', 'xdm', '16', '42', '0', '-1000', '4', '0.1597', '0.3473', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', 'public static int show(XDMFrame parent,String title,String msg,int buttons,int defaultButton){\n  if (msgBox == null) {\n    msgBox=new MessageBox();\n  }\n  msgBox.parent=parent;\n  msgBox.lblTitle.setText(title);\n  msgBox.txtMessage.setText(msg);\n  msgBox.setLocation((parent.getWidth() - 350) / 2,(parent.getHeight() - 210) / 2);\n  if (buttons == OK_OPTION) {\n    msgBox.panel2.setVisible(false);\n    msgBox.panel3.setVisible(true);\n  }\n else {\n    msgBox.panel2.setVisible(true);\n    msgBox.panel3.setVisible(false);\n  }\n  msgBox.defaultButton=defaultButton;\n  parent.showModal(msgBox);\n  return msgBox.res;\n}\n', '1', '5', '3');
INSERT INTO `case_study` VALUES ('3923', 'selectDefaultButton()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MessageBox.java', 'xdm', '7', '17', '13', '-1000', '4', '0.2857', '0.1833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void selectDefaultButton(){\n  if (defaultButton == YES) {\n    msgBox.cbBtnYes.requestFocusInWindow();\n  }\n else   if (defaultButton == NO) {\n    msgBox.cbBtnNo.requestFocusInWindow();\n  }\n else   if (defaultButton == OK) {\n    msgBox.cbBtnOk.requestFocusInWindow();\n  }\n}\n', '0', '0', '4');
INSERT INTO `case_study` VALUES ('3927', 'applyStyle(JButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MessageBox.java', 'xdm', '13', '42', '6', '-1000', '5', '0.1868', '0.2222', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', 'void applyStyle(JButton btn){\n  btn.addActionListener(this);\n  btn.setBackground(ColorResource.getDarkerBgColor());\n  btn.setForeground(Color.WHITE);\n  btn.setFocusable(true);\n  btn.setFont(FontResource.getBigFont());\n  btn.setBorderPainted(false);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.getInputMap(WHEN_FOCUSED).put(KeyStroke.getKeyStroke(\"ENTER\"),\"pressed\");\n  btn.getInputMap(WHEN_FOCUSED).put(KeyStroke.getKeyStroke(\"released ENTER\"),\"released\");\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('3932', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\MessageBox.java', 'xdm', '10', '41', '37', '-1000', '7', '0.14', '0.0397', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (e.getSource() == cbBtnOk) {\n    res=OK;\n  }\n else   if (e.getSource() == cbBtnYes) {\n    res=YES;\n  }\n else {\n    res=NO;\n  }\n  parent.hideModal(msgBox);\n}\n', '1', '1', '3');
INSERT INTO `case_study` VALUES ('3939', 'NewDownloadWindow(HttpMetadata,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '16', '106', '92', '-1000', '8', '0.1106', '0.0494', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public NewDownloadWindow(HttpMetadata metadata,String file){\n  initUI();\n  this.folder=Config.getInstance().getDownloadFolder();\n  this.metadata=metadata;\n  if (this.metadata == null) {\n    this.metadata=new HttpMetadata();\n  }\n  if (this.metadata.getUrl() != null) {\n    txtURL.setText(this.metadata.getUrl());\n  }\n else {\n    try {\n      URL url=new URL(XDMUtils.getClipBoardText());\n      txtURL.setText(url.toString());\n    }\n catch (    Exception e) {\n      Logger.log(e);\n    }\n  }\n  if (file != null && file.length() > 0) {\n    txtFile.setText(file);\n  }\n  getRootPane().setDefaultButton(btnDN);\n  addWindowListener(new WindowAdapter(){\n    @Override public void windowActivated(    WindowEvent e){\n      txtURL.requestFocus();\n    }\n  }\n);\n  queueId=\"\";\n}\n', '0.6666666666666666', '11', '6');
INSERT INTO `case_study` VALUES ('3941', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '18', '129', '105', '-1000', '7', '0.2', '0.1256', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (e.getSource() instanceof JComponent) {\n    String name=((JComponent)e.getSource()).getName();\n    if (name.startsWith(\"QUEUE\")) {\n      String[] arr=name.split(\":\");\n      if (arr.length < 2) {\n        queueId=\"\";\n      }\n else {\n        queueId=arr[1].trim();\n      }\n      createDownload(false);\n    }\n else     if (name.equals(\"CLOSE\")) {\n      dispose();\n    }\n else     if (name.equals(\"DOWNLOAD_NOW\")) {\n      queueId=\"\";\n      createDownload(true);\n    }\n else     if (name.equals(\"BTN_MORE\")) {\n      if (pop == null) {\n        createPopup();\n      }\n      pop.show(btnMore,0,btnMore.getHeight());\n    }\n else     if (name.equals(\"BROWSE_FOLDER\")) {\n      choseFolder();\n    }\n  }\n}\n', '0', '3', '9');
INSERT INTO `case_study` VALUES ('3942', 'createDownload(boolean)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '17', '100', '64', '-1000', '5', '0.1448', '0.1361', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'private void createDownload(boolean now){\n  String urlStr=txtURL.getText();\n  if (urlStr.length() < 1) {\n    JOptionPane.showMessageDialog(this,StringResource.get(\"MSG_NO_URL\"));\n    return;\n  }\n  if (!XDMUtils.validateURL(urlStr)) {\n    urlStr=\"http://\" + urlStr;\n    if (!XDMUtils.validateURL(urlStr)) {\n      JOptionPane.showMessageDialog(this,StringResource.get(\"MSG_INVALID_URL\"));\n      return;\n    }\n else {\n      txtURL.setText(urlStr);\n    }\n  }\n  if (!urlStr.equals(metadata.getUrl())) {\n    metadata.setUrl(urlStr);\n  }\n  dispose();\n  Logger.log(\"file: \" + txtFile.getText());\n  if (txtFile.getText().length() < 1) {\n    JOptionPane.showMessageDialog(this,StringResource.get(\"MSG_NO_FILE\"));\n    return;\n  }\n  XDMApp.getInstance().createDownload(txtFile.getText(),folder,metadata,now,queueId,0,0);\n}\n', '0.7142857142857143', '2', '6');
INSERT INTO `case_study` VALUES ('3943', 'choseFolder()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '6', '11', '7', '-1000', '3', '0.25', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void choseFolder(){\n  JFileChooser jfc=XDMFileChooser.getFileChooser(JFileChooser.DIRECTORIES_ONLY,new File(folder));\n  if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {\n    folder=jfc.getSelectedFile().getAbsolutePath();\n    Config.getInstance().setDownloadFolder(folder);\n  }\n}\n', '0.6666666666666666', '1', '2');
INSERT INTO `case_study` VALUES ('3947', 'update(DocumentEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '8', '23', '18', '-1000', '4', '0.2031', '0.0722', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'void update(DocumentEvent e){\n  try {\n    Document doc=e.getDocument();\n    int len=doc.getLength();\n    String text=doc.getText(0,len);\n    txtFile.setText(XDMUtils.getFileName(text));\n  }\n catch (  Exception err) {\n    Logger.log(err);\n  }\n}\n', '1', '5', '2');
INSERT INTO `case_study` VALUES ('3948', 'initUI()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '93', '3930', '3582', '-1000', '10', '0.0477', '0.0396', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private void initUI(){\n  setUndecorated(true);\n  try {\n    if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n      setOpacity(0.85f);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  setSize(400,210);\n  setLocationRelativeTo(null);\n  setAlwaysOnTop(true);\n  getContentPane().setLayout(null);\n  getContentPane().setBackground(ColorResource.getDarkestBgColor());\n  JPanel titlePanel=new TitlePanel(null,this);\n  titlePanel.setOpaque(false);\n  titlePanel.setBounds(0,0,400,50);\n  JButton closeBtn=new CustomButton();\n  closeBtn.setBounds(365,5,30,30);\n  closeBtn.setBackground(ColorResource.getDarkestBgColor());\n  closeBtn.setBorderPainted(false);\n  closeBtn.setFocusPainted(false);\n  closeBtn.setName(\"CLOSE\");\n  closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n  closeBtn.addActionListener(this);\n  titlePanel.add(closeBtn);\n  JLabel titleLbl=new JLabel(StringResource.get(\"ND_TITLE\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(25,15,200,30);\n  titlePanel.add(titleLbl);\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,55,400,1);\n  lineLbl.setOpaque(true);\n  add(lineLbl);\n  txtURL=new JTextField();\n  PopupAdapter.registerTxtPopup(txtURL);\n  txtURL.getDocument().addDocumentListener(this);\n  txtURL.setBorder(new LineBorder(ColorResource.getSelectionColor(),1));\n  txtURL.setBackground(ColorResource.getDarkestBgColor());\n  txtURL.setForeground(Color.WHITE);\n  txtURL.setBounds(77,79,291,20);\n  txtURL.setCaretColor(ColorResource.getSelectionColor());\n  add(txtURL);\n  txtFile=new JTextField();\n  PopupAdapter.registerTxtPopup(txtFile);\n  txtFile.setBorder(new LineBorder(ColorResource.getSelectionColor(),1));\n  txtFile.setBackground(ColorResource.getDarkestBgColor());\n  txtFile.setForeground(Color.WHITE);\n  txtFile.setBounds(77,111,241,20);\n  txtFile.setCaretColor(ColorResource.getSelectionColor());\n  add(txtFile);\n  JButton browse=new CustomButton(\"...\");\n  browse.setName(\"BROWSE_FOLDER\");\n  browse.setMargin(new Insets(0,0,0,0));\n  browse.setBounds(325,111,40,20);\n  browse.setFocusPainted(false);\n  browse.setBackground(ColorResource.getDarkestBgColor());\n  browse.setBorder(new LineBorder(ColorResource.getSelectionColor(),1));\n  browse.setForeground(Color.WHITE);\n  browse.addActionListener(this);\n  browse.setFont(FontResource.getItemFont());\n  add(browse);\n  add(titlePanel);\n  JLabel lblURL=new JLabel(StringResource.get(\"ND_ADDRESS\"),JLabel.RIGHT);\n  lblURL.setFont(FontResource.getNormalFont());\n  lblURL.setForeground(Color.WHITE);\n  lblURL.setBounds(10,78,61,23);\n  add(lblURL);\n  JLabel lblFile=new JLabel(StringResource.get(\"ND_FILE\"),JLabel.RIGHT);\n  lblFile.setFont(FontResource.getNormalFont());\n  lblFile.setForeground(Color.WHITE);\n  lblFile.setBounds(10,108,61,23);\n  add(lblFile);\n  JPanel panel=new JPanel(null);\n  panel.setBounds(0,155,400,55);\n  panel.setBackground(Color.DARK_GRAY);\n  add(panel);\n  btnMore=new CustomButton(StringResource.get(\"ND_MORE\"));\n  btnDN=new CustomButton(StringResource.get(\"ND_DOWNLOAD_NOW\"));\n  btnCN=new CustomButton(StringResource.get(\"ND_CANCEL\"));\n  btnMore.setBounds(0,1,120,55);\n  btnMore.setName(\"BTN_MORE\");\n  styleButton(btnMore);\n  panel.add(btnMore);\n  btnDN.setBounds(121,1,160,55);\n  btnDN.setName(\"DOWNLOAD_NOW\");\n  styleButton(btnDN);\n  panel.add(btnDN);\n  btnCN.setBounds(282,1,120,55);\n  btnCN.setName(\"CLOSE\");\n  styleButton(btnCN);\n  panel.add(btnCN);\n}\n', '0.7272727272727273', '9', '3');
INSERT INTO `case_study` VALUES ('3949', 'createPopup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '19', '121', '71', '-1000', '4', '0.152', '0.1488', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void createPopup(){\n  pop=new JPopupMenu();\n  pop.setBackground(ColorResource.getDarkerBgColor());\n  JMenu dl=new JMenu(StringResource.get(\"ND_DOWNLOAD_LATER\"));\n  dl.setForeground(Color.WHITE);\n  dl.setBorder(new EmptyBorder(5,5,5,5));\n  dl.addActionListener(this);\n  dl.setBackground(ColorResource.getDarkerBgColor());\n  dl.setBorderPainted(false);\n  pop.add(dl);\n  createQueueItems(dl);\n  JMenuItem ig=new JMenuItem(StringResource.get(\"ND_IGNORE_URL\"));\n  ig.setName(\"IGNORE_URL\");\n  ig.setForeground(Color.WHITE);\n  ig.addActionListener(this);\n  pop.add(ig);\n  pop.setInvoker(btnMore);\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('3950', 'styleButton(CustomButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '10', '17', '0', '-1000', '3', '0.26', '0.3295', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void styleButton(CustomButton btn){\n  btn.setBackground(ColorResource.getDarkestBgColor());\n  btn.setPressedBackground(ColorResource.getDarkerBgColor());\n  btn.setForeground(Color.WHITE);\n  btn.setFont(FontResource.getBigFont());\n  btn.setBorderPainted(false);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setFocusPainted(false);\n  btn.addActionListener(this);\n}\n', '0.75', '1', '1');
INSERT INTO `case_study` VALUES ('3951', 'createQueueItems(JMenuItem)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\NewDownloadWindow.java', 'xdm', '10', '31', '17', '-1000', '3', '0.2143', '0.1477', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void createQueueItems(JMenuItem queueMenuItem){\n  ArrayList<DownloadQueue> queues=XDMApp.getInstance().getQueueList();\n  for (int i=0; i < queues.size(); i++) {\n    DownloadQueue q=queues.get(i);\n    JMenuItem mItem=new JMenuItem(q.getName().length() < 1 ? \"Default queue\" : q.getName());\n    mItem.setName(\"QUEUE:\" + q.getQueueId());\n    mItem.setForeground(Color.WHITE);\n    mItem.addActionListener(this);\n    queueMenuItem.add(mItem);\n  }\n}\n', '0.5', '5', '3');
INSERT INTO `case_study` VALUES ('3952', 'Page(String,int,XDMFrame)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\Page.java', 'xdm', '23', '213', '173', '-1000', '12', '0.0776', '0.1278', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public Page(String title,int width,XDMFrame parent){\n  setOpaque(false);\n  setLayout(null);\n  this.title=title;\n  this.width=width;\n  this.parent=parent;\n  bgColor=new Color(0,0,0,200);\n  MouseInputAdapter ma=new MouseInputAdapter(){\n  }\n;\n  addMouseListener(ma);\n  addMouseMotionListener(ma);\n  jsp=new JScrollPane();\n  jsp.setOpaque(false);\n  jsp.setBorder(null);\n  jsp.getViewport().setOpaque(false);\n  DarkScrollBar scrollBar=new DarkScrollBar(JScrollBar.VERTICAL);\n  jsp.setVerticalScrollBar(scrollBar);\n  jsp.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n  jsp.getVerticalScrollBar().setUnitIncrement(10);\n  jsp.getVerticalScrollBar().setBlockIncrement(25);\n  add(jsp);\n  registerMouseListener();\n  init();\n}\n', '1', '8', '1');
INSERT INTO `case_study` VALUES ('3953', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\Page.java', 'xdm', '9', '19', '2', '-1000', '2', '0.2083', '0.1537', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void init(){\n  y=25;\n  h=40;\n  btnNav=new JLabel(ImageResource.get(\"back24.png\"));\n  btnNav.setFont(FontResource.getBiggerFont());\n  btnNav.setForeground(ColorResource.getSelectionColor());\n  btnNav.setBounds(15,y,25,h);\n  add(btnNav);\n  btnNav.addMouseListener(new MouseAdapter(){\n    @Override public void mouseReleased(    MouseEvent e){\n      close();\n    }\n  }\n);\n  titleLbl=new JLabel(title);\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(50,y,200,h);\n  add(titleLbl);\n  y+=h;\n  y+=10;\n  h=2;\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,y,width,h);\n  lineLbl.setOpaque(true);\n  add(lineLbl);\n  y+=h;\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('3960', 'showPanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\Page.java', 'xdm', '7', '15', '9', '-1000', '4', '0.2653', '0.125', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void showPanel(){\n  int x=parent.getWidth() - width;\n  jsp.setBounds(0,y,width,parent.getHeight() - y);\n  setBounds(x,0,width,parent.getHeight());\n  parent.showDialog(this);\n  SwingUtilities.invokeLater(new Runnable(){\n    public void run(){\n      jsp.getVerticalScrollBar().setValue(0);\n    }\n  }\n);\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('3965', 'registerTxtPopup(JTextField)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\PopupAdapter.java', 'xdm', '6', '9', '3', '-1000', '3', '0.3333', '0.2381', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', 'public static void registerTxtPopup(JTextField txt){\n  if (adapter == null) {\n    adapter=new PopupAdapter();\n    adapter.init();\n  }\n  txt.addMouseListener(adapter);\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('3970', 'mouseReleased(MouseEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\PopupAdapter.java', 'xdm', '6', '9', '3', '-1000', '3', '0.3889', '0.2381', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@Override public void mouseReleased(MouseEvent e){\n  if (e.isPopupTrigger()) {\n    if (e.getSource() instanceof JTextField) {\n      this.txt=(JTextField)e.getSource();\n      popup.show(txt,e.getX(),e.getY());\n    }\n  }\n}\n', '0', '2', '3');
INSERT INTO `case_study` VALUES ('3971', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\PopupAdapter.java', 'xdm', '14', '60', '29', '-1000', '4', '0.3095', '0.3222', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (txt == null)   return;\n  System.out.println(txt);\n  String name=((JComponent)e.getSource()).getName();\n  if (\"MENU_CUT\".equals(name)) {\n    txt.cut();\n  }\n else   if (\"MENU_COPY\".equals(name)) {\n    txt.copy();\n  }\n else   if (\"MENU_SELECT_ALL\".equals(name)) {\n    txt.selectAll();\n  }\n else   if (\"MENU_PASTE\".equals(name)) {\n    txt.paste();\n  }\n  System.out.println(\"set to null\");\n  txt=null;\n}\n', '0', '2', '6');
INSERT INTO `case_study` VALUES ('3972', 'PopupNotification()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\PopupNotification.java', 'xdm', '6', '15', '15', '-1000', '6', '-1', '-1', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', 'PopupNotification(){\n  setFocusableWindowState(false);\n  setAlwaysOnTop(true);\n  add(new JButton(\"test\"));\n  setSize(300,100);\n  setVisible(true);\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('3976', 'initUI()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\PropertiesPage.java', 'xdm', '125', '6232', '4714', '-1000', '3', '0.0589', '0.0965', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', 'private void initUI(){\n  int y=0;\n  int h=0;\n  JPanel panel=new JPanel();\n  panel.setLayout(null);\n  panel.setOpaque(false);\n  y+=10;\n  h=30;\n  JLabel lblFileTitle=new JLabel(StringResource.get(\"ND_FILE\"));\n  lblFileTitle.setForeground(Color.WHITE);\n  lblFileTitle.setFont(FontResource.getNormalFont());\n  lblFileTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblFileTitle);\n  y+=h;\n  h=25;\n  txtDefFile=new JTextField();\n  txtDefFile.setBounds(15,y,350 - 50,h);\n  txtDefFile.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtDefFile.setEditable(false);\n  txtDefFile.setForeground(Color.WHITE);\n  txtDefFile.setOpaque(false);\n  panel.add(txtDefFile);\n  y+=h;\n  h=30;\n  JLabel lblFolderTitle=new JLabel(StringResource.get(\"CD_LOC\"));\n  lblFolderTitle.setForeground(Color.WHITE);\n  lblFolderTitle.setFont(FontResource.getNormalFont());\n  lblFolderTitle.setBounds(15,y,350 - 50,h);\n  panel.add(lblFolderTitle);\n  y+=h;\n  h=25;\n  txtDefFolder=new JTextField();\n  txtDefFolder.setBounds(15,y,350 - 50,h);\n  txtDefFolder.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtDefFolder.setEditable(false);\n  txtDefFolder.setForeground(Color.WHITE);\n  txtDefFolder.setOpaque(false);\n  panel.add(txtDefFolder);\n  y+=h;\n  h=30;\n  JLabel lblUrlTitle=new JLabel(StringResource.get(\"ND_ADDRESS\"));\n  lblUrlTitle.setForeground(Color.WHITE);\n  lblUrlTitle.setFont(FontResource.getNormalFont());\n  lblUrlTitle.setBounds(15,y,350 - 50,h);\n  panel.add(lblUrlTitle);\n  y+=h;\n  h=25;\n  txtUrl=new JTextField();\n  txtUrl.setBounds(15,y,350 - 50,h);\n  txtUrl.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtUrl.setEditable(false);\n  txtUrl.setForeground(Color.WHITE);\n  txtUrl.setOpaque(false);\n  panel.add(txtUrl);\n  y+=h;\n  h=30;\n  JLabel lblSizeLabel=new JLabel(StringResource.get(\"PROP_SIZE\"));\n  lblSizeLabel.setForeground(Color.WHITE);\n  lblSizeLabel.setFont(FontResource.getNormalFont());\n  lblSizeLabel.setBounds(15,y,100,h);\n  panel.add(lblSizeLabel);\n  lblSize=new JLabel();\n  lblSize.setForeground(Color.WHITE);\n  lblSize.setFont(FontResource.getNormalFont());\n  lblSize.setBounds(115,y,200,h);\n  panel.add(lblSize);\n  y+=h;\n  h=30;\n  JLabel lblDateLabel=new JLabel(StringResource.get(\"PROP_DATE\"));\n  lblDateLabel.setForeground(Color.WHITE);\n  lblDateLabel.setFont(FontResource.getNormalFont());\n  lblDateLabel.setBounds(15,y,100,h);\n  panel.add(lblDateLabel);\n  lblDate=new JLabel();\n  lblDate.setForeground(Color.WHITE);\n  lblDate.setFont(FontResource.getNormalFont());\n  lblDate.setBounds(115,y,200,h);\n  panel.add(lblDate);\n  y+=h;\n  h=30;\n  JLabel lblTypeLabel=new JLabel(StringResource.get(\"PROP_TYPE\"));\n  lblTypeLabel.setForeground(Color.WHITE);\n  lblTypeLabel.setFont(FontResource.getNormalFont());\n  lblTypeLabel.setBounds(15,y,100,h);\n  panel.add(lblTypeLabel);\n  lblType=new JLabel();\n  lblType.setForeground(Color.WHITE);\n  lblType.setFont(FontResource.getNormalFont());\n  lblType.setBounds(115,y,200,h);\n  panel.add(lblType);\n  y+=h;\n  h=30;\n  JLabel lblRefererLabel=new JLabel(StringResource.get(\"PROP_REFERER\"));\n  lblRefererLabel.setForeground(Color.WHITE);\n  lblRefererLabel.setFont(FontResource.getNormalFont());\n  lblRefererLabel.setBounds(15,y,100,h);\n  panel.add(lblRefererLabel);\n  lblReferer=new JLabel();\n  lblReferer.setForeground(Color.WHITE);\n  lblReferer.setFont(FontResource.getNormalFont());\n  lblReferer.setBounds(115,y,200,h);\n  panel.add(lblReferer);\n  y+=h;\n  h=30;\n  JLabel lblCookieTitle=new JLabel(StringResource.get(\"PROP_COOKIE\"));\n  lblCookieTitle.setForeground(Color.WHITE);\n  lblCookieTitle.setFont(FontResource.getNormalFont());\n  lblCookieTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblCookieTitle);\n  y+=h;\n  y+=10;\n  h=120;\n  txtCookie=new JTextArea();\n  txtCookie.setBounds(15,y,350 - 50,h);\n  txtCookie.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtCookie.setEditable(false);\n  txtCookie.setForeground(Color.WHITE);\n  txtCookie.setOpaque(false);\n  panel.add(txtCookie);\n  y+=h;\n  y+=50;\n  panel.setPreferredSize(new Dimension(350,y));\n  panel.setBounds(0,0,350,y);\n  jsp.setViewportView(panel);\n}\n', '1', '11', '1');
INSERT INTO `case_study` VALUES ('3977', 'QueuedItemsRenderer()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\QueuedItemsRenderer.java', 'xdm', '7', '21', '21', '-1000', '7', '0.1429', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public QueuedItemsRenderer(){\n  setForeground(Color.WHITE);\n  setFont(FontResource.getNormalFont());\n  setOpaque(true);\n  setPreferredSize(new Dimension(100,30));\n  setBorder(new EmptyBorder(0,5,0,0));\n}\n', '1', '0', '1');
INSERT INTO `case_study` VALUES ('3979', 'QueueListRenderer()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\QueueListRenderer.java', 'xdm', '7', '21', '21', '-1000', '7', '0.1429', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public QueueListRenderer(){\n  setForeground(Color.WHITE);\n  setFont(FontResource.getNormalFont());\n  setOpaque(true);\n  setPreferredSize(new Dimension(100,30));\n  setBorder(new EmptyBorder(0,5,0,0));\n}\n', '1', '0', '1');
INSERT INTO `case_study` VALUES ('3983', 'initUI()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\RefreshUrlPage.java', 'xdm', '31', '343', '221', '-1000', '2', '0.1484', '0.1363', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void initUI(){\n  int y=0;\n  int h=0;\n  JPanel panel=new JPanel();\n  panel.setLayout(null);\n  panel.setOpaque(false);\n  y+=10;\n  h=40;\n  JLabel lblMaxTitle=new JLabel(StringResource.get(\"REF_WAITING_FOR_LINK\"));\n  lblMaxTitle.setForeground(Color.WHITE);\n  lblMaxTitle.setFont(FontResource.getItemFont());\n  lblMaxTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblMaxTitle);\n  y+=h;\n  y+=10;\n  h=80;\n  lblMonitoringTitle=new JTextArea();\n  lblMonitoringTitle.setOpaque(false);\n  lblMonitoringTitle.setWrapStyleWord(true);\n  lblMonitoringTitle.setLineWrap(true);\n  lblMonitoringTitle.setEditable(false);\n  lblMonitoringTitle.setForeground(Color.WHITE);\n  lblMonitoringTitle.setFont(FontResource.getNormalFont());\n  lblMonitoringTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblMonitoringTitle);\n  y+=h;\n  btnOpenPage=createButton1(\"REF_OPEN_PAGE\",15,y);\n  btnOpenPage.setName(\"REF_OPEN_PAGE\");\n  panel.add(btnOpenPage);\n  y+=btnOpenPage.getHeight();\n  btnOpenPage.addActionListener(new ActionListener(){\n    @Override public void actionPerformed(    ActionEvent e){\n      if (!StringUtils.isNullOrEmptyOrBlank(md.getYdlUrl())) {\n        openLink();\n      }\n    }\n  }\n);\n  panel.setPreferredSize(new Dimension(350,y));\n  panel.setBounds(0,0,350,y);\n  jsp.setViewportView(panel);\n}\n', '0.8', '5', '1');
INSERT INTO `case_study` VALUES ('3986', 'createButton1(String,int,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\RefreshUrlPage.java', 'xdm', '9', '21', '6', '-1000', '4', '0.2037', '0.1944', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JButton createButton1(String name,int x,int y){\n  JButton btn=new JButton(StringResource.get(name));\n  btn.setBackground(ColorResource.getDarkBtnColor());\n  btn.setFont(FontResource.getNormalFont());\n  Dimension d=btn.getPreferredSize();\n  btn.setBounds(x,y,d.width,d.height);\n  return btn;\n}\n', '1', '5', '1');
INSERT INTO `case_study` VALUES ('3988', 'isValidLink(HttpMetadata)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\RefreshUrlPage.java', 'xdm', '38', '512', '321', '-1000', '4', '0.1507', '0.1385', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '@Override public boolean isValidLink(HttpMetadata metadata){\n  Logger.log(\"Checking refresh link with checking size \" + md.getSize());\n  if (md.getType() == metadata.getType()) {\n    if (md instanceof DashMetadata) {\n      DashMetadata dm1=(DashMetadata)md;\n      DashMetadata dm2=(DashMetadata)metadata;\n      if (dm1.getLen1() == dm2.getLen1() && dm1.getLen2() == dm2.getLen2()) {\n        dm1.setUrl(dm2.getUrl());\n        dm1.setUrl2(dm2.getUrl2());\n        dm1.setHeaders(dm2.getHeaders());\n        dm1.setLen1(dm2.getLen1());\n        dm1.setLen2(dm2.getLen2());\n        dm1.save();\n        showOkMsgAndClose();\n        return true;\n      }\n    }\n else     if (md instanceof HlsMetadata) {\n      HlsMetadata hm1=(HlsMetadata)md;\n      HlsMetadata hm2=(HlsMetadata)metadata;\n      if (confirmUrl(\"\")) {\n        hm1.setUrl(hm2.getUrl());\n        hm1.setHeaders(hm2.getHeaders());\n        hm1.save();\n        showOkMsgAndClose();\n        return true;\n      }\n    }\n else     if (md instanceof HdsMetadata) {\n      HdsMetadata hm1=(HdsMetadata)md;\n      HdsMetadata hm2=(HdsMetadata)metadata;\n      if (confirmUrl(\"\")) {\n        hm1.setUrl(hm2.getUrl());\n        hm1.setHeaders(hm2.getHeaders());\n        hm1.save();\n        showOkMsgAndClose();\n        return true;\n      }\n    }\n else {\n      boolean confirmed=false;\n      if (md.getSize() > 0) {\n        confirmed=md.getSize() == metadata.getSize();\n      }\n else {\n        confirmed=confirmUrl(StringResource.get(\"MSG_REF_LINK_QUESTION\"));\n      }\n      if (confirmed) {\n        md.setUrl(metadata.getUrl());\n        md.setHeaders(metadata.getHeaders());\n        md.save();\n        showOkMsgAndClose();\n        return true;\n      }\n    }\n  }\n  return false;\n}\n', '0.26666666666666666', '8', '11');
INSERT INTO `case_study` VALUES ('3995', 'paintComponent(Graphics)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SegmentPanel.java', 'xdm', '24', '249', '222', '-1000', '11', '0.0929', '0.0393', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'public void paintComponent(Graphics g){\n  if (g == null)   return;\n  Graphics2D g2=(Graphics2D)g;\n  g2.setPaint(Color.GRAY);\n  g2.fillRect(0,0,getWidth(),getHeight());\n  if (segDet == null || segDet.getChunkCount() < 1 || length < 0) {\n    return;\n  }\n  g2.setPaint(ColorResource.getSelectionColor());\n  float r=(float)getWidth() / length;\n  ArrayList<SegmentInfo> list=segDet.getChunkUpdates();\n  for (int i=0; i < segDet.getChunkCount(); i++) {\n    SegmentInfo info=list.get(i);\n    int _start=(int)(info.getStart() * r);\n    int _length=(int)(info.getLength() * r);\n    int _dwnld=(int)(info.getDownloaded() * r);\n    if (_dwnld > _length)     _dwnld=_length;\n    g2.fillRect(_start,0,_dwnld + 1,getHeight());\n  }\n}\n', '0.5', '9', '7');
INSERT INTO `case_study` VALUES ('3999', 'showPanel(XDMFrame,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '11', '43', '31', '-1000', '5', '0.1616', '0.0818', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void showPanel(XDMFrame xframe,String pageName){\n  this.parent=xframe;\n  int x=xframe.getWidth() - 350;\n  jsp.setBounds(0,y,350,xframe.getHeight() - y);\n  setBounds(x,0,350,xframe.getHeight());\n  JScrollBar vertical=jsp.getVerticalScrollBar();\n  vertical.setValue(vertical.getMinimum());\n  setPage(pageName);\n  xframe.showDialog(this);\n  SwingUtilities.invokeLater(new Runnable(){\n    public void run(){\n      jsp.getVerticalScrollBar().setValue(0);\n    }\n  }\n);\n}\n', '1', '5', '1');
INSERT INTO `case_study` VALUES ('4004', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '9', '19', '2', '-1000', '2', '0.2222', '0.1815', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void init(){\n  y=25;\n  h=40;\n  btnNav=new JLabel(ImageResource.get(\"back24.png\"));\n  btnNav.setFont(FontResource.getBiggerFont());\n  btnNav.setForeground(ColorResource.getSelectionColor());\n  btnNav.setBounds(15,y,25,h);\n  add(btnNav);\n  btnNav.addMouseListener(new MouseAdapter(){\n    @Override public void mouseReleased(    MouseEvent e){\n      if (currentPage == overviewPanel) {\n        saveOverviewSettings();\n      }\n else       if (currentPage == browserIntPanel) {\n        saveMonitoringSettings();\n      }\n else       if (currentPage == networkPanel) {\n        saveNetworkSettings();\n      }\n else       if (currentPage == advPanel) {\n        saveAdvSettings();\n      }\n      if (level == 0) {\n        close();\n      }\n      if (level == 1) {\n        level=0;\n        setPage(\"PG_SETTINGS\");\n      }\n    }\n  }\n);\n  titleLbl=new JLabel(StringResource.get(\"TITLE_SETTINGS\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(50,y,200,h);\n  add(titleLbl);\n  y+=h;\n  y+=10;\n  h=2;\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,y,400,h);\n  lineLbl.setOpaque(true);\n  add(lineLbl);\n  y+=h;\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('4006', 'createOverviewPanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '217', '19374', '15312', '-1000', '20', '0.0423', '0.0899', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private JPanel createOverviewPanel(){\n  JPanel panel=new JPanel();\n  panel.setOpaque(false);\n  panel.setLayout(null);\n  int y=0, h=0;\n  y+=10;\n  y+=10;\n  h=30;\n  JLabel lblMonitorHeader=new JLabel(StringResource.get(\"SETTINGS_MONITORING\"));\n  lblMonitorHeader.setForeground(Color.WHITE);\n  lblMonitorHeader.setFont(FontResource.getItemFont());\n  lblMonitorHeader.setBounds(15,y,350 - 30,h);\n  panel.add(lblMonitorHeader);\n  y+=h;\n  y+=10;\n  h=50;\n  JTextArea lblMonitoringTitle=new JTextArea();\n  lblMonitoringTitle.setOpaque(false);\n  lblMonitoringTitle.setWrapStyleWord(true);\n  lblMonitoringTitle.setLineWrap(true);\n  lblMonitoringTitle.setEditable(false);\n  lblMonitoringTitle.setForeground(Color.WHITE);\n  lblMonitoringTitle.setText(StringResource.get(\"HINT_BROWSER_MON\"));\n  lblMonitoringTitle.setFont(FontResource.getNormalFont());\n  lblMonitoringTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblMonitoringTitle);\n  y+=h;\n  JButton btViewMonitoring=createButton1(\"SETTINGS_VIEW\",15,y);\n  btViewMonitoring.setName(\"BTN_MONITORING\");\n  panel.add(btViewMonitoring);\n  y+=btViewMonitoring.getHeight();\n  y+=10;\n  y+=20;\n  h=30;\n  JLabel lblGenHeader=new JLabel(StringResource.get(\"SETTINGS_GENERAL\"));\n  lblGenHeader.setForeground(Color.WHITE);\n  lblGenHeader.setFont(FontResource.getItemFont());\n  lblGenHeader.setBounds(15,y,350 - 30,h);\n  panel.add(lblGenHeader);\n  y+=h;\n  y+=10;\n  h=30;\n  chkPrgWnd=createCheckBox(\"SHOW_DWN_PRG\");\n  chkPrgWnd.setBounds(15,y,350 - 30,h);\n  panel.add(chkPrgWnd);\n  y+=h;\n  h=30;\n  chkEndWnd=createCheckBox(\"SHOW_DWN_COMPLETE\");\n  chkEndWnd.setBounds(15,y,350 - 30,h);\n  panel.add(chkEndWnd);\n  y+=h;\n  y+=10;\n  h=30;\n  JLabel lblMaxTitle=new JLabel(StringResource.get(\"MSG_MAX_DOWNLOAD\"));\n  lblMaxTitle.setForeground(Color.WHITE);\n  lblMaxTitle.setFont(FontResource.getNormalFont());\n  lblMaxTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblMaxTitle);\n  y+=3;\n  h=25;\n  cmbMax=new JComboBox<String>(new String[]{\"1\",\"2\",\"5\",\"10\",\"50\",\"N/A\"});\n  cmbMax.setBackground(ColorResource.getDarkerBgColor());\n  cmbMax.setBounds(250,y,75,h);\n  cmbMax.setRenderer(new SimpleListRenderer());\n  panel.add(cmbMax);\n  y+=h;\n  y+=10;\n  y+=10;\n  y+=10;\n  h=30;\n  JLabel lblFolderTitle=new JLabel(StringResource.get(\"SETTINGS_FOLDER\"));\n  lblFolderTitle.setForeground(Color.WHITE);\n  lblFolderTitle.setFont(FontResource.getNormalFont());\n  lblFolderTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblFolderTitle);\n  y+=h;\n  h=25;\n  txtDefFolder=new JTextField();\n  txtDefFolder.setBounds(15,y,350 - 30 - 110,h);\n  txtDefFolder.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtDefFolder.setEditable(false);\n  txtDefFolder.setForeground(Color.WHITE);\n  txtDefFolder.setOpaque(false);\n  panel.add(txtDefFolder);\n  JButton btnBrowseFolder=createButton2(\"SETTINGS_FOLDER_CHANGE\");\n  btnBrowseFolder.setName(\"SETTINGS_FOLDER_CHANGE\");\n  btnBrowseFolder.setBackground(ColorResource.getDarkBtnColor());\n  btnBrowseFolder.setFont(FontResource.getNormalFont());\n  btnBrowseFolder.setBounds(15 + 350 - 30 - 110 + 10,y,90,h);\n  panel.add(btnBrowseFolder);\n  y+=h;\n  y+=10;\n  y+=20;\n  y+=10;\n  h=30;\n  JLabel lblNetHeader=new JLabel(StringResource.get(\"SETTINGS_NETWORK\"));\n  lblNetHeader.setForeground(Color.WHITE);\n  lblNetHeader.setFont(FontResource.getItemFont());\n  lblNetHeader.setBounds(15,y,350 - 30,h);\n  panel.add(lblNetHeader);\n  y+=h;\n  h=40;\n  JTextArea lblNetworkTitle=new JTextArea();\n  lblNetworkTitle.setOpaque(false);\n  lblNetworkTitle.setWrapStyleWord(true);\n  lblNetworkTitle.setLineWrap(true);\n  lblNetworkTitle.setEditable(false);\n  lblNetworkTitle.setForeground(Color.WHITE);\n  lblNetworkTitle.setText(StringResource.get(\"HINT_NETWORK\"));\n  lblNetworkTitle.setFont(FontResource.getNormalFont());\n  lblNetworkTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblNetworkTitle);\n  y+=h;\n  JButton btViewNet=createButton1(\"SETTINGS_VIEW\",15,y);\n  btViewNet.setName(\"BTN_NETWORK\");\n  panel.add(btViewNet);\n  y+=btViewNet.getHeight();\n  y+=10;\n  y+=10;\n  y+=10;\n  h=30;\n  JLabel lblSchHeader=new JLabel(StringResource.get(\"SETTINGS_SCHEDULER\"));\n  lblSchHeader.setForeground(Color.WHITE);\n  lblSchHeader.setFont(FontResource.getItemFont());\n  lblSchHeader.setBounds(15,y,350 - 30,h);\n  panel.add(lblSchHeader);\n  y+=h;\n  h=50;\n  JTextArea lblScheduleTitle=new JTextArea();\n  lblScheduleTitle.setOpaque(false);\n  lblScheduleTitle.setWrapStyleWord(true);\n  lblScheduleTitle.setLineWrap(true);\n  lblScheduleTitle.setEditable(false);\n  lblScheduleTitle.setForeground(Color.WHITE);\n  lblScheduleTitle.setText(StringResource.get(\"HINT_SCHEDULER\"));\n  lblScheduleTitle.setFont(FontResource.getNormalFont());\n  lblScheduleTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblScheduleTitle);\n  y+=h;\n  JButton btViewScheduler=createButton1(\"SETTINGS_VIEW\",15,y);\n  btViewScheduler.setName(\"Q_MAN\");\n  panel.add(btViewScheduler);\n  y+=btViewScheduler.getHeight();\n  y+=10;\n  y+=10;\n  y+=10;\n  h=30;\n  JLabel lblPwdHeader=new JLabel(StringResource.get(\"SETTINGS_CRED\"));\n  lblPwdHeader.setForeground(Color.WHITE);\n  lblPwdHeader.setFont(FontResource.getItemFont());\n  lblPwdHeader.setBounds(15,y,350 - 30,h);\n  panel.add(lblPwdHeader);\n  y+=h;\n  h=40;\n  JTextArea lblCredTitle=new JTextArea();\n  lblCredTitle.setOpaque(false);\n  lblCredTitle.setWrapStyleWord(true);\n  lblCredTitle.setLineWrap(true);\n  lblCredTitle.setEditable(false);\n  lblCredTitle.setForeground(Color.WHITE);\n  lblCredTitle.setText(StringResource.get(\"HINT_PASSWORD\"));\n  lblCredTitle.setFont(FontResource.getNormalFont());\n  lblCredTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblCredTitle);\n  y+=h;\n  JButton btViewCred=createButton1(\"SETTINGS_VIEW\",15,y);\n  btViewCred.setName(\"PASS_MAN\");\n  panel.add(btViewCred);\n  y+=btViewCred.getHeight();\n  y+=10;\n  y+=10;\n  y+=10;\n  h=30;\n  JLabel lblAdvHeader=new JLabel(StringResource.get(\"SETTINGS_ADV\"));\n  lblAdvHeader.setForeground(Color.WHITE);\n  lblAdvHeader.setFont(FontResource.getItemFont());\n  lblAdvHeader.setBounds(15,y,350 - 30,h);\n  panel.add(lblAdvHeader);\n  y+=h;\n  h=50;\n  JTextArea lblAdvTitle=new JTextArea();\n  lblAdvTitle.setOpaque(false);\n  lblAdvTitle.setWrapStyleWord(true);\n  lblAdvTitle.setLineWrap(true);\n  lblAdvTitle.setEditable(false);\n  lblAdvTitle.setForeground(Color.WHITE);\n  lblAdvTitle.setText(StringResource.get(\"HINT_ADV\"));\n  lblAdvTitle.setFont(FontResource.getNormalFont());\n  lblAdvTitle.setBounds(15,y,350 - 30,h);\n  panel.add(lblAdvTitle);\n  y+=h;\n  JButton btViewAdv=createButton1(\"SETTINGS_VIEW\",15,y);\n  btViewAdv.setName(\"ADV_MAN\");\n  panel.add(btViewAdv);\n  y+=btViewAdv.getHeight();\n  y+=10;\n  h=30;\n  panel.setPreferredSize(new Dimension(300,y + 50));\n  return panel;\n}\n', '0.6666666666666666', '22', '1');
INSERT INTO `case_study` VALUES ('4007', 'createButton1(String,int,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '12', '21', '0', '-1000', '3', '0.1905', '0.3795', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JButton createButton1(String name,int x,int y){\n  JButton btn=new CustomButton(StringResource.get(name));\n  btn.setBackground(ColorResource.getDarkBtnColor());\n  btn.setBorderPainted(false);\n  btn.setFocusPainted(false);\n  btn.setForeground(Color.WHITE);\n  btn.setFont(FontResource.getNormalFont());\n  Dimension d=btn.getPreferredSize();\n  btn.setBounds(x,y,d.width,d.height);\n  btn.addActionListener(this);\n  return btn;\n}\n', '1', '5', '1');
INSERT INTO `case_study` VALUES ('4008', 'createButton2(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '10', '17', '0', '-1000', '3', '0.275', '0.4205', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JButton createButton2(String name){\n  JButton btn=new CustomButton(StringResource.get(name));\n  btn.setBackground(ColorResource.getDarkBtnColor());\n  btn.setBorderPainted(false);\n  btn.setFocusPainted(false);\n  btn.setForeground(Color.WHITE);\n  btn.setFont(FontResource.getNormalFont());\n  btn.addActionListener(this);\n  return btn;\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('4009', 'createCheckBox(String,Font)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '11', '19', '0', '-1000', '3', '0.2955', '0.4198', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JCheckBox createCheckBox(String name){\n  return createCheckBox(name,FontResource.getNormalFont());\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('4014', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '102', '4235', '3319', '-1000', '29', '0.0359', '0.0917', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (e.getSource() instanceof JRadioButton) {\n    JRadioButton chk=(JRadioButton)e.getSource();\n    if (\"Q_DAILY\".equals(chk.getName()) || \"Q_ONCE\".equals(chk.getName())) {\n      enableSchedulerFields();\n    }\n  }\n  if (e.getSource() instanceof JMenuItem) {\n    String name=((JMenuItem)e.getSource()).getName();\n    if (name != null) {\n      if (name.startsWith(\"Q_MOVE_TO:\")) {\n        String targetQ=\"\";\n        if (name.endsWith(\":\")) {\n          targetQ=\"\";\n        }\n else {\n          targetQ=name.split(\":\")[1].trim();\n        }\n        int index=qItemsList.getSelectedIndex();\n        if (index < 0)         return;\n        String id=queuedItemsModel.get(index);\n        Logger.log(\"Moving to target queue: \" + targetQ);\n        index=qList.getSelectedIndex();\n        if (index < 0)         return;\n        DownloadQueue sourceQ=queueModel.getElementAt(index);\n        sourceQ.removeFromQueue(id);\n        QueueManager.getInstance().getQueueById(targetQ).addToQueue(id);\n        loadSchedulerSettings(index);\n      }\n      return;\n    }\n  }\n  if (e.getSource() instanceof JCheckBox) {\n    JCheckBox chk=(JCheckBox)e.getSource();\n    if (\"MSG_Q_START\".equals(chk.getName())) {\n      enableSchedulerFields();\n    }\n  }\n else   if (e.getSource() instanceof JButton) {\n    JButton btn=(JButton)e.getSource();\n    String name=btn.getName();\n    if (\"BTN_Q_SAVE\".equals(name)) {\n      saveQueue();\n      return;\n    }\n    if (\"Q_MOVE_TO\".equals(name)) {\n      showMoveQPopup(btn);\n      return;\n    }\n    if (\"BTN_Q_DEL\".equals(name)) {\n      removeQueue();\n    }\n    if (\"Q_MOVE_UP\".equals(name)) {\n      queueMoveUp();\n      return;\n    }\n    if (\"Q_MOVE_DN\".equals(name)) {\n      queueMoveDown();\n      return;\n    }\n    if (\"BTN_Q_NEW\".equals(name)) {\n      createNewQueue();\n      return;\n    }\n    if (\"BTN_DEF_FILE_EXT\".equals(name)) {\n      txtFileTyp.setText(XDMUtils.appendArray2Str(Config.getInstance().getDefaultFileTypes()));\n      return;\n    }\n    if (\"BTN_DEF_VID_EXT\".equals(name)) {\n      txtVidType.setText(XDMUtils.appendArray2Str(Config.getInstance().getDefaultVideoTypes()));\n      return;\n    }\n    if (\"BTN_Q_NEW\".equals(name)) {\n      createNewQueue();\n      return;\n    }\n    if (\"DEL_CRED\".equals(name)) {\n      int index=passList.getSelectedIndex();\n      if (index > -1) {\n        PasswordItem item=passListModel.get(index);\n        CredentialManager.getInstance().removeSavedCredential(item.host);\n        loadPasswordSettings();\n      }\n    }\n    if (\"NEW_CRED\".equals(name)) {\n      txtCredHostName.setText(\"\");\n      txtUserName.setText(\"\");\n      txtPassword.setText(\"\");\n    }\n    if (\"SAVE_CRED\".equals(name)) {\n      savePasswordSettings();\n    }\n    if (\"BROWSE_ANTIVIR\".equals(name)) {\n      JFileChooser jfc=new JFileChooser();\n      if (jfc.showOpenDialog(parent) == JFileChooser.APPROVE_OPTION) {\n        txtAntivirCmd.setText(jfc.getSelectedFile().getAbsolutePath());\n      }\n    }\n    if (\"SETTINGS_FOLDER_CHANGE\".equals(name)) {\n      JFileChooser jfc=new JFileChooser();\n      jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n      if (jfc.showOpenDialog(parent) == JFileChooser.APPROVE_OPTION) {\n        txtDefFolder.setText(jfc.getSelectedFile().getAbsolutePath());\n      }\n    }\n    if (\"FF_INSTALL\".equals(name)) {\n      if (!BrowserLauncher.launchFirefox(ffAMOURL)) {\n        String msg=String.format(StringResource.get(\"MSG_ADDON_DESC\"),\"Mozilla Firefox\",ffAMOURL);\n        MessageBox.show(parent,StringResource.get(\"MSG_ADDON_TITLE\"),msg,MessageBox.OK_OPTION,MessageBox.OK);\n      }\n    }\n    if (\"CR_INSTALL\".equals(name)) {\n      if (!BrowserLauncher.launchChrome(chromeWebStoreURL)) {\n        String msg=String.format(StringResource.get(\"MSG_ADDON_DESC\"),\"Google Chrome\",chromeWebStoreURL);\n        MessageBox.show(parent,StringResource.get(\"MSG_ADDON_TITLE\"),msg,MessageBox.OK_OPTION,MessageBox.OK);\n      }\n    }\n    if (\"CM_INSTALL\".equals(name)) {\n      String msg=String.format(StringResource.get(\"MSG_ADDON_DESC\"),\"Chromium\",chromeWebStoreURL);\n      MessageBox.show(parent,StringResource.get(\"MSG_ADDON_TITLE\"),msg,MessageBox.OK_OPTION,MessageBox.OK);\n    }\n    if (\"VL_INSTALL\".equals(name)) {\n      String msg=String.format(StringResource.get(\"MSG_ADDON_DESC\"),\"Vivaldi\",chromeWebStoreURL);\n      MessageBox.show(parent,StringResource.get(\"MSG_ADDON_TITLE\"),msg,MessageBox.OK_OPTION,MessageBox.OK);\n    }\n    if (\"OP_INSTALL\".equals(name)) {\n      String msg=String.format(StringResource.get(\"MSG_ADDON_DESC\"),\"Opera\",operaExtURL);\n      MessageBox.show(parent,StringResource.get(\"MSG_ADDON_TITLE\"),msg,MessageBox.OK_OPTION,MessageBox.OK);\n    }\n    if (setPage(name)) {\n      level=1;\n      SwingUtilities.invokeLater(new Runnable(){\n        public void run(){\n          jsp.getVerticalScrollBar().setValue(0);\n        }\n      }\n);\n    }\n  }\n}\n', '0.6', '19', '38');
INSERT INTO `case_study` VALUES ('4016', 'loadSchedulerSettings(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '7', '18', '15', '-1000', '4', '0.2571', '0.0917', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void loadSchedulerSettings(int selectedQ){\n  queueModel.clear();\n  for (  DownloadQueue q : QueueManager.getInstance().getQueueList()) {\n    queueModel.addElement(q);\n  }\n  qList.setSelectedIndex(selectedQ);\n  qList.ensureIndexIsVisible(selectedQ);\n}\n', '0.5', '2', '2');
INSERT INTO `case_study` VALUES ('4017', 'loadOverviewSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '9', '21', '6', '-1000', '4', '0.2037', '0.1768', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void loadOverviewSettings(){\n  Config config=Config.getInstance();\n  chkPrgWnd.setSelected(config.showDownloadWindow());\n  System.out.println(config.showDownloadCompleteWindow());\n  chkEndWnd.setSelected(config.showDownloadCompleteWindow());\n  cmbMax.setSelectedItem(config.getMaxDownloads() > 0 ? config.getMaxDownloads() + \"\" : \"N/A\");\n  txtDefFolder.setText(config.getDownloadFolder());\n}\n', '0.2', '1', '2');
INSERT INTO `case_study` VALUES ('4018', 'loadMonitoringSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '7', '11', '1', '-1000', '3', '0.2653', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void loadMonitoringSettings(){\n  Config config=Config.getInstance();\n  txtFileTyp.setText(XDMUtils.appendArray2Str(config.getFileExts()));\n  txtVidType.setText(XDMUtils.appendArray2Str(config.getVidExts()));\n  txtBlockedHosts.setText(XDMUtils.appendArray2Str(config.getBlockedHosts()));\n  chkVidPan.setSelected(config.isShowVideoNotification());\n}\n', '0.3333333333333333', '1', '1');
INSERT INTO `case_study` VALUES ('4019', 'loadNetworkSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '29', '291', '176', '-1000', '6', '0.0874', '0.1317', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void loadNetworkSettings(){\n  Config config=Config.getInstance();\n  cmbSeg.setSelectedItem(config.getMaxSegments() + \"\");\n  cmbTimeout.setSelectedItem(config.getNetworkTimeout() > 1 ? config.getNetworkTimeout() + \"\" : \"N/A\");\n  cmbTcp.setSelectedItem(config.getTcpWindowSize() + \"\");\n  txtSpeedLimit.setText(config.getSpeedLimit() < 1 ? \"N/A\" : config.getSpeedLimit() + \"\");\n  int proxyMode=config.getProxyMode();\n  if (proxyMode == 0) {\n    chkUsePac.setSelected(false);\n    chkUseProxy.setSelected(false);\n    chkUseSocks.setSelected(false);\n  }\n else   if (proxyMode == 1) {\n    chkUsePac.setSelected(true);\n  }\n else   if (proxyMode == 2) {\n    chkUseProxy.setSelected(true);\n  }\n else   if (proxyMode == 3) {\n    chkUseSocks.setSelected(true);\n  }\n  txtPACUrl.setText(config.getProxyPac());\n  if (config.getProxyHost() == null || config.getProxyHost().length() < 1) {\n    txtProxyHostnPort.setText(\"\");\n  }\n else {\n    txtProxyHostnPort.setText(config.getProxyHost() + (config.getProxyPort() > 0 ? \":\" + config.getProxyPort() : \"\"));\n  }\n  if (config.getSocksHost() == null || config.getSocksHost().length() < 1) {\n    txtSocksHostnPort.setText(\"\");\n  }\n else {\n    txtSocksHostnPort.setText(config.getSocksHost() + (config.getSocksPort() > 0 ? \":\" + config.getSocksPort() : \"\"));\n  }\n  if (config.getProxyUser() == null || config.getProxyUser().length() < 1) {\n    txtProxyUser.setText(\"\");\n    txtProxyPass.setText(\"\");\n  }\n else {\n    txtProxyUser.setText(config.getProxyUser());\n    if (config.getProxyPass() == null || config.getProxyPass().length() < 1) {\n      txtProxyPass.setText(\"\");\n    }\n else {\n      txtProxyPass.setText(config.getProxyPass());\n    }\n  }\n}\n', '0.07692307692307693', '2', '17');
INSERT INTO `case_study` VALUES ('4020', 'loadPasswordSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '15', '87', '69', '-1000', '6', '0.14', '0.0785', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', 'private void loadPasswordSettings(){\n  passListModel.clear();\n  txtCredHostName.setText(\"\");\n  txtUserName.setText(\"\");\n  txtPassword.setText(\"\");\n  Set<Entry<String,PasswordAuthentication>> credentials=CredentialManager.getInstance().getCredentials();\n  Iterator<Entry<String,PasswordAuthentication>> it=credentials.iterator();\n  while (it.hasNext()) {\n    Entry<String,PasswordAuthentication> ent=it.next();\n    PasswordItem item=new PasswordItem();\n    item.host=ent.getKey();\n    item.user=ent.getValue().getUserName();\n    item.password=new String(ent.getValue().getPassword());\n    passListModel.addElement(item);\n  }\n}\n', '0.6666666666666666', '4', '2');
INSERT INTO `case_study` VALUES ('4021', 'savePasswordSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '11', '42', '29', '-1000', '4', '0.1727', '0.074', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void savePasswordSettings(){\n  String host=txtCredHostName.getText();\n  String user=txtUserName.getText();\n  String password=txtPassword.getText();\n  Logger.log(host + \" \" + user);\n  if (StringUtils.isNullOrEmptyOrBlank(host) || StringUtils.isNullOrEmptyOrBlank(user)) {\n    return;\n  }\n  CredentialManager mgr=CredentialManager.getInstance();\n  mgr.addCredentialForHost(host,user,password,true);\n  mgr.save();\n  loadPasswordSettings();\n}\n', '0.6', '4', '3');
INSERT INTO `case_study` VALUES ('4023', 'createTextArea(String,Font)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '11', '19', '0', '-1000', '3', '0.2727', '0.5015', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JTextArea createTextArea(String name){\n  return createTextArea(name,FontResource.getNormalFont());\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('4025', 'createBrowserIntPanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '74', '2068', '1435', '-1000', '2', '0.083', '0.1174', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', 'private JPanel createBrowserIntPanel(){\n  JPanel p=new JPanel();\n  p.setLayout(null);\n  p.setOpaque(false);\n  int y=30;\n  int h=70;\n  JTextArea txt1=createTextArea(\"DESC_MONITORING_1\");\n  txt1.setBounds(15,y,350 - 30,h);\n  p.add(txt1);\n  y+=h;\n  y+=30;\n  h=25;\n  JLabel lblFirefox=new JLabel(StringResource.get(\"DESC_MOZILLA_FIREFOX\"));\n  lblFirefox.setFont(FontResource.getBigFont());\n  lblFirefox.setBounds(15,y,135,h);\n  p.add(lblFirefox);\n  JLabel lblChrome=new JLabel(StringResource.get(\"DESC_GOOGLE_CHROME\"));\n  lblChrome.setFont(FontResource.getBigFont());\n  lblChrome.setBounds(180,y,135,h);\n  p.add(lblChrome);\n  y+=h;\n  JButton btnFF=createButton2(\"DESC_INSTALL\");\n  btnFF.setName(\"FF_INSTALL\");\n  btnFF.setBounds(15,y,140,h);\n  p.add(btnFF);\n  JButton btnCr=createButton2(\"DESC_INSTALL\");\n  btnCr.setName(\"CR_INSTALL\");\n  btnCr.setBounds(180,y,140,h);\n  p.add(btnCr);\n  y+=h;\n  y+=15;\n  h=25;\n  JLabel lblOpera=new JLabel(StringResource.get(\"DESC_OPERA\"));\n  lblOpera.setFont(FontResource.getBigFont());\n  lblOpera.setBounds(15,y,135,h);\n  p.add(lblOpera);\n  JLabel lblCm=new JLabel(StringResource.get(\"DESC_CHROMIUM\"));\n  lblCm.setFont(FontResource.getBigFont());\n  lblCm.setBounds(180,y,135,h);\n  p.add(lblCm);\n  y+=h;\n  JButton btnOp=createButton2(\"DESC_INSTALL\");\n  btnOp.setName(\"OP_INSTALL\");\n  btnOp.setBounds(15,y,140,h);\n  p.add(btnOp);\n  JButton btnCm=createButton2(\"DESC_INSTALL\");\n  btnCm.setName(\"CM_INSTALL\");\n  btnCm.setBounds(180,y,140,h);\n  p.add(btnCm);\n  y+=h;\n  y+=15;\n  h=25;\n  JLabel lblEdge=new JLabel(StringResource.get(\"DESC_VIVALDI\"));\n  lblEdge.setFont(FontResource.getBigFont());\n  lblEdge.setName(\"VL_INSTALL\");\n  lblEdge.setBounds(15,y,135,h);\n  p.add(lblEdge);\n  y+=h;\n  JButton btnEdge=createButton2(\"DESC_INSTALL\");\n  btnEdge.setName(\"VL_INSTALL\");\n  btnEdge.addActionListener(this);\n  btnEdge.setBounds(15,y,140,h);\n  p.add(btnEdge);\n  y+=h;\n  y+=40;\n  h=50;\n  JTextArea txt2=createTextArea(\"DESC_OTHER_BROWSERS\");\n  txt2.setBounds(15,y,350 - 30,h);\n  p.add(txt2);\n  y+=h;\n  h=30;\n  JLabel labelMoz=new JLabel(StringResource.get(\"DESC_MOZ\"));\n  labelMoz.setCursor(new Cursor(Cursor.HAND_CURSOR));\n  labelMoz.addMouseListener(new MouseAdapter(){\n    @Override public void mouseClicked(    MouseEvent e){\n      showMsgFF();\n    }\n  }\n);\n  Font font=FontResource.getNormalFont();\n  Map attributes=font.getAttributes();\n  attributes.put(TextAttribute.UNDERLINE,TextAttribute.UNDERLINE_ON);\n  labelMoz.setBounds(15,y,350 - 30,h);\n  labelMoz.setFont(font.deriveFont(attributes));\n  labelMoz.setForeground(Color.WHITE);\n  p.add(labelMoz);\n  y+=h;\n  h=30;\n  JLabel labelCr=new JLabel(StringResource.get(\"DESC_CHROME\"));\n  labelCr.setCursor(new Cursor(Cursor.HAND_CURSOR));\n  labelCr.addMouseListener(new MouseAdapter(){\n    @Override public void mouseClicked(    MouseEvent e){\n      showMsgChrome();\n    }\n  }\n);\n  labelCr.setBounds(15,y,350 - 30,h);\n  labelCr.setFont(font.deriveFont(attributes));\n  labelCr.setForeground(Color.WHITE);\n  p.add(labelCr);\n  y+=h;\n  y+=40;\n  h=40;\n  JTextArea txt3=createTextArea(\"DESC_FILETYPES\");\n  txt3.setBounds(15,y,350 - 40,h);\n  p.add(txt3);\n  y+=h;\n  h=70;\n  txtFileTyp=new JTextArea();\n  txtFileTyp.setBorder(new LineBorder(ColorResource.getDarkBgColor()));\n  txtFileTyp.setOpaque(false);\n  txtFileTyp.setWrapStyleWord(true);\n  txtFileTyp.setLineWrap(true);\n  txtFileTyp.setForeground(Color.WHITE);\n  txtFileTyp.setFont(FontResource.getNormalFont());\n  txtFileTyp.setBounds(15,y,350 - 40,h);\n  p.add(txtFileTyp);\n  y+=h;\n  y+=10;\n  h=25;\n  JButton btnDef1=createButton2(\"DESC_DEF\");\n  btnDef1.setName(\"BTN_DEF_FILE_EXT\");\n  btnDef1.setBounds(310 - 125,y,140,h);\n  p.add(btnDef1);\n  y+=h;\n  y+=40;\n  h=30;\n  chkVidPan=createCheckBox(\"OPT_VID_PANE\");\n  chkVidPan.setBounds(15,y,350 - 30,h);\n  p.add(chkVidPan);\n  y+=h;\n  y+=10;\n  h=40;\n  JTextArea txt4=createTextArea(\"DESC_VIDEOTYPES\");\n  txt4.setBounds(15,y,350 - 40,h);\n  p.add(txt4);\n  y+=h;\n  h=70;\n  txtVidType=new JTextArea();\n  txtVidType.setOpaque(false);\n  txtVidType.setBorder(new LineBorder(ColorResource.getDarkBgColor()));\n  txtVidType.setWrapStyleWord(true);\n  txtVidType.setLineWrap(true);\n  txtVidType.setForeground(Color.WHITE);\n  txtVidType.setFont(FontResource.getNormalFont());\n  txtVidType.setBounds(15,y,350 - 40,h);\n  p.add(txtVidType);\n  y+=h;\n  y+=10;\n  h=25;\n  JButton btnDef2=createButton2(\"DESC_DEF\");\n  btnDef2.setName(\"BTN_DEF_VID_EXT\");\n  btnDef2.setBounds(310 - 125,y,140,h);\n  p.add(btnDef2);\n  y+=h;\n  y+=40;\n  h=40;\n  JTextArea txt6=createTextArea(\"DESC_SITEEXCEPTIONS\");\n  txt6.setBounds(15,y,350 - 30,h);\n  p.add(txt6);\n  y+=h;\n  h=70;\n  txtBlockedHosts=new JTextArea();\n  txtBlockedHosts.setOpaque(false);\n  txtBlockedHosts.setBorder(new LineBorder(ColorResource.getDarkBgColor()));\n  txtBlockedHosts.setWrapStyleWord(true);\n  txtBlockedHosts.setLineWrap(true);\n  txtBlockedHosts.setForeground(Color.WHITE);\n  txtBlockedHosts.setFont(FontResource.getNormalFont());\n  txtBlockedHosts.setBounds(15,y,350 - 40,h);\n  p.add(txtBlockedHosts);\n  y+=h;\n  y+=20;\n  y+=30;\n  p.setPreferredSize(new Dimension(350,y));\n  return p;\n}\n', '0.75', '26', '1');
INSERT INTO `case_study` VALUES ('4028', 'createNetworkPanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '179', '12587', '9243', '-1000', '3', '0.0524', '0.1099', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', 'private JPanel createNetworkPanel(){\n  JPanel p=new JPanel();\n  p.setLayout(null);\n  p.setOpaque(false);\n  int y=20;\n  int h=50;\n  h=30;\n  JLabel lbl1=new JLabel(StringResource.get(\"DESC_NET\"));\n  lbl1.setForeground(Color.WHITE);\n  lbl1.setFont(FontResource.getItemFont());\n  lbl1.setBounds(15,y,350 - 30,h);\n  p.add(lbl1);\n  y+=h;\n  y+=20;\n  h=25;\n  JLabel lbl2=new JLabel(StringResource.get(\"DESC_NET1\"));\n  lbl2.setForeground(Color.WHITE);\n  lbl2.setFont(FontResource.getNormalFont());\n  lbl2.setBounds(15,y,200,h);\n  p.add(lbl2);\n  y+=5;\n  h=20;\n  cmbTimeout=new JComboBox<String>(new String[]{\"10\",\"30\",\"60\",\"120\",\"180\",\"360\",\"N/A\"});\n  cmbTimeout.setBackground(ColorResource.getDarkerBgColor());\n  cmbTimeout.setBounds(250,y,75,h);\n  cmbTimeout.setRenderer(new SimpleListRenderer());\n  p.add(cmbTimeout);\n  y+=h;\n  y+=10;\n  h=25;\n  JLabel lbl3=new JLabel(StringResource.get(\"DESC_NET2\"));\n  lbl3.setForeground(Color.WHITE);\n  lbl3.setFont(FontResource.getNormalFont());\n  lbl3.setBounds(15,y,200,h);\n  p.add(lbl3);\n  y+=5;\n  h=20;\n  cmbSeg=new JComboBox<String>(new String[]{\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"20\",\"25\",\"30\",\"32\"});\n  cmbSeg.setBackground(ColorResource.getDarkerBgColor());\n  cmbSeg.setBounds(250,y,75,h);\n  cmbSeg.setRenderer(new SimpleListRenderer());\n  p.add(cmbSeg);\n  y+=h;\n  y+=10;\n  h=25;\n  JLabel lbl4=new JLabel(StringResource.get(\"DESC_NET3\"));\n  lbl4.setForeground(Color.WHITE);\n  lbl4.setFont(FontResource.getNormalFont());\n  lbl4.setBounds(15,y,200,h);\n  p.add(lbl4);\n  y+=5;\n  h=20;\n  cmbTcp=new JComboBox<String>(new String[]{\"8\",\"16\",\"32\",\"64\"});\n  cmbTcp.setBackground(ColorResource.getDarkerBgColor());\n  cmbTcp.setBounds(250,y,75,h);\n  cmbTcp.setRenderer(new SimpleListRenderer());\n  p.add(cmbTcp);\n  y+=h;\n  y+=50;\n  h=30;\n  JLabel lbl51=new JLabel(StringResource.get(\"SPEED_LIMIT_TITLE\"));\n  lbl51.setForeground(Color.WHITE);\n  lbl51.setFont(FontResource.getItemFont());\n  lbl51.setBounds(15,y,350 - 30,h);\n  p.add(lbl51);\n  y+=h;\n  h=30;\n  JLabel lbl71=new JLabel(StringResource.get(\"MSG_SPEED_LIMIT\"));\n  lbl71.setForeground(Color.WHITE);\n  lbl71.setFont(FontResource.getNormalFont());\n  lbl71.setBounds(15,y,350 - 30,h);\n  p.add(lbl71);\n  y+=h;\n  h=25;\n  txtSpeedLimit=new JTextField();\n  txtSpeedLimit.setBounds(15,y,350 - 250,h);\n  txtSpeedLimit.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtSpeedLimit.setEditable(true);\n  txtSpeedLimit.setCaretColor(ColorResource.getActiveTabColor());\n  txtSpeedLimit.setForeground(Color.WHITE);\n  txtSpeedLimit.setOpaque(false);\n  p.add(txtSpeedLimit);\n  y+=h;\n  y+=50;\n  h=30;\n  JLabel lbl5=new JLabel(StringResource.get(\"DESC_NET4\"));\n  lbl5.setForeground(Color.WHITE);\n  lbl5.setFont(FontResource.getItemFont());\n  lbl5.setBounds(15,y,350 - 30,h);\n  p.add(lbl5);\n  y+=h;\n  y+=10;\n  h=30;\n  chkUsePac=createCheckBox(\"DESC_NET5\");\n  chkUsePac.setBounds(15,y,350 - 30,h);\n  p.add(chkUsePac);\n  y+=h;\n  h=25;\n  txtPACUrl=new JTextField();\n  txtPACUrl.setBounds(15,y,350 - 30 - 10,h);\n  txtPACUrl.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtPACUrl.setEditable(true);\n  txtPACUrl.setForeground(Color.WHITE);\n  txtPACUrl.setCaretColor(ColorResource.getActiveTabColor());\n  txtPACUrl.setOpaque(false);\n  p.add(txtPACUrl);\n  y+=h;\n  y+=10;\n  h=30;\n  chkUseProxy=createCheckBox(\"DESC_NET6\");\n  chkUseProxy.setBounds(15,y,350 - 30,h);\n  p.add(chkUseProxy);\n  y+=h;\n  h=25;\n  txtProxyHostnPort=new JTextField();\n  txtProxyHostnPort.setBounds(15,y,350 - 30 - 10,h);\n  txtProxyHostnPort.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtProxyHostnPort.setEditable(true);\n  txtProxyHostnPort.setCaretColor(ColorResource.getActiveTabColor());\n  txtProxyHostnPort.setForeground(Color.WHITE);\n  txtProxyHostnPort.setOpaque(false);\n  p.add(txtProxyHostnPort);\n  y+=h;\n  y+=10;\n  h=30;\n  chkUseSocks=createCheckBox(\"DESC_NET9\");\n  chkUseSocks.setBounds(15,y,350 - 30,h);\n  p.add(chkUseSocks);\n  y+=h;\n  h=25;\n  txtSocksHostnPort=new JTextField();\n  txtSocksHostnPort.setBounds(15,y,350 - 30 - 10,h);\n  txtSocksHostnPort.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtSocksHostnPort.setEditable(true);\n  txtSocksHostnPort.setCaretColor(ColorResource.getActiveTabColor());\n  txtSocksHostnPort.setForeground(Color.WHITE);\n  txtSocksHostnPort.setOpaque(false);\n  p.add(txtSocksHostnPort);\n  y+=h;\n  y+=10;\n  h=30;\n  JLabel lbl6=new JLabel(StringResource.get(\"DESC_NET7\"));\n  lbl6.setForeground(Color.WHITE);\n  lbl6.setFont(FontResource.getNormalFont());\n  lbl6.setBounds(15,y,350 - 30,h);\n  p.add(lbl6);\n  y+=h;\n  h=25;\n  txtProxyUser=new JTextField();\n  txtProxyUser.setBounds(15,y,350 - 30 - 10,h);\n  txtProxyUser.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtProxyUser.setCaretColor(ColorResource.getActiveTabColor());\n  txtProxyUser.setEditable(true);\n  txtProxyUser.setForeground(Color.WHITE);\n  txtProxyUser.setOpaque(false);\n  p.add(txtProxyUser);\n  y+=h;\n  y+=10;\n  h=30;\n  JLabel lbl7=new JLabel(StringResource.get(\"DESC_NET8\"));\n  lbl7.setForeground(Color.WHITE);\n  lbl7.setFont(FontResource.getNormalFont());\n  lbl7.setBounds(15,y,350 - 30,h);\n  p.add(lbl7);\n  y+=h;\n  h=25;\n  txtProxyPass=new JPasswordField();\n  txtProxyPass.setBounds(15,y,320 - 10,h);\n  txtProxyPass.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtProxyPass.setCaretColor(ColorResource.getActiveTabColor());\n  txtProxyPass.setEditable(true);\n  txtProxyPass.setForeground(Color.WHITE);\n  txtProxyPass.setOpaque(false);\n  p.add(txtProxyPass);\n  y+=h;\n  y+=50;\n  p.setPreferredSize(new Dimension(350,y));\n  return p;\n}\n', '0.5714285714285714', '12', '1');
INSERT INTO `case_study` VALUES ('4030', 'createSchedulerPanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '206', '18643', '16171', '-1000', '3', '0.0258', '0.0558', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', 'private JPanel createSchedulerPanel(){\n  JPanel p=new JPanel();\n  p.setLayout(null);\n  p.setOpaque(false);\n  int y=5;\n  h=30;\n  JLabel lbl67=new JLabel(StringResource.get(\"Q_LIST_DESC\"));\n  lbl67.setForeground(Color.WHITE);\n  lbl67.setFont(FontResource.getNormalFont());\n  lbl67.setBounds(15,y,350 - 30,h);\n  p.add(lbl67);\n  y+=h;\n  int h=100;\n  queueModel=new DefaultListModel<DownloadQueue>();\n  qList=new JList<DownloadQueue>(queueModel);\n  qList.setCellRenderer(new QueueListRenderer());\n  qList.setBorder(null);\n  qList.setOpaque(false);\n  qList.setSelectedIndex(0);\n  qList.addListSelectionListener(this);\n  JScrollPane jsp2=new JScrollPane();\n  jsp2.setBorder(new LineBorder(ColorResource.getDarkBgColor()));\n  jsp2.getViewport().setOpaque(false);\n  jsp2.setViewportView(qList);\n  jsp2.setBounds(15,y,350 - 40,h);\n  jsp2.setOpaque(false);\n  DarkScrollBar scrollBar=new DarkScrollBar(JScrollBar.VERTICAL);\n  jsp2.setVerticalScrollBar(scrollBar);\n  jsp2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n  p.add(jsp2);\n  y+=h;\n  y+=10;\n  h=25;\n  JButton btnSave=createButton2(\"DESC_PASS_NEW\");\n  btnSave.setName(\"BTN_Q_NEW\");\n  btnSave.setBounds(15,y,80,h);\n  p.add(btnSave);\n  JButton btnDel=createButton2(\"DESC_PASS_DEL\");\n  btnDel.setName(\"BTN_Q_DEL\");\n  btnDel.setBounds(15 + 80 + 10,y,80,h);\n  p.add(btnDel);\n  JButton btnNew=createButton2(\"DESC_SAVE_Q\");\n  btnNew.setName(\"BTN_Q_SAVE\");\n  btnNew.setBounds(350 - 25 - 80,y,80,h);\n  p.add(btnNew);\n  y+=h;\n  y+=20;\n  h=30;\n  JLabel lbl6=new JLabel(StringResource.get(\"MSG_QNAME\"));\n  lbl6.setForeground(Color.WHITE);\n  lbl6.setFont(FontResource.getNormalFont());\n  lbl6.setBounds(15,y,350 - 30,h);\n  p.add(lbl6);\n  y+=h;\n  h=25;\n  txtQueueName=new JTextField();\n  txtQueueName.setCaretColor(Color.WHITE);\n  txtQueueName.setBounds(15,y,350 - 30 - 10,h);\n  txtQueueName.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtQueueName.setEditable(true);\n  txtQueueName.setForeground(Color.WHITE);\n  txtQueueName.setOpaque(false);\n  p.add(txtQueueName);\n  y+=h;\n  y+=20;\n  h=30;\n  JLabel lbl69=new JLabel(StringResource.get(\"Q_LIST_FILES\"));\n  lbl69.setForeground(Color.WHITE);\n  lbl69.setFont(FontResource.getNormalFont());\n  lbl69.setBounds(15,y,350 - 30,h);\n  p.add(lbl69);\n  y+=h;\n  h=100;\n  queuedItemsModel=new DefaultListModel<String>();\n  qItemsList=new JList<String>(queuedItemsModel);\n  qItemsList.setCellRenderer(new QueuedItemsRenderer());\n  qItemsList.setBorder(null);\n  qItemsList.setOpaque(false);\n  qItemsList.addListSelectionListener(this);\n  JScrollPane jsp3=new JScrollPane();\n  jsp3.setBorder(new LineBorder(ColorResource.getDarkBgColor()));\n  jsp3.getViewport().setOpaque(false);\n  jsp3.setViewportView(qItemsList);\n  jsp3.setBounds(15,y,350 - 40,h);\n  jsp3.setOpaque(false);\n  DarkScrollBar scrollBar2=new DarkScrollBar(JScrollBar.VERTICAL);\n  jsp3.setVerticalScrollBar(scrollBar2);\n  jsp3.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n  jsp3.setAutoscrolls(true);\n  p.add(jsp3);\n  y+=h;\n  y+=10;\n  h=25;\n  JButton btnQMoveUp=createButton2(\"Q_MOVE_UP\");\n  btnQMoveUp.setName(\"Q_MOVE_UP\");\n  btnQMoveUp.setBounds(15,y,100,h);\n  p.add(btnQMoveUp);\n  JButton btnQMoveDown=createButton2(\"Q_MOVE_DN\");\n  btnQMoveDown.setName(\"Q_MOVE_DN\");\n  btnQMoveDown.setBounds(15 + 100 + 5,y,100,h);\n  p.add(btnQMoveDown);\n  btnQMoveTo=createButton2(\"Q_MOVE_TO\");\n  btnQMoveTo.setName(\"Q_MOVE_TO\");\n  btnQMoveTo.setBounds(350 - 25 - 100,y,100,h);\n  p.add(btnQMoveTo);\n  y+=h;\n  y+=20;\n  h=30;\n  JLabel lbl68=new JLabel(StringResource.get(\"Q_SCHEDULE_TXT\"));\n  lbl68.setForeground(Color.WHITE);\n  lbl68.setFont(FontResource.getNormalFont());\n  lbl68.setBounds(15,y,350 - 30,h);\n  p.add(lbl68);\n  y+=h;\n  y+=10;\n  h=20;\n  chkQStart=createCheckBox(\"MSG_Q_START\");\n  chkQStart.setBounds(15,y,150,h);\n  chkQStart.addActionListener(this);\n  p.add(chkQStart);\n  spinnerDateModel1=new SpinnerDateModel(new Date(),null,null,Calendar.HOUR_OF_DAY);\n  spStartTime=new JSpinner(spinnerDateModel1);\n  spStartTime.setForeground(Color.WHITE);\n  spStartTime.setBackground(ColorResource.getDarkBgColor());\n  spStartTime.setBorder(null);\n  JSpinner.DateEditor ed1=new JSpinner.DateEditor(spStartTime,\"hh:mm a\");\n  int n=ed1.getComponentCount();\n  for (int i=0; i < n; i++) {\n    Component c=ed1.getComponent(i);\n    if (c instanceof JTextField) {\n      c.setForeground(Color.WHITE);\n      c.setBackground(ColorResource.getDarkBtnColor());\n    }\n  }\n  spStartTime.setEditor(ed1);\n  spStartTime.setBounds(210,y,115,h);\n  p.add(spStartTime);\n  y+=h;\n  y+=5;\n  h=20;\n  chkQStop=createCheckBox(\"MSG_Q_STOP\");\n  chkQStop.setBounds(15,y,150,h);\n  p.add(chkQStop);\n  spinnerDateModel2=new SpinnerDateModel(new Date(),null,null,Calendar.HOUR_OF_DAY);\n  spEndTime=new JSpinner(spinnerDateModel2);\n  spEndTime.setBorder(null);\n  JSpinner.DateEditor ed2=new JSpinner.DateEditor(spEndTime,\"hh:mm a\");\n  n=ed2.getComponentCount();\n  for (int i=0; i < n; i++) {\n    Component c=ed2.getComponent(i);\n    if (c instanceof JTextField) {\n      c.setForeground(Color.WHITE);\n      c.setBackground(ColorResource.getDarkBtnColor());\n    }\n  }\n  spEndTime.setEditor(ed2);\n  spEndTime.setBounds(210,y,115,h);\n  p.add(spEndTime);\n  y+=h;\n  y+=20;\n  ButtonGroup radioGroup=new ButtonGroup();\n  h=30;\n  radOnetime=createRadioButton(\"MSQ_Q_ONETIME\",FontResource.getNormalFont());\n  radOnetime.setName(\"Q_ONCE\");\n  radOnetime.addActionListener(this);\n  radOnetime.setBounds(15,y,120,h);\n  p.add(radOnetime);\n  radOnetime.setEnabled(false);\n  radioGroup.add(radOnetime);\n  y+=5;\n  h=20;\n  spinnerDateModel3=new SpinnerDateModel(new Date(),DateTimeUtils.getBeginDate(),DateTimeUtils.getEndDate(),Calendar.DAY_OF_MONTH);\n  spExecDate=new JSpinner(spinnerDateModel3);\n  spExecDate.setBorder(null);\n  JSpinner.DateEditor ed3=new JSpinner.DateEditor(spExecDate,\"dd-MMM-yy\");\n  n=ed3.getComponentCount();\n  for (int i=0; i < n; i++) {\n    Component c=ed3.getComponent(i);\n    if (c instanceof JTextField) {\n      c.setForeground(Color.WHITE);\n      c.setBackground(ColorResource.getDarkBtnColor());\n    }\n  }\n  spExecDate.setEditor(ed3);\n  spExecDate.setBounds(120,y,205,h);\n  p.add(spExecDate);\n  y+=h;\n  y+=15;\n  radPeriodic=createRadioButton(\"MSG_Q_DAILY\",FontResource.getNormalFont());\n  radPeriodic.setName(\"Q_DAILY\");\n  radPeriodic.addActionListener(this);\n  radPeriodic.setBounds(15,y,100,h);\n  p.add(radPeriodic);\n  radioGroup.add(radPeriodic);\n  h=20;\n  int x=120;\n  chkDays=new JCheckBox[7];\n  for (int i=1; i < 8; i++) {\n    JCheckBox chkDay=createCheckBox(\"MSG_Q_D\" + i,FontResource.getNormalFont());\n    chkDay.setBounds(x,y,100,h);\n    p.add(chkDay);\n    chkDays[i - 1]=chkDay;\n    x+=100;\n    if (i % 2 == 0) {\n      x=120;\n      y+=h;\n    }\n  }\n  y+=h;\n  y+=20;\n  y+=50;\n  p.setPreferredSize(new Dimension(350,y));\n  return p;\n}\n', '0.7777777777777778', '30', '9');
INSERT INTO `case_study` VALUES ('4031', 'createAdvPanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '83', '2501', '1599', '-1000', '3', '0.0849', '0.1388', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', 'private JPanel createAdvPanel(){\n  JPanel p=new JPanel();\n  p.setLayout(null);\n  p.setOpaque(false);\n  int y=20;\n  int h=0;\n  y+=h;\n  h=30;\n  chkHaltAfterFinish=createCheckBox(\"MSG_HALT\");\n  chkHaltAfterFinish.setBounds(15,y,350,h);\n  p.add(chkHaltAfterFinish);\n  y+=h;\n  h=30;\n  chkKeepAwake=createCheckBox(\"MSG_AWAKE\");\n  chkKeepAwake.setBounds(15,y,350,h);\n  p.add(chkKeepAwake);\n  y+=h;\n  h=30;\n  chkExecCmd=createCheckBox(\"EXEC_CMD\");\n  chkExecCmd.setBounds(15,y,350,h);\n  p.add(chkExecCmd);\n  y+=h;\n  h=25;\n  txtCustomCmd=new JTextField();\n  txtCustomCmd.setBounds(15,y,350 - 30 - 10,h);\n  txtCustomCmd.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtCustomCmd.setForeground(Color.WHITE);\n  txtCustomCmd.setOpaque(false);\n  p.add(txtCustomCmd);\n  y+=h;\n  y+=20;\n  h=30;\n  chkExecAntivir=createCheckBox(\"EXE_ANTI_VIR\");\n  chkExecAntivir.setBounds(15,y,350,h);\n  p.add(chkExecAntivir);\n  y+=h;\n  y+=5;\n  h=30;\n  JLabel lbl12=new JLabel(StringResource.get(\"ANTIVIR_CMD\"));\n  lbl12.setForeground(Color.WHITE);\n  lbl12.setFont(FontResource.getNormalFont());\n  lbl12.setBounds(15,y,350 - 30,h);\n  p.add(lbl12);\n  y+=h;\n  h=25;\n  txtAntivirCmd=new JTextField();\n  txtAntivirCmd.setBounds(15,y,350 - 30 - 10- 100,h);\n  txtAntivirCmd.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtAntivirCmd.setForeground(Color.WHITE);\n  txtAntivirCmd.setOpaque(false);\n  p.add(txtAntivirCmd);\n  JButton btnBrowse=createButton2(\"BTN_BROWSE\");\n  btnBrowse.setName(\"BROWSE_ANTIVIR\");\n  btnBrowse.setBackground(ColorResource.getDarkBtnColor());\n  btnBrowse.setFont(FontResource.getNormalFont());\n  btnBrowse.setBounds(15 + 350 - 30 - 110 + 10,y,90,h);\n  p.add(btnBrowse);\n  y+=h;\n  h=30;\n  JLabel lbl1=new JLabel(StringResource.get(\"ANTIVIR_ARGS\"));\n  lbl1.setForeground(Color.WHITE);\n  lbl1.setFont(FontResource.getNormalFont());\n  lbl1.setBounds(15,y,350 - 30,h);\n  p.add(lbl1);\n  y+=h;\n  h=25;\n  txtAntivirArgs=new JTextField();\n  txtAntivirArgs.setBounds(15,y,350 - 30 - 10,h);\n  txtAntivirArgs.setBorder(new LineBorder(ColorResource.getDarkBtnColor()));\n  txtAntivirArgs.setForeground(Color.WHITE);\n  txtAntivirArgs.setOpaque(false);\n  p.add(txtAntivirArgs);\n  y+=h;\n  y+=20;\n  h=30;\n  chkAutoStart=createCheckBox(\"AUTO_START\");\n  chkAutoStart.setBounds(15,y,350,h);\n  p.add(chkAutoStart);\n  y+=h;\n  y+=50;\n  p.setPreferredSize(new Dimension(350,y));\n  return p;\n}\n', '1', '6', '1');
INSERT INTO `case_study` VALUES ('4032', 'loadAdvSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '11', '27', '0', '-1000', '4', '0.1591', '0.159', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void loadAdvSettings(){\n  Config config=Config.getInstance();\n  chkHaltAfterFinish.setSelected(config.isAutoShutdown());\n  chkKeepAwake.setSelected(config.isKeepAwake());\n  chkExecCmd.setSelected(config.isExecCmd());\n  chkExecAntivir.setSelected(config.isExecAntivir());\n  chkAutoStart.setSelected(XDMUtils.isAlreadyAutoStart());\n  if (!StringUtils.isNullOrEmptyOrBlank(config.getCustomCmd()))   txtCustomCmd.setText(config.getCustomCmd());\n  if (!StringUtils.isNullOrEmptyOrBlank(config.getAntivirCmd()))   txtAntivirArgs.setText(config.getAntivirCmd());\n  if (!StringUtils.isNullOrEmptyOrBlank(config.getAntivirExe()))   txtAntivirCmd.setText(config.getAntivirExe());\n}\n', '0.3', '1', '4');
INSERT INTO `case_study` VALUES ('4033', 'saveAdvSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '17', '104', '72', '-1000', '6', '0.105', '0.0852', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private void saveAdvSettings(){\n  Config config=Config.getInstance();\n  config.setAutoShutdown(chkHaltAfterFinish.isSelected());\n  config.setKeepAwake(chkKeepAwake.isSelected());\n  config.setExecCmd(chkExecCmd.isSelected());\n  config.setExecAntivir(chkExecAntivir.isSelected());\n  if (chkAutoStart.isSelected()) {\n    XDMUtils.addToStartup();\n  }\n else {\n    XDMUtils.removeFromStartup();\n  }\n  String customCmd=txtCustomCmd.getText();\n  config.setCustomCmd(customCmd);\n  String antivirExec=txtAntivirCmd.getText();\n  config.setAntivirExe(antivirExec);\n  String antivirCmd=txtAntivirArgs.getText();\n  config.setAntivirCmd(antivirCmd);\n}\n', '0.2', '4', '2');
INSERT INTO `case_study` VALUES ('4034', 'createRadioButton(String,Font)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '10', '17', '0', '-1000', '3', '0.3667', '0.4356', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private JRadioButton createRadioButton(String name,Font font){\n  JRadioButton chk=new JRadioButton(StringResource.get(name));\n  chk.setIcon(ImageResource.get(\"unchecked.png\"));\n  chk.setSelectedIcon(ImageResource.get(\"checked.png\"));\n  chk.setOpaque(false);\n  chk.setFocusPainted(false);\n  chk.setForeground(Color.WHITE);\n  chk.setFont(font);\n  return chk;\n}\n', '1', '3', '1');
INSERT INTO `case_study` VALUES ('4036', 'updateSchedulerFields()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '36', '533', '436', '-1000', '8', '0.066', '0.057', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', 'private void updateSchedulerFields(){\n  int index=qList.getSelectedIndex();\n  if (index < 0)   return;\n  DownloadQueue q=queueModel.getElementAt(index);\n  txtQueueName.setText(q.getName());\n  loadQueuedItems(q);\n  btnQMoveTo.setEnabled(QueueManager.getInstance().getQueueList().size() > 1 && q.getQueuedItems().size() > 0);\n  Date startTime=DateTimeUtils.addTimePart(q.getStartTime());\n  Date endTime=DateTimeUtils.addTimePart(q.getEndTime());\n  if (startTime == null) {\n    endTime=null;\n  }\n  chkQStart.setSelected(startTime != null);\n  chkQStop.setSelected(endTime != null);\n  if (startTime == null) {\n    startTime=DateTimeUtils.getDefaultStart();\n  }\n  if (endTime == null || endTime.before(startTime)) {\n    endTime=DateTimeUtils.getDefaultEnd();\n  }\n  spinnerDateModel1.setValue(startTime);\n  spinnerDateModel2.setValue(endTime);\n  for (int i=1; i <= 7; i++) {\n    JCheckBox chk=chkDays[i - 1];\n    chk.setSelected(false);\n  }\n  int mask=0x01;\n  if (q.isPeriodic()) {\n    for (int i=1; i <= 7; i++) {\n      JCheckBox chk=chkDays[i - 1];\n      chk.setSelected((q.getDayMask() & mask) == mask);\n      mask=mask << 1;\n    }\n    radPeriodic.setSelected(true);\n  }\n else {\n    Date execDate=q.getExecDate();\n    if (execDate == null || execDate.before(new Date())) {\n      execDate=new Date();\n    }\n    radOnetime.setSelected(true);\n    spinnerDateModel3.setValue(execDate);\n  }\n  enableSchedulerFields();\n}\n', '0.25', '10', '12');
INSERT INTO `case_study` VALUES ('4037', 'loadQueuedItems(DownloadQueue)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '8', '21', '14', '-1000', '4', '0.25', '0.108', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void loadQueuedItems(DownloadQueue q){\n  queuedItemsModel.clear();\n  ArrayList<String> idList=q.getQueuedItems();\n  for (int i=0; i < idList.size(); i++) {\n    queuedItemsModel.addElement(idList.get(i));\n  }\n  if (idList.size() > 0) {\n    qItemsList.setSelectedIndex(0);\n  }\n}\n', '1', '3', '3');
INSERT INTO `case_study` VALUES ('4038', 'enableSchedulerFields()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '10', '17', '0', '-1000', '3', '0.225', '0.2278', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void enableSchedulerFields(){\n  radOnetime.setEnabled(chkQStart.isSelected());\n  radPeriodic.setEnabled(chkQStart.isSelected());\n  spExecDate.setEnabled(chkQStart.isSelected());\n  spStartTime.setEnabled(chkQStart.isSelected());\n  spEndTime.setEnabled(chkQStart.isSelected());\n  chkQStop.setEnabled(chkQStart.isSelected());\n  spExecDate.setEnabled(radOnetime.isSelected() && chkQStart.isSelected());\n  for (int i=0; i < 7; i++) {\n    chkDays[i].setEnabled(chkQStart.isSelected() && radPeriodic.isSelected());\n  }\n}\n', '0', '1', '4');
INSERT INTO `case_study` VALUES ('4039', 'saveQueue()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '33', '428', '328', '-1000', '6', '0.0758', '0.0926', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private void saveQueue(){\n  int index=qList.getSelectedIndex();\n  if (index < 0)   return;\n  DownloadQueue q=queueModel.getElementAt(index);\n  if (txtQueueName.getText().length() > 0) {\n    q.setName(txtQueueName.getText());\n  }\n  if (chkQStart.isSelected()) {\n    q.setStartTime(DateTimeUtils.getTimePart(spinnerDateModel1.getDate()));\n    System.out.println(spinnerDateModel1.getDate());\n    if (chkQStop.isSelected()) {\n      q.setEndTime(DateTimeUtils.getTimePart(spinnerDateModel2.getDate()));\n    }\n else {\n      q.setEndTime(-1);\n    }\n    if (radOnetime.isSelected()) {\n      q.setPeriodic(false);\n      q.setExecDate(spinnerDateModel3.getDate());\n      q.setDayMask(0);\n    }\n else {\n      q.setPeriodic(true);\n      q.setExecDate(null);\n      int dayMask=0;\n      int mask=0x01;\n      for (int i=1; i <= 7; i++) {\n        JCheckBox chk=chkDays[i - 1];\n        if (chk.isSelected()) {\n          dayMask|=mask;\n        }\n        mask=mask << 1;\n      }\n      q.setDayMask(dayMask);\n    }\n  }\n else {\n    q.setStartTime(-1);\n  }\n  ArrayList<String> newOrder=new ArrayList<String>(queuedItemsModel.size());\n  for (int i=0; i < queuedItemsModel.size(); i++) {\n    newOrder.add(queuedItemsModel.get(i));\n  }\n  q.reorderItems(newOrder);\n  QueueManager.getInstance().saveQueues();\n}\n', '0.3', '8', '9');
INSERT INTO `case_study` VALUES ('4040', 'queueMoveUp()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '11', '19', '0', '-1000', '3', '0.3636', '0.3086', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void queueMoveUp(){\n  int index=qItemsList.getSelectedIndex();\n  if (index < 0) {\n    return;\n  }\n  if (index == 0) {\n    return;\n  }\n  String prevId=queuedItemsModel.get(index - 1);\n  String nextId=queuedItemsModel.get(index);\n  queuedItemsModel.set(index,prevId);\n  queuedItemsModel.set(index - 1,nextId);\n  qItemsList.setSelectedIndex(index - 1);\n  qItemsList.ensureIndexIsVisible(index - 1);\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('4041', 'queueMoveDown()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '11', '19', '0', '-1000', '3', '0.3247', '0.2556', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void queueMoveDown(){\n  int index=qItemsList.getSelectedIndex();\n  if (index < 0)   return;\n  if (index == queuedItemsModel.size() - 1) {\n    return;\n  }\n  String prevId=queuedItemsModel.get(index);\n  String nextId=queuedItemsModel.get(index + 1);\n  queuedItemsModel.set(index + 1,prevId);\n  queuedItemsModel.set(index,nextId);\n  qItemsList.setSelectedIndex(index + 1);\n  qItemsList.ensureIndexIsVisible(index + 1);\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('4043', 'removeQueue()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '7', '13', '5', '-1000', '3', '0.2857', '0.1375', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void removeQueue(){\n  int index=qList.getSelectedIndex();\n  if (index < 1)   return;\n  DownloadQueue q=queueModel.get(index);\n  QueueManager.getInstance().removeQueue(q.getQueueId());\n  loadSchedulerSettings(index < QueueManager.getInstance().getQueueList().size() ? index : index - 1);\n}\n', '0.5', '2', '3');
INSERT INTO `case_study` VALUES ('4044', 'createNewQueue()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '6', '10', '5', '-1000', '3', '0.3889', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void createNewQueue(){\n  int index=QueueManager.getInstance().getQueueList().size();\n  QueueManager.getInstance().createNewQueue();\n  int count=QueueManager.getInstance().getQueueList().size();\n  loadSchedulerSettings(index < count ? index : 0);\n}\n', '0.3333333333333333', '2', '2');
INSERT INTO `case_study` VALUES ('4045', 'showMoveQPopup(JButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '19', '139', '107', '-1000', '3', '0.1255', '0.0843', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void showMoveQPopup(JButton btn){\n  int index=qList.getSelectedIndex();\n  if (index < 0) {\n    return;\n  }\n  DownloadQueue q=queueModel.get(index);\n  String qid=q.getQueueId();\n  if (qid == null)   return;\n  JPopupMenu popupMenu=new JPopupMenu();\n  for (int i=0; i < QueueManager.getInstance().getQueueList().size(); i++) {\n    DownloadQueue tq=QueueManager.getInstance().getQueueList().get(i);\n    if (qid.equals(tq.getQueueId())) {\n      continue;\n    }\n    JMenuItem item=new JMenuItem(tq.getName());\n    item.setName(\"Q_MOVE_TO:\" + tq.getQueueId());\n    item.addActionListener(this);\n    item.setForeground(Color.WHITE);\n    item.setFont(FontResource.getNormalFont());\n    popupMenu.add(item);\n  }\n  popupMenu.setInvoker(btn);\n  popupMenu.show(btn,0,btn.getHeight());\n}\n', '0.6', '8', '5');
INSERT INTO `case_study` VALUES ('4046', 'saveOverviewSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '12', '42', '18', '-1000', '4', '0.1667', '0.1548', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void saveOverviewSettings(){\n  Config config=Config.getInstance();\n  config.setShowDownloadWindow(chkPrgWnd.isSelected());\n  config.setShowDownloadCompleteWindow(chkEndWnd.isSelected());\n  String text=cmbMax.getSelectedItem() + \"\";\n  if (\"N/A\".equals(text)) {\n    config.setMaxDownloads(0);\n  }\n else {\n    config.setMaxDownloads(Integer.parseInt(text));\n  }\n  config.setDownloadFolder(txtDefFolder.getText());\n  config.save();\n}\n', '0.16666666666666666', '2', '2');
INSERT INTO `case_study` VALUES ('4047', 'saveMonitoringSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '7', '11', '1', '-1000', '3', '0.2653', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void saveMonitoringSettings(){\n  Config config=Config.getInstance();\n  config.setFileExts(XDMUtils.appendStr2Array(txtFileTyp.getText()));\n  config.setVidExts(XDMUtils.appendStr2Array(txtVidType.getText()));\n  config.setBlockedHosts(XDMUtils.appendStr2Array(txtBlockedHosts.getText()));\n  config.setShowVideoNotification(chkVidPan.isSelected());\n}\n', '0.3333333333333333', '1', '1');
INSERT INTO `case_study` VALUES ('4048', 'saveNetworkSettings()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SettingsPage.java', 'xdm', '55', '1294', '1103', '-1000', '10', '0.0552', '0.0506', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void saveNetworkSettings(){\n  Config config=Config.getInstance();\n  config.setNetworkTimeout(cmbTimeout.getSelectedItem().equals(\"N/A\") ? 0 : Integer.parseInt(cmbTimeout.getSelectedItem() + \"\"));\n  config.setMaxSegments(Integer.parseInt(cmbSeg.getSelectedItem() + \"\"));\n  config.setTcpWindowSize(Integer.parseInt(cmbTcp.getSelectedItem() + \"\"));\n  try {\n    int speedLimit=Integer.parseInt(txtSpeedLimit.getText());\n    config.setSpeedLimit(speedLimit);\n  }\n catch (  Exception e) {\n  }\n  int proxyMode=0;\n  if (chkUsePac.isSelected()) {\n    proxyMode=1;\n  }\n else   if (chkUseProxy.isSelected()) {\n    proxyMode=2;\n  }\n else   if (chkUseSocks.isSelected()) {\n    proxyMode=3;\n  }\n  config.setProxyMode(proxyMode);\n  config.setProxyPac(txtPACUrl.getText());\n  String proxyText=txtProxyHostnPort.getText();\n  if (proxyText.length() > 0) {\n    String host=null;\n    int port=80;\n    if (proxyText.indexOf(\":\") != -1) {\n      String[] arr=proxyText.split(\":\");\n      host=arr[0];\n      try {\n        port=Integer.parseInt(arr[1]);\n      }\n catch (      Exception e) {\n        host=null;\n        port=0;\n      }\n    }\n else {\n      host=proxyText;\n    }\n    if (port > 0 && host != null && host.length() > 0) {\n      config.setProxyHost(host);\n      config.setProxyPort(port);\n    }\n  }\n  String socksText=txtSocksHostnPort.getText();\n  if (socksText.length() > 0) {\n    String host=null;\n    int port=1080;\n    if (socksText.indexOf(\":\") != -1) {\n      String[] arr=socksText.split(\":\");\n      host=arr[0];\n      try {\n        port=Integer.parseInt(arr[1]);\n      }\n catch (      Exception e) {\n        host=null;\n        port=0;\n      }\n    }\n else {\n      host=socksText;\n    }\n    if (port > 0 && host != null && host.length() > 0) {\n      config.setSocksHost(host);\n      config.setSocksPort(port);\n    }\n  }\n  config.setProxyUser(txtProxyUser.getText());\n  config.setProxyPass(txtProxyPass.getText());\n}\n', '0.07692307692307693', '14', '18');
INSERT INTO `case_study` VALUES ('4052', 'SimpleListRenderer()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\SimpleListRenderer.java', 'xdm', '7', '21', '21', '-1000', '7', '0.1429', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public SimpleListRenderer(){\n  setForeground(Color.WHITE);\n  setFont(FontResource.getNormalFont());\n  setOpaque(true);\n  setPreferredSize(new Dimension(100,30));\n  setBorder(new EmptyBorder(0,5,0,0));\n}\n', '1', '0', '1');
INSERT INTO `case_study` VALUES ('4059', 'createTray()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\TrayHandler.java', 'xdm', '9', '34', '32', '-1000', '7', '0.1389', '0.0417', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public static void createTray(){\n  if (!SystemTray.isSupported()) {\n    Logger.log(\"SystemTray is not supported\");\n    return;\n  }\n  if (XDMUtils.detectOS() == XDMUtils.LINUX) {\n    return;\n  }\n  final PopupMenu popup=new PopupMenu();\n  final TrayIcon trayIcon=new TrayIcon(ImageResource.get(\"icon.png\").getImage());\n  trayIcon.setImageAutoSize(true);\n  final SystemTray tray=SystemTray.getSystemTray();\n  act=new ActionListener(){\n    @Override public void actionPerformed(    ActionEvent e){\n      MenuItem c=(MenuItem)e.getSource();\n      String name=c.getName();\n      System.out.println(name);\n      if (\"ADD_URL\".equals(name)) {\n        XDMApp.getInstance().addDownload(null,null);\n      }\n else       if (\"RESTORE\".equals(name)) {\n        XDMApp.getInstance().showMainWindow();\n      }\n else       if (\"EXIT\".equals(name)) {\n        XDMApp.getInstance().exit();\n      }\n    }\n  }\n;\n  MenuItem addUrlItem=new MenuItem(StringResource.get(\"MENU_ADD_URL\"));\n  addUrlItem.addActionListener(act);\n  addUrlItem.setName(\"ADD_URL\");\n  MenuItem restoreItem=new MenuItem(StringResource.get(\"MSG_RESTORE\"));\n  restoreItem.addActionListener(act);\n  restoreItem.setName(\"RESTORE\");\n  MenuItem exitItem=new MenuItem(StringResource.get(\"MENU_EXIT\"));\n  exitItem.addActionListener(act);\n  exitItem.setName(\"EXIT\");\n  popup.add(addUrlItem);\n  popup.add(restoreItem);\n  popup.add(exitItem);\n  trayIcon.setPopupMenu(popup);\n  try {\n    tray.add(trayIcon);\n  }\n catch (  AWTException e) {\n    Logger.log(\"TrayIcon could not be added.\");\n  }\n}\n', '0.625', '10', '4');
INSERT INTO `case_study` VALUES ('4061', 'UpdateNotifyPanel()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\UpdateNotifyPanel.java', 'xdm', '15', '90', '75', '-1000', '6', '0.15', '0.0657', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public UpdateNotifyPanel(){\n  super(new BorderLayout());\n  setBorder(new EmptyBorder(10,15,10,15));\n  JPanel p2=new JPanel(new BorderLayout());\n  lbl=new JLabel();\n  lbl.setFont(FontResource.getItemFont());\n  p2.add(lbl);\n  desc=new JLabel();\n  p2.add(desc,BorderLayout.SOUTH);\n  add(p2,BorderLayout.CENTER);\n  JButton btn=new JButton(StringResource.get(\"LBL_INSTALL_NOW\"));\n  btn.setFont(FontResource.getItemFont());\n  btn.setName(\"OPT_UPDATE_FFMPEG\");\n  btn.addActionListener(new ActionListener(){\n    @Override public void actionPerformed(    ActionEvent e){\n      if (mode == UpdateChecker.APP_UPDATE_AVAILABLE) {\n        XDMUtils.browseURL(\"http://xdman.sourceforge.net/update/update.php?ver=\" + XDMApp.APP_VERSION);\n      }\n else {\n        FFmpegDownloader fd=new FFmpegDownloader();\n        fd.start();\n      }\n      XDMApp.getInstance().clearNotifications();\n    }\n  }\n);\n  add(btn,BorderLayout.EAST);\n}\n', '0.7142857142857143', '4', '1');
INSERT INTO `case_study` VALUES ('4064', 'VideoDownloadWindow(HttpMetadata,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '10', '41', '37', '-1000', '7', '0.15', '0.0476', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public VideoDownloadWindow(HttpMetadata metadata,String file){\n  this.folder=Config.getInstance().getDownloadFolder();\n  this.metadata=metadata;\n  if (this.metadata == null) {\n    this.metadata=new HttpMetadata();\n  }\n  initUI();\n  if (file != null && file.length() > 0) {\n    txtFile.setText(file);\n  }\n  getRootPane().setDefaultButton(btnDN);\n  addWindowListener(new WindowAdapter(){\n    @Override public void windowActivated(    WindowEvent e){\n      txtFile.requestFocus();\n    }\n  }\n);\n  queueId=\"\";\n}\n', '0.6666666666666666', '7', '4');
INSERT INTO `case_study` VALUES ('4066', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '20', '160', '130', '-1000', '8', '0.19', '0.1229', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  if (e.getSource() instanceof JComponent) {\n    String name=((JComponent)e.getSource()).getName();\n    if (name.startsWith(\"QUEUE\")) {\n      System.out.println(name);\n      String[] arr=name.split(\":\");\n      if (arr.length < 2) {\n        queueId=\"\";\n      }\n else {\n        queueId=arr[1].trim();\n      }\n      createDownload(false);\n    }\n else     if (name.equals(\"STREAM\")) {\n      updateAppliableFormats();\n    }\n else     if (name.equals(\"CLOSE\")) {\n      dispose();\n    }\n else     if (name.equals(\"DOWNLOAD_NOW\")) {\n      queueId=\"\";\n      createDownload(true);\n    }\n else     if (name.equals(\"BTN_MORE\")) {\n      if (pop == null) {\n        createPopup();\n      }\n      pop.show(btnMore,0,btnMore.getHeight());\n    }\n else     if (name.equals(\"BROWSE_FOLDER\")) {\n      choseFolder();\n    }\n  }\n}\n', '0', '3', '10');
INSERT INTO `case_study` VALUES ('4067', 'createDownload(boolean)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '22', '223', '215', '-1000', '17', '0.072', '0.0256', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void createDownload(boolean now){\n  String fileName=txtFile.getText();\n  if (fileName.length() < 1) {\n    JOptionPane.showMessageDialog(this,StringResource.get(\"MSG_NO_URL\"));\n    return;\n  }\n  dispose();\n  Logger.log(\"file: \" + txtFile.getText());\n  if (txtFile.getText().length() < 1) {\n    JOptionPane.showMessageDialog(this,StringResource.get(\"MSG_NO_FILE\"));\n    return;\n  }\n  XDMApp.getInstance().createDownload(txtFile.getText(),folder,metadata,now,queueId,0,cmbStmAction.getSelectedIndex());\n}\n', '0.75', '2', '3');
INSERT INTO `case_study` VALUES ('4068', 'choseFolder()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '6', '11', '7', '-1000', '3', '0.25', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void choseFolder(){\n  JFileChooser jfc=XDMFileChooser.getFileChooser(JFileChooser.DIRECTORIES_ONLY,new File(folder));\n  if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {\n    folder=jfc.getSelectedFile().getAbsolutePath();\n    Config.getInstance().setDownloadFolder(folder);\n  }\n}\n', '0.6666666666666666', '1', '2');
INSERT INTO `case_study` VALUES ('4072', 'update(DocumentEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '8', '23', '18', '-1000', '4', '0.2031', '0.0722', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'void update(DocumentEvent e){\n  try {\n    Document doc=e.getDocument();\n    int len=doc.getLength();\n    String text=doc.getText(0,len);\n    txtFile.setText(XDMUtils.getFileName(text));\n  }\n catch (  Exception err) {\n    Logger.log(err);\n  }\n}\n', '1', '5', '2');
INSERT INTO `case_study` VALUES ('4073', 'initUI()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '106', '5263', '4961', '-1000', '24', '0.0369', '0.0288', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private void initUI(){\n  setUndecorated(true);\n  try {\n    if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n      setOpacity(0.85f);\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n  setIconImage(ImageResource.get(\"icon.png\").getImage());\n  setSize(400,210);\n  setLocationRelativeTo(null);\n  setAlwaysOnTop(true);\n  getContentPane().setLayout(null);\n  getContentPane().setBackground(ColorResource.getDarkestBgColor());\n  JPanel titlePanel=new TitlePanel(null,this);\n  titlePanel.setOpaque(false);\n  titlePanel.setBounds(0,0,400,50);\n  JButton closeBtn=new CustomButton();\n  closeBtn.setBounds(365,5,30,30);\n  closeBtn.setBackground(ColorResource.getDarkestBgColor());\n  closeBtn.setBorderPainted(false);\n  closeBtn.setFocusPainted(false);\n  closeBtn.setName(\"CLOSE\");\n  closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n  closeBtn.addActionListener(this);\n  titlePanel.add(closeBtn);\n  JLabel titleLbl=new JLabel(StringResource.get(\"VID_TITLE\"));\n  titleLbl.setFont(FontResource.getBiggerFont());\n  titleLbl.setForeground(ColorResource.getSelectionColor());\n  titleLbl.setBounds(25,15,200,30);\n  titlePanel.add(titleLbl);\n  JLabel lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getSelectionColor());\n  lineLbl.setBounds(0,55,400,1);\n  lineLbl.setOpaque(true);\n  add(lineLbl);\n  txtFile=new JTextField();\n  txtFile.setBorder(new LineBorder(ColorResource.getSelectionColor(),1));\n  txtFile.setBackground(ColorResource.getDarkestBgColor());\n  txtFile.setForeground(Color.WHITE);\n  txtFile.setBounds(77,79,241,20);\n  txtFile.setCaretColor(ColorResource.getSelectionColor());\n  add(txtFile);\n  JButton browse=new CustomButton(\"...\");\n  browse.setName(\"BROWSE_FOLDER\");\n  browse.setMargin(new Insets(0,0,0,0));\n  browse.setBounds(325,79,40,20);\n  browse.setFocusPainted(false);\n  browse.setBackground(ColorResource.getDarkestBgColor());\n  browse.setBorder(new LineBorder(ColorResource.getSelectionColor(),1));\n  browse.setForeground(Color.WHITE);\n  browse.addActionListener(this);\n  browse.setFont(FontResource.getItemFont());\n  add(browse);\n  add(titlePanel);\n  JLabel lblFile=new JLabel(StringResource.get(\"ND_FILE\"),JLabel.RIGHT);\n  lblFile.setFont(FontResource.getNormalFont());\n  lblFile.setForeground(Color.WHITE);\n  lblFile.setBounds(10,79,61,23);\n  add(lblFile);\n  formatListModel=new DefaultComboBoxModel<MediaFormat>(MediaFormats.getSupportedFormats());\n  JLabel lblStream=new JLabel(StringResource.get(\"O_STM_FTM\"),JLabel.RIGHT);\n  lblStream.setFont(FontResource.getNormalFont());\n  lblStream.setForeground(Color.WHITE);\n  lblStream.setBounds(10,111,61,20);\n  add(lblStream);\n  cmbStmAction=new JComboBox<String>(new String[]{StringResource.get(\"VID_FMT_BOTH\"),StringResource.get(\"VID_FMT_AUDIO\"),StringResource.get(\"VID_FMT_VIDEO\")});\n  cmbStmAction.addActionListener(this);\n  cmbStmAction.setOpaque(true);\n  cmbStmAction.setBounds(77,111,291,20);\n  cmbStmAction.setName(\"STREAM\");\n  add(cmbStmAction);\n  JPanel panel=new JPanel(null);\n  panel.setBounds(0,155,400,55);\n  panel.setBackground(Color.DARK_GRAY);\n  add(panel);\n  btnMore=new CustomButton(StringResource.get(\"ND_MORE\"));\n  btnDN=new CustomButton(StringResource.get(\"ND_DOWNLOAD_NOW\"));\n  btnCN=new CustomButton(StringResource.get(\"ND_CANCEL\"));\n  btnMore.setBounds(0,1,120,55);\n  btnMore.setName(\"BTN_MORE\");\n  styleButton(btnMore);\n  panel.add(btnMore);\n  btnDN.setBounds(121,1,160,55);\n  btnDN.setName(\"DOWNLOAD_NOW\");\n  styleButton(btnDN);\n  panel.add(btnDN);\n  btnCN.setBounds(282,1,120,55);\n  btnCN.setName(\"CLOSE\");\n  styleButton(btnCN);\n  panel.add(btnCN);\n  Logger.log(\"Dash metadata? \" + (metadata instanceof DashMetadata));\n  cmbStmAction.setEnabled(metadata != null && metadata instanceof DashMetadata);\n}\n', '0.7272727272727273', '9', '4');
INSERT INTO `case_study` VALUES ('4074', 'createPopup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '19', '121', '71', '-1000', '4', '0.152', '0.1488', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void createPopup(){\n  pop=new JPopupMenu();\n  pop.setBackground(ColorResource.getDarkerBgColor());\n  JMenu dl=new JMenu(StringResource.get(\"ND_DOWNLOAD_LATER\"));\n  dl.setForeground(Color.WHITE);\n  dl.setBorder(new EmptyBorder(5,5,5,5));\n  dl.addActionListener(this);\n  dl.setBackground(ColorResource.getDarkerBgColor());\n  dl.setBorderPainted(false);\n  pop.add(dl);\n  createQueueItems(dl);\n  JMenuItem ig=new JMenuItem(StringResource.get(\"ND_IGNORE_URL\"));\n  ig.setName(\"IGNORE_URL\");\n  ig.setForeground(Color.WHITE);\n  ig.addActionListener(this);\n  pop.add(ig);\n  pop.setInvoker(btnMore);\n}\n', '1', '2', '1');
INSERT INTO `case_study` VALUES ('4075', 'styleButton(CustomButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '10', '17', '0', '-1000', '3', '0.26', '0.3295', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private void styleButton(CustomButton btn){\n  btn.setBackground(ColorResource.getDarkestBgColor());\n  btn.setPressedBackground(ColorResource.getDarkerBgColor());\n  btn.setForeground(Color.WHITE);\n  btn.setFont(FontResource.getBigFont());\n  btn.setBorderPainted(false);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setFocusPainted(false);\n  btn.addActionListener(this);\n}\n', '0.75', '1', '1');
INSERT INTO `case_study` VALUES ('4076', 'createQueueItems(JMenuItem)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '10', '31', '17', '-1000', '3', '0.2143', '0.1477', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void createQueueItems(JMenuItem queueMenuItem){\n  ArrayList<DownloadQueue> queues=XDMApp.getInstance().getQueueList();\n  for (int i=0; i < queues.size(); i++) {\n    DownloadQueue q=queues.get(i);\n    JMenuItem mItem=new JMenuItem(q.getName().length() < 1 ? \"Default queue\" : q.getName());\n    mItem.setName(\"QUEUE:\" + q.getQueueId());\n    mItem.setForeground(Color.WHITE);\n    mItem.addActionListener(this);\n    queueMenuItem.add(mItem);\n  }\n}\n', '0.5', '5', '3');
INSERT INTO `case_study` VALUES ('4077', 'updateAppliableFormats()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoDownloadWindow.java', 'xdm', '13', '50', '22', '-1000', '3', '0.2436', '0.184', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void updateAppliableFormats(){\n  int index=cmbStmAction.getSelectedIndex();\n  if (index < 0)   return;\n  MediaFormat[] fmts=MediaFormats.getSupportedFormats();\n  formatListModel.removeAllElements();\n  for (  MediaFormat fmt : fmts) {\n    if (index == 1) {\n      if (fmt.isAudioOnly()) {\n        formatListModel.addElement(fmt);\n      }\n    }\n else     if (index == 2) {\n      if (!fmt.isAudioOnly() && fmt.getWidth() > 0) {\n        formatListModel.addElement(fmt);\n      }\n    }\n else {\n      formatListModel.addElement(fmt);\n    }\n  }\n}\n', '0.6666666666666666', '3', '8');
INSERT INTO `case_study` VALUES ('4087', 'addVideo(HttpMetadata,String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '27', '224', '97', '-1000', '6', '0.1222', '0.2004', '0', '0', '0', '0', '0', '1', '1', '0', '1', '1', 'public synchronized void addVideo(HttpMetadata metadata,String file,String info){\n  VideoPopupItem item=new VideoPopupItem();\n  item.setMetadata(metadata);\n  item.setInfo(info);\n  item.setFile(file);\n  item.setTimestamp(System.currentTimeMillis());\n  if (addItem(item)) {\n    CustomButton cb=new CustomButton();\n    cb.setHorizontalAlignment(JButton.LEFT);\n    cb.setHorizontalTextPosition(JButton.LEFT);\n    cb.setMargin(new Insets(0,0,0,0));\n    cb.setForeground(Color.WHITE);\n    cb.setName(metadata.getId());\n    cb.setText(item.toString());\n    cb.setBackground(ColorResource.getDarkestBgColor());\n    cb.setBorderPainted(false);\n    cb.setFocusPainted(false);\n    cb.setPreferredSize(new Dimension(250,30));\n    cb.setMinimumSize(new Dimension(250,30));\n    cb.setMaximumSize(new Dimension(250,30));\n    cb.addActionListener(this);\n    menuBox.add(cb,0);\n    if (!isVisible()) {\n      setVisible(true);\n    }\n    revalidate();\n    repaint();\n  }\n}\n', '0.4444444444444444', '5', '3');
INSERT INTO `case_study` VALUES ('4088', 'arrangeList()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '8', '20', '12', '-1000', '3', '0.25', '0.1235', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private void arrangeList(){\n  videoItems.clear();\n  ArrayList<VideoPopupItem> itemsCopy=new ArrayList<VideoPopupItem>();\n  itemsCopy.addAll(itemList);\n  Collections.sort(itemsCopy,this);\n  for (  VideoPopupItem item : itemsCopy) {\n    videoItems.addElement(item);\n  }\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('4089', 'VideoPopup()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '21', '207', '204', '-1000', '19', '0.0576', '0.0048', '0', '0', '0', '0', '0', '1', '1', '1', '1', '0', 'private VideoPopup(){\n  itemList=new ArrayList<VideoPopupItem>();\n  videoItems=new DefaultListModel<VideoPopupItem>();\n  init();\n  Dimension d=Toolkit.getDefaultToolkit().getScreenSize();\n  Insets scnMax=Toolkit.getDefaultToolkit().getScreenInsets(this.getGraphicsConfiguration());\n  this.setLocation(d.width - getWidth() - 50,d.height - scnMax.bottom - getHeight()- 30);\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('4090', 'init()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '88', '3657', '3486', '-1000', '52', '0.0341', '0.0284', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private void init(){\n  try {\n    setUndecorated(true);\n    setSize(250,40);\n    setIconImage(ImageResource.get(\"icon.png\").getImage());\n    setFocusableWindowState(false);\n    setType(Type.UTILITY);\n    setAlwaysOnTop(true);\n    try {\n      if (GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().isWindowTranslucencySupported(WindowTranslucency.TRANSLUCENT)) {\n        setOpacity(0.85f);\n      }\n    }\n catch (    Exception e) {\n      Logger.log(e);\n    }\n    panel=new JPanel(new BorderLayout());\n    panel.setBackground(ColorResource.getDarkestBgColor());\n    add(panel);\n    bottomPanel=new TitlePanel(new BorderLayout(),this);\n    bottomPanel.setBorder(new EmptyBorder(0,20,0,0));\n    bottomPanel.setOpaque(true);\n    bottomPanel.setBackground(ColorResource.getDarkerBgColor());\n    panel.add(bottomPanel);\n    JButton closeBtn=new CustomButton();\n    closeBtn.setPreferredSize(new Dimension(30,40));\n    closeBtn.setMinimumSize(new Dimension(30,40));\n    closeBtn.setBackground(ColorResource.getDarkerBgColor());\n    closeBtn.setBorderPainted(false);\n    closeBtn.setFocusPainted(false);\n    closeBtn.setName(\"CLOSE\");\n    closeBtn.setIcon(ImageResource.get(\"close_btn.png\"));\n    closeBtn.setMargin(new Insets(0,0,0,0));\n    closeBtn.addActionListener(this);\n    bottomPanel.add(closeBtn,BorderLayout.EAST);\n    JButton popupBtn=new CustomButton();\n    popupBtn.setBackground(ColorResource.getDarkerBgColor());\n    popupBtn.setFont(FontResource.getItemFont());\n    popupBtn.setPreferredSize(new Dimension(200,40));\n    popupBtn.setMinimumSize(new Dimension(200,40));\n    popupBtn.setBorderPainted(false);\n    popupBtn.setForeground(Color.WHITE);\n    popupBtn.setText(\"DOWNLOAD VIDEO\");\n    popupBtn.setFocusPainted(false);\n    popupBtn.setName(\"EXPAND\");\n    popupBtn.addActionListener(this);\n    bottomPanel.add(popupBtn);\n    itemPanel=new JPanel(new BorderLayout());\n    itemPanel.setOpaque(false);\n    itemListBox=new JList<VideoPopupItem>(videoItems);\n    itemListBox.setOpaque(false);\n    itemListBox.setCellRenderer(new SimpleListRenderer());\n    itemListBox.addMouseMotionListener(new MouseAdapter(){\n      public void mouseMoved(      MouseEvent me){\n        Point p=new Point(me.getX(),me.getY());\n        int index=itemListBox.locationToIndex(p);\n        if (index != mHoveredJListIndex) {\n          mHoveredJListIndex=index;\n          if (mHoveredJListIndex != -1) {\n            itemListBox.setSelectedIndex(mHoveredJListIndex);\n          }\n else {\n            itemListBox.clearSelection();\n          }\n        }\n      }\n      @Override public void mouseExited(      MouseEvent e){\n        itemListBox.clearSelection();\n        itemListBox.repaint();\n      }\n    }\n);\n    JScrollPane jsp=new JScrollPane();\n    jsp.setOpaque(false);\n    jsp.setBorder(null);\n    jsp.getViewport().setOpaque(false);\n    DarkScrollBar scrollBar=new DarkScrollBar(JScrollBar.VERTICAL);\n    jsp.setVerticalScrollBar(scrollBar);\n    jsp.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n    jsp.getVerticalScrollBar().setUnitIncrement(10);\n    jsp.getVerticalScrollBar().setBlockIncrement(25);\n    menuBox=Box.createVerticalBox();\n    menuBox.add(Box.createVerticalGlue());\n    jsp.setViewportView(menuBox);\n    itemPanel.add(jsp);\n    closePopupBtn=new CustomButton();\n    closePopupBtn.setBackground(ColorResource.getDarkerBgColor());\n    closePopupBtn.setBorderPainted(false);\n    closePopupBtn.setFocusPainted(false);\n    closePopupBtn.setName(\"COLAPSE\");\n    closePopupBtn.addActionListener(this);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n', '0.8888888888888888', '10', '4');
INSERT INTO `case_study` VALUES ('4093', 'actionPerformed(ActionEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '19', '152', '133', '-1000', '7', '0.1053', '0.0568', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '@Override public void actionPerformed(ActionEvent e){\n  String name=((JComponent)e.getSource()).getName();\n  for (  VideoPopupItem item : itemList) {\n    if (name.equals(item.getMetadata().getId())) {\n      collapse();\n      HttpMetadata md=item.getMetadata().derive();\n      Logger.log(\"dash metdata ? \" + (md instanceof DashMetadata));\n      XDMApp.getInstance().addVideo(md,item.getFile());\n    }\n  }\n  if (name.equals(\"CLOSE\")) {\n    collapse();\n    setVisible(false);\n    menuBox.removeAll();\n    itemList.clear();\n  }\n else   if (name.equals(\"COLAPSE\")) {\n    collapse();\n  }\n else   if (name.equals(\"EXPAND\")) {\n    if (!expanded) {\n      expand();\n    }\n else {\n      collapse();\n    }\n  }\n}\n', '0.5714285714285714', '4', '7');
INSERT INTO `case_study` VALUES ('4094', 'expand()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '29', '341', '276', '-1000', '8', '0.1172', '0.0618', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void expand(){\n  initialY=getLocationOnScreen().y;\n  int screenHeight=Toolkit.getDefaultToolkit().getScreenSize().height;\n  int preferedExpandedHeight=400;\n  int bottomTaskbarHeight, topTaskbarHeight;\n  Insets scnMax=Toolkit.getDefaultToolkit().getScreenInsets(this.getGraphicsConfiguration());\n  bottomTaskbarHeight=scnMax.bottom;\n  topTaskbarHeight=scnMax.top;\n  upward=initialY > (screenHeight - (bottomTaskbarHeight + topTaskbarHeight)) / 2;\n  arrangeList();\n  panel.remove(bottomPanel);\n  panel.add(itemPanel);\n  if (upward) {\n    if (getY() - topTaskbarHeight < preferedExpandedHeight) {\n      preferedExpandedHeight=getY() - topTaskbarHeight;\n    }\n    setLocation(getX(),initialY - preferedExpandedHeight + getHeight());\n    panel.add(bottomPanel,BorderLayout.SOUTH);\n    itemPanel.add(closePopupBtn,BorderLayout.NORTH);\n    closePopupBtn.setIcon(ImageResource.get(\"down_arrow.png\"));\n  }\n else {\n    if (screenHeight - getY() - bottomTaskbarHeight < preferedExpandedHeight) {\n      preferedExpandedHeight=screenHeight - getY() - bottomTaskbarHeight;\n    }\n    panel.add(bottomPanel,BorderLayout.NORTH);\n    itemPanel.add(closePopupBtn,BorderLayout.SOUTH);\n    closePopupBtn.setIcon(ImageResource.get(\"up_arrow.png\"));\n  }\n  setSize(getWidth(),preferedExpandedHeight);\n  revalidate();\n  repaint();\n  expanded=true;\n}\n', '1', '7', '4');
INSERT INTO `case_study` VALUES ('4095', 'collapse()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '14', '85', '79', '-1000', '9', '0.1327', '0.0453', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private void collapse(){\n  panel.remove(bottomPanel);\n  panel.remove(itemPanel);\n  int height=getHeight();\n  int locationY=getY() + height - 40;\n  setSize(getWidth(),40);\n  if (upward) {\n    setLocation(getX(),locationY);\n  }\n  panel.add(bottomPanel);\n  revalidate();\n  repaint();\n  expanded=false;\n  upward=false;\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('4096', 'compare(VideoPopupItem,VideoPopupItem)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '7', '15', '9', '-1000', '4', '0.25', '0.225', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@Override public int compare(VideoPopupItem item1,VideoPopupItem item2){\n  int ret=0;\n  if (item1.getTimestamp() > item2.getTimestamp()) {\n    ret=1;\n  }\n else   if (item1.getTimestamp() < item2.getTimestamp()) {\n    ret=1;\n  }\n  return upward ? ret : -ret;\n}\n', '1', '3', '4');
INSERT INTO `case_study` VALUES ('4097', 'addItem(VideoPopupItem)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\VideoPopup.java', 'xdm', '14', '60', '29', '-1000', '3', '0.2321', '0.1489', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private boolean addItem(VideoPopupItem item){\n  if (item.getMetadata() == null) {\n    return false;\n  }\n  for (int i=0; i < itemList.size(); i++) {\n    VideoPopupItem p=itemList.get(i);\n    HttpMetadata m1=item.getMetadata();\n    HttpMetadata m2=p.getMetadata();\n    if (m1.getType() == m2.getType()) {\n      if (m1.getUrl().equals(m2.getUrl())) {\n        if (m1 instanceof DashMetadata) {\n          DashMetadata dm1=(DashMetadata)m1;\n          DashMetadata dm2=(DashMetadata)m2;\n          if (dm1.getUrl2().equals(dm2.getUrl2())) {\n            return false;\n          }\n        }\n else {\n          return false;\n        }\n      }\n    }\n  }\n  itemList.add(item);\n  return true;\n}\n', '0.75', '7', '7');
INSERT INTO `case_study` VALUES ('4117', 'XDMFrame()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '26', '275', '225', '-1000', '6', '0.0931', '0.0521', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'public XDMFrame(){\n  setUndecorated(true);\n  createCursors();\n  contentPane=new JPanel(new BorderLayout());\n  modalPane=new LayeredPanel(150);\n  modalPane.setVisible(false);\n  dialogPane=new LayeredPanel(40);\n  dialogPane.setVisible(false);\n  createResizeGrip();\n  panTitle=new TitlePanel(new BorderLayout(),this);\n  panTitle.setBackground(ColorResource.getTitleColor());\n  panTitle.setBorder(new EmptyBorder(5,5,0,5));\n  panTitle.setOpaque(true);\n  registerTitlePanel(panTitle);\n  panClient=new JPanel(new BorderLayout());\n  panClient.setBackground(Color.WHITE);\n  JPanel panContent=new JPanel(new BorderLayout());\n  panContent.add(panTitle,BorderLayout.NORTH);\n  panContent.add(panClient);\n  contentPane.add(panContent);\n  layeredPane=new JLayeredPane();\n  layeredPane.add(contentPane,new Integer(DEFAULT_LAYER));\n  layeredPane.add(modalPane,new Integer(MODAL_LAYER));\n  layeredPane.add(dialogPane,new Integer(DIALOG_LAYER));\n  super.add(layeredPane);\n  super.addComponentListener(this);\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('4124', 'createResizeGrip()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '62', '1781', '1671', '-1000', '36', '0.0842', '0.0372', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private void createResizeGrip(){\n  GripMouseAdapter gma=new GripMouseAdapter();\n  lblRightGrip=new JLabel();\n  lblRightGrip.setMaximumSize(new Dimension(2,lblRightGrip.getMaximumSize().height));\n  lblRightGrip.setPreferredSize(new Dimension(2,lblRightGrip.getPreferredSize().height));\n  lblRightGrip.setBackground(Color.BLACK);\n  lblRightGrip.setOpaque(true);\n  contentPane.add(lblRightGrip,BorderLayout.EAST);\n  lblBottomGrip=new JLabel();\n  lblBottomGrip.setMaximumSize(new Dimension(lblBottomGrip.getPreferredSize().width,2));\n  lblBottomGrip.setPreferredSize(new Dimension(lblBottomGrip.getPreferredSize().width,2));\n  lblBottomGrip.setBackground(Color.BLACK);\n  lblBottomGrip.setOpaque(true);\n  contentPane.add(lblBottomGrip,BorderLayout.SOUTH);\n  lblLeftGrip=new JLabel();\n  lblLeftGrip.setMaximumSize(new Dimension(2,lblLeftGrip.getPreferredSize().height));\n  lblLeftGrip.setPreferredSize(new Dimension(2,lblLeftGrip.getPreferredSize().height));\n  lblLeftGrip.setBackground(Color.BLACK);\n  lblLeftGrip.setOpaque(true);\n  contentPane.add(lblLeftGrip,BorderLayout.WEST);\n  lblTopGrip=new JLabel();\n  lblTopGrip.setMaximumSize(new Dimension(lblTopGrip.getPreferredSize().width,2));\n  lblTopGrip.setPreferredSize(new Dimension(lblTopGrip.getPreferredSize().width,2));\n  lblTopGrip.setBackground(Color.BLACK);\n  lblTopGrip.setOpaque(true);\n  contentPane.add(lblTopGrip,BorderLayout.NORTH);\n  if (isResizable()) {\n    lblTopGrip.addMouseListener(gma);\n    lblTopGrip.addMouseMotionListener(new MouseMotionAdapter(){\n      @Override public void mouseDragged(      MouseEvent me){\n        int y=me.getYOnScreen();\n        int diff=XDMFrame.this.getLocationOnScreen().y - y;\n        XDMFrame.this.setLocation(XDMFrame.this.getLocation().x,me.getLocationOnScreen().y);\n        XDMFrame.this.setSize(XDMFrame.this.getWidth(),XDMFrame.this.getHeight() + diff);\n      }\n    }\n);\n    lblRightGrip.addMouseListener(gma);\n    lblRightGrip.addMouseMotionListener(new MouseMotionAdapter(){\n      @Override public void mouseDragged(      MouseEvent me){\n        int x=me.getXOnScreen();\n        int diff=x - XDMFrame.this.getLocationOnScreen().x;\n        XDMFrame.this.setSize(diff,XDMFrame.this.getHeight());\n      }\n    }\n);\n    lblLeftGrip.addMouseListener(gma);\n    lblLeftGrip.addMouseMotionListener(new MouseMotionAdapter(){\n      @Override public void mouseDragged(      MouseEvent me){\n        int x=me.getXOnScreen();\n        int diff=XDMFrame.this.getLocationOnScreen().x - x;\n        XDMFrame.this.setLocation(me.getLocationOnScreen().x,XDMFrame.this.getLocation().y);\n        XDMFrame.this.setSize(diff + XDMFrame.this.getWidth(),XDMFrame.this.getHeight());\n      }\n    }\n);\n    lblBottomGrip.addMouseListener(gma);\n    lblBottomGrip.addMouseMotionListener(new MouseMotionAdapter(){\n      @Override public void mouseDragged(      MouseEvent me){\n        int y=me.getYOnScreen();\n        int diff=y - XDMFrame.this.getLocationOnScreen().y;\n        XDMFrame.this.setSize(XDMFrame.this.getWidth(),diff);\n      }\n    }\n);\n  }\n}\n', '1', '29', '2');
INSERT INTO `case_study` VALUES ('4129', 'registerTitlePanel(JPanel)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '54', '1392', '1353', '-1000', '39', '0.04', '0.0171', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'void registerTitlePanel(JPanel panel){\n  vBox=Box.createVerticalBox();\n  vBox.setOpaque(true);\n  vBox.setBackground(ColorResource.getTitleColor());\n  Box hBox=Box.createHorizontalBox();\n  hBox.setBackground(ColorResource.getTitleColor());\n  if (minimizeBox) {\n    JButton btn=createTransparentButton(ImageResource.get(\"min_btn.png\"),new Dimension(30,30),actMin);\n    hBox.add(btn);\n  }\n  if (maximizeBox) {\n    JButton btn=createTransparentButton(ImageResource.get(\"max_btn.png\"),new Dimension(30,30),actMax);\n    hBox.add(btn);\n  }\n  JButton btn=createTransparentButton(ImageResource.get(\"close_btn.png\"),new Dimension(30,30),actClose);\n  hBox.add(btn);\n  vBox.add(hBox);\n  vBox.add(Box.createVerticalGlue());\n  panel.add(vBox,BorderLayout.EAST);\n}\n', '1', '5', '3');
INSERT INTO `case_study` VALUES ('4132', 'createCursors()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '7', '11', '1', '-1000', '3', '0.2381', '0.1667', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private void createCursors(){\n  curDefault=new Cursor(Cursor.DEFAULT_CURSOR);\n  curNResize=new Cursor(Cursor.N_RESIZE_CURSOR);\n  curWResize=new Cursor(Cursor.W_RESIZE_CURSOR);\n  curEResize=new Cursor(Cursor.E_RESIZE_CURSOR);\n  curSResize=new Cursor(Cursor.S_RESIZE_CURSOR);\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('4133', 'createTransparentButton(ImageIcon,Dimension,ActionListener)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '10', '17', '0', '-1000', '3', '0.24', '0.3636', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'JButton createTransparentButton(ImageIcon icon,Dimension d,ActionListener actionListener){\n  CustomButton btn=new CustomButton(icon);\n  btn.setBackground(ColorResource.getTitleColor());\n  btn.setBorderPainted(false);\n  btn.setContentAreaFilled(false);\n  btn.setFocusPainted(false);\n  btn.setPreferredSize(d);\n  btn.addActionListener(actionListener);\n  return btn;\n}\n', '1', '4', '1');
INSERT INTO `case_study` VALUES ('4137', 'componentResized(ComponentEvent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '6', '15', '15', '-1000', '4', '0.1667', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '@Override public void componentResized(ComponentEvent c){\n  contentPane.setSize(super.getWidth(),super.getHeight());\n  modalPane.setSize(super.getWidth(),super.getHeight());\n  dialogPane.setSize(super.getWidth(),super.getHeight());\n  revalidate();\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('4139', 'showModal(MessageBox)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '10', '37', '29', '-1000', '5', '0.2667', '0.1429', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void showModal(MessageBox component){\n  lastFocusOwner=getMostRecentFocusOwner();\n  System.out.println(\"Last focus owner: \" + lastFocusOwner);\n  modalPane.add(component);\n  component.setVisible(true);\n  modalPane.setVisible(true);\n  revalidate();\n  component.selectDefaultButton();\n  startModal(component);\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('4140', 'hideModal(MessageBox)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '10', '42', '39', '-1000', '7', '0.2', '0.0571', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'public void hideModal(MessageBox component){\n  modalPane.remove(component);\n  component.setVisible(false);\n  modalPane.setVisible(false);\n  revalidate();\n  stopModal();\n  if (lastFocusOwner == null) {\n    requestFocusInWindow();\n  }\n else {\n    lastFocusOwner.requestFocusInWindow();\n  }\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('4141', 'showDialog(JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '7', '17', '13', '-1000', '4', '0.3571', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void showDialog(JComponent component){\n  dialogPane.removeAll();\n  dialogPane.add(component);\n  component.setVisible(true);\n  dialogPane.setVisible(true);\n  revalidate();\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('4142', 'hideDialog(JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '6', '13', '11', '-1000', '4', '0.3333', '0.0833', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public void hideDialog(JComponent component){\n  dialogPane.remove(component);\n  component.setVisible(false);\n  dialogPane.setVisible(false);\n  revalidate();\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('4143', 'startModal(Component)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMFrame.java', 'xdm', '16', '88', '56', '-1000', '6', '0.1875', '0.146', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'private synchronized void startModal(Component comp){\n  try {\n    if (SwingUtilities.isEventDispatchThread()) {\n      EventQueue theQueue=Toolkit.getDefaultToolkit().getSystemEventQueue();\n      while (comp.isVisible()) {\n        AWTEvent event=theQueue.getNextEvent();\n        Object source=event.getSource();\n        if (event instanceof ActiveEvent) {\n          ((ActiveEvent)event).dispatch();\n        }\n else         if (source instanceof Component) {\n          ((Component)source).dispatchEvent(event);\n        }\n else         if (source instanceof MenuComponent) {\n          ((MenuComponent)source).dispatchEvent(event);\n        }\n else {\n          System.err.println(\"Unable to dispatch: \" + event);\n        }\n      }\n    }\n else {\n      while (comp.isVisible()) {\n        wait();\n      }\n    }\n  }\n catch (  InterruptedException ignored) {\n  }\n}\n', '0', '5', '8');
INSERT INTO `case_study` VALUES ('4145', 'XDMTableCellRenderer()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\components\\XDMTableCellRenderer.java', 'xdm', '49', '1031', '886', '-1000', '7', '0.0755', '0.0603', '0', '1', '1', '1', '0', '1', '1', '1', '0', '0', 'public XDMTableCellRenderer(){\n  titleLbl=new JLabel(\"This is sample title text\");\n  titleLbl.setForeground(Color.BLACK);\n  iconLbl=new JLabel();\n  iconLbl.setForeground(Color.BLACK);\n  statLbl=new JLabel(\"This is sample status text\");\n  statLbl.setForeground(Color.BLACK);\n  dateLbl=new JLabel(\"Yesterday\");\n  dateLbl.setForeground(Color.BLACK);\n  lineLbl=new JLabel();\n  iconLbl.setOpaque(false);\n  iconLbl.setPreferredSize(new Dimension(56,56));\n  iconLbl.setIcon(ImageResource.get(\"doc.png\"));\n  titleLbl.setBackground(Color.WHITE);\n  titleLbl.setFont(FontResource.getItemFont());\n  titleLbl.setOpaque(false);\n  statLbl.setBackground(Color.WHITE);\n  statLbl.setFont(FontResource.getNormalFont());\n  statLbl.setOpaque(false);\n  dateLbl.setBackground(Color.WHITE);\n  dateLbl.setOpaque(false);\n  dateLbl.setFont(FontResource.getNormalFont());\n  lineLbl=new JLabel();\n  lineLbl.setBackground(ColorResource.getWhite());\n  lineLbl.setOpaque(true);\n  lineLbl.setMinimumSize(new Dimension(10,1));\n  lineLbl.setMaximumSize(new Dimension(lineLbl.getMaximumSize().width,1));\n  lineLbl.setPreferredSize(new Dimension(lineLbl.getPreferredSize().width,1));\n  pcell=new JPanel(new BorderLayout());\n  pcell.setBackground(Color.WHITE);\n  pcell.add(iconLbl,BorderLayout.WEST);\n  Box box=Box.createHorizontalBox();\n  box.add(statLbl);\n  box.add(Box.createHorizontalGlue());\n  box.add(dateLbl);\n  box.setBorder(new EmptyBorder(0,0,10,0));\n  JPanel p=new JPanel(new BorderLayout());\n  p.setOpaque(false);\n  p.add(titleLbl);\n  p.add(box,BorderLayout.SOUTH);\n  p.setBorder(new EmptyBorder(5,0,5,5));\n  pcell.add(p);\n  pcell.add(lineLbl,BorderLayout.SOUTH);\n  pcell.setBorder(new EmptyBorder(0,15,0,15));\n}\n', '0.75', '4', '1');
INSERT INTO `case_study` VALUES ('4149', 'installUI(JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMButtonUI.java', 'xdm', '9', '20', '4', '-1000', '3', '0.3333', '0.3095', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public void installUI(JComponent c){\n  super.installUI(c);\n  if (c instanceof JButton) {\n    JButton btn=(JButton)c;\n    if (!(c instanceof CustomButton)) {\n      c.setForeground(Color.WHITE);\n      c.setBackground(ColorResource.getButtonBackColor());\n      btn.setBorderPainted(false);\n    }\n  }\n}\n', '1', '2', '3');
INSERT INTO `case_study` VALUES ('4150', 'paintButtonNormal(Graphics,AbstractButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMButtonUI.java', 'xdm', '6', '10', '5', '-1000', '3', '0.3889', '0.1905', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'protected void paintButtonNormal(Graphics g,AbstractButton b){\n  if (!b.isOpaque()) {\n    Graphics2D g2=(Graphics2D)g;\n    g2.setPaint(b.getBackground());\n    g2.fillRect(0,0,b.getWidth(),b.getHeight());\n  }\n}\n', '0', '5', '3');
INSERT INTO `case_study` VALUES ('4151', 'paintButtonPressed(Graphics,AbstractButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMButtonUI.java', 'xdm', '11', '52', '49', '-1000', '9', '0.1818', '0.0617', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'protected void paintButtonPressed(Graphics g,AbstractButton b){\n  Graphics2D g2=(Graphics2D)g;\n  g2.setColor(b.getBackground());\n  g2.fillRect(0,0,b.getWidth(),b.getHeight());\n}\n', '0', '3', '1');
INSERT INTO `case_study` VALUES ('4152', 'paintButtonRollOver(Graphics,AbstractButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMButtonUI.java', 'xdm', '10', '42', '39', '-1000', '8', '0.2', '0.0694', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'protected void paintButtonRollOver(Graphics g,AbstractButton b){\n  Graphics2D g2=(Graphics2D)g;\n  g2.setColor(b.getBackground());\n  g2.fillRect(0,0,b.getWidth(),b.getHeight());\n}\n', '0', '3', '1');
INSERT INTO `case_study` VALUES ('4155', 'createArrowButton()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMComboBoxUI.java', 'xdm', '9', '15', '0', '-1000', '3', '0.3333', '0.4381', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'protected JButton createArrowButton(){\n  JButton button=new CustomButton();\n  button.setBackground(ColorResource.getDarkBgColor());\n  button.setIcon(ImageResource.get(\"down_arrow.png\"));\n  button.setBorderPainted(false);\n  button.setFocusPainted(false);\n  button.setName(\"ComboBox.arrowButton\");\n  return button;\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('4158', 'initClassDefaults(UIDefaults)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMLookAndFeel.java', 'xdm', '7', '19', '17', '-1000', '5', '0.1667', '0.0247', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override public void initClassDefaults(UIDefaults table){\n  super.initClassDefaults(table);\n  table.putDefaults(new Object[]{\"ButtonUI\",XDMButtonUI.class.getName(),\"ScrollBarUI\",XDMScrollBarUI.class.getName(),\"MenuItemUI\",XDMMenuItemUI.class.getName(),\"MenuUI\",XDMMenuUI.class.getName(),\"CheckBoxMenuItemUI\",XDMMenuItemUI.class.getName(),\"TreeUI\",XDMTreeUI.class.getName(),\"SpinnerUI\",XDMSpinnerUI.class.getName(),\"ProgressBarUI\",XDMProgressBarUI.class.getName(),\"ComboBoxUI\",XDMComboBoxUI.class.getName()});\n  System.setProperty(\"xdm.defaulttheme\",\"true\");\n  UIManager.put(\"Table.focusCellHighlightBorder\",new EmptyBorder(1,1,1,1));\n  UIManager.put(\"ComboBox.rendererUseListColors\",Boolean.TRUE);\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('4168', 'installUI(JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMMenuItemUI.java', 'xdm', '12', '57', '48', '-1000', '7', '0.2222', '0.1144', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '@Override public void installUI(JComponent c){\n  super.installUI(c);\n  c.setBorder(null);\n  if (c instanceof AbstractButton) {\n    AbstractButton btn=(AbstractButton)c;\n    btn.setBorder(new EmptyBorder(5,10,5,10));\n    btn.setBorderPainted(false);\n  }\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('4169', 'paintButtonPressed(Graphics,AbstractButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMMenuItemUI.java', 'xdm', '7', '15', '9', '-1000', '3', '0.2857', '0.1333', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'protected void paintButtonPressed(Graphics g,AbstractButton b){\n  Color c=g.getColor();\n  Graphics2D g2=(Graphics2D)g;\n  g2.setPaint(colorSelect);\n  g2.fillRect(0,0,b.getWidth(),b.getHeight());\n  g.setColor(c);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('4170', 'paintBackground(Graphics,JMenuItem,Color)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMMenuItemUI.java', 'xdm', '24', '228', '180', '-1000', '11', '0.1354', '0.0855', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '@Override protected void paintBackground(Graphics g,JMenuItem menuItem,Color bgColor){\n  ButtonModel model=menuItem.getModel();\n  Color oldColor=g.getColor();\n  int menuWidth=menuItem.getWidth();\n  int menuHeight=menuItem.getHeight();\n  Color bgc=(Color)menuItem.getClientProperty(\"bgColor\");\n  if (bgc != null) {\n    g.setColor(bgc);\n  }\n else {\n    g.setColor(colorBg);\n  }\n  g.fillRect(0,0,menuWidth,menuHeight);\n  if (model.isArmed() || (menuItem instanceof JMenu && model.isSelected())) {\n    paintButtonPressed(g,menuItem);\n  }\n else {\n  }\n  if (menuItem instanceof JCheckBoxMenuItem) {\n    if (((JCheckBoxMenuItem)menuItem).isSelected()) {\n    }\n  }\n  g.setColor(oldColor);\n}\n', '0', '8', '7');
INSERT INTO `case_study` VALUES ('4173', 'installUI(JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMMenuUI.java', 'xdm', '11', '49', '43', '-1000', '7', '0.2121', '0.0833', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override public void installUI(JComponent c){\n  super.installUI(c);\n  if (c instanceof AbstractButton) {\n    AbstractButton btn=(AbstractButton)c;\n    btn.setBorder(new EmptyBorder(5,10,5,10));\n    btn.setBorderPainted(false);\n  }\n}\n', '0', '2', '2');
INSERT INTO `case_study` VALUES ('4174', 'paintButtonPressed(Graphics,AbstractButton)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMMenuUI.java', 'xdm', '26', '319', '313', '-1000', '22', '0.0769', '0.0232', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', 'protected void paintButtonPressed(Graphics g,AbstractButton b){\n  Color c=g.getColor();\n  Graphics2D g2=(Graphics2D)g;\n  g2.setPaint(colorSelect);\n  g2.fillRect(0,0,b.getWidth(),b.getHeight());\n  g.setColor(c);\n}\n', '0', '4', '1');
INSERT INTO `case_study` VALUES ('4175', 'paintBackground(Graphics,JMenuItem,Color)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMMenuUI.java', 'xdm', '18', '144', '135', '-1000', '13', '0.1333', '0.0498', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '@Override protected void paintBackground(Graphics g,JMenuItem menuItem,Color bgColor){\n  ButtonModel model=menuItem.getModel();\n  Color oldColor=g.getColor();\n  if (model.isArmed() || (menuItem instanceof JMenu && model.isSelected())) {\n    paintButtonPressed(g,menuItem);\n  }\n else {\n    g.setColor(this.colorBg);\n  }\n  g.setColor(oldColor);\n}\n', '0', '6', '4');
INSERT INTO `case_study` VALUES ('4177', 'paint(Graphics,JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMProgressBarUI.java', 'xdm', '7', '10', '0', '-1000', '2', '0.3929', '0.246', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '@Override public void paint(Graphics g,JComponent c){\n  if (!(g instanceof Graphics2D)) {\n    return;\n  }\n  Graphics2D g2=(Graphics2D)g;\n  g2.setPaint(Color.GRAY);\n  g2.fillRect(0,0,c.getWidth(),c.getHeight());\n  if (progressBar.isIndeterminate()) {\n    paintIndeterminate(g,c);\n  }\n else {\n    paintDeterminate(g,c);\n  }\n}\n', '0', '3', '3');
INSERT INTO `case_study` VALUES ('4178', 'paintIndeterminate(Graphics,JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMProgressBarUI.java', 'xdm', '10', '37', '29', '-1000', '5', '0.175', '0.0682', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '@Override protected void paintIndeterminate(Graphics g,JComponent c){\n  Insets b=progressBar.getInsets();\n  int barRectWidth=progressBar.getWidth() - (b.right + b.left);\n  int barRectHeight=progressBar.getHeight() - (b.top + b.bottom);\n  if (barRectWidth <= 0 || barRectHeight <= 0) {\n    return;\n  }\n  Graphics2D g2=(Graphics2D)g;\n  boxRect=getBox(boxRect);\n  if (boxRect != null) {\n    g2.setPaint(ColorResource.getSelectionColor());\n    g2.fillRect(boxRect.x,boxRect.y,boxRect.width,boxRect.height);\n  }\n}\n', '1', '6', '4');
INSERT INTO `case_study` VALUES ('4179', 'paintDeterminate(Graphics,JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMProgressBarUI.java', 'xdm', '10', '29', '13', '-1000', '2', '0.2222', '0.117', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '@Override protected void paintDeterminate(Graphics g,JComponent c){\n  Insets b=progressBar.getInsets();\n  int barRectWidth=progressBar.getWidth() - (b.right + b.left);\n  int barRectHeight=progressBar.getHeight() - (b.top + b.bottom);\n  if (barRectWidth <= 0 || barRectHeight <= 0) {\n    return;\n  }\n  int amountFull=getAmountFull(b,barRectWidth,barRectHeight);\n  Graphics2D g2=(Graphics2D)g;\n  g2.setColor(ColorResource.getSelectionColor());\n  if (progressBar.getOrientation() == JProgressBar.HORIZONTAL) {\n    g2.fillRect(0,0,amountFull,c.getHeight());\n  }\n else {\n  }\n}\n', '1', '7', '4');
INSERT INTO `case_study` VALUES ('4180', 'createUI(JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMScrollBarUI.java', 'xdm', '7', '21', '21', '-1000', '7', '0.1429', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public static ComponentUI createUI(JComponent c){\n  return new XDMScrollBarUI();\n}\n', '0', '1', '1');
INSERT INTO `case_study` VALUES ('4181', 'XDMScrollBarUI()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMScrollBarUI.java', 'xdm', '7', '6', '0', '-1000', '2', '0.2321', '0.2183', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'public XDMScrollBarUI(){\n  roColor1=new Color(170,170,170);\n  barColor1=new Color(215,215,215);\n  trackColor1=new Color(240,240,240);\n  roColor2=new Color(160,160,160);\n  barColor2=new Color(130,130,130);\n  trackColor2=new Color(70,70,70);\n}\n', '0', '0', '1');
INSERT INTO `case_study` VALUES ('4182', 'installUI(JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMScrollBarUI.java', 'xdm', '7', '16', '11', '-1000', '4', '0.3333', '0.1481', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '@Override public void installUI(JComponent c){\n  super.installUI(c);\n  darkMode=scrollbar instanceof DarkScrollBar;\n  if ((scrollbar.getOrientation() == JScrollBar.HORIZONTAL)) {\n    c.setPreferredSize(new Dimension(15,darkMode ? 8 : 15));\n  }\n else {\n    c.setPreferredSize(new Dimension(darkMode ? 8 : 15,15));\n  }\n}\n', '0', '1', '4');
INSERT INTO `case_study` VALUES ('4183', 'paintThumb(Graphics,JComponent,Rectangle)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMScrollBarUI.java', 'xdm', '15', '92', '79', '-1000', '7', '0.1273', '0.0498', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'protected void paintThumb(Graphics g,JComponent c,Rectangle thumbBounds){\n  if (thumbBounds.isEmpty() || !scrollbar.isEnabled()) {\n    return;\n  }\n  int w=thumbBounds.width;\n  int h=thumbBounds.height;\n  g.translate(thumbBounds.x,thumbBounds.y);\n  Graphics2D g2=(Graphics2D)g;\n  if (isThumbRollover()) {\n    g2.setColor(darkMode ? roColor2 : roColor1);\n  }\n else {\n    g2.setColor(darkMode ? barColor2 : barColor1);\n  }\n  g.fillRect(0,0,w,h);\n  g.translate(-thumbBounds.x,-thumbBounds.y);\n}\n', '0', '6', '6');
INSERT INTO `case_study` VALUES ('4184', 'paintTrack(Graphics,JComponent,Rectangle)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMScrollBarUI.java', 'xdm', '6', '9', '3', '-1000', '3', '0.2667', '0.1929', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '@Override protected void paintTrack(Graphics g,JComponent c,Rectangle r){\n  g.setColor(darkMode ? trackColor2 : trackColor1);\n  g.translate(r.x,r.y);\n  g.fillRect(0,0,r.width,r.height);\n  g.translate(-r.x,-r.y);\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('4187', 'createZeroButton()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMScrollBarUI.java', 'xdm', '8', '15', '2', '-1000', '3', '0.5625', '0.3148', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'protected JButton createZeroButton(){\n  JButton button=new JButton();\n  Dimension zeroDim=new Dimension(0,0);\n  button.setPreferredSize(zeroDim);\n  button.setMinimumSize(zeroDim);\n  button.setMaximumSize(zeroDim);\n  return button;\n}\n', '0', '2', '1');
INSERT INTO `case_study` VALUES ('4188', 'createScrollButton(int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMScrollBarUI.java', 'xdm', '24', '162', '48', '-1000', '5', '0.1458', '0.2159', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', 'private JButton createScrollButton(int orientation){\n  darkMode=scrollbar instanceof DarkScrollBar;\n  if (darkMode) {\n    return createZeroButton();\n  }\n  CustomButton btn=new CustomButton();\n  btn.setBackground(darkMode ? trackColor2 : trackColor1);\n  btn.setContentAreaFilled(false);\n  btn.setHorizontalAlignment(JButton.CENTER);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setBorderPainted(false);\n  if (orientation == SwingConstants.NORTH) {\n    btn.setIcon(ImageResource.get(\"up_arrow.png\"));\n    btn.setPreferredSize(new Dimension(15,18));\n  }\n  if (orientation == SwingConstants.SOUTH) {\n    btn.setIcon(ImageResource.get(\"down_arrow.png\"));\n    btn.setPreferredSize(new Dimension(15,18));\n  }\n  if (orientation == SwingConstants.EAST) {\n    btn.setIcon(ImageResource.get(\"right_arrow.png\"));\n    btn.setPreferredSize(new Dimension(18,15));\n  }\n  if (orientation == SwingConstants.WEST) {\n    btn.setIcon(ImageResource.get(\"left_arrow.png\"));\n    btn.setPreferredSize(new Dimension(18,15));\n  }\n  return btn;\n}\n', '1', '2', '7');
INSERT INTO `case_study` VALUES ('4190', 'createNextButton()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMSpinnerUI.java', 'xdm', '12', '21', '0', '-1000', '3', '0.2708', '0.5', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'protected Component createNextButton(){\n  CustomButton btn=new CustomButton();\n  btn.setBackground(ColorResource.getDarkBtnColor());\n  btn.setContentAreaFilled(false);\n  btn.setHorizontalAlignment(JButton.CENTER);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setBorderPainted(false);\n  btn.setIcon(ImageResource.get(\"up_arrow.png\"));\n  btn.setName(\"Spinner.nextButton\");\n  installNextButtonListeners(btn);\n  return btn;\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('4191', 'createPreviousButton()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMSpinnerUI.java', 'xdm', '12', '21', '0', '-1000', '3', '0.2708', '0.5', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'protected Component createPreviousButton(){\n  CustomButton btn=new CustomButton();\n  btn.setBackground(ColorResource.getDarkBtnColor());\n  btn.setContentAreaFilled(false);\n  btn.setHorizontalAlignment(JButton.CENTER);\n  btn.setMargin(new Insets(0,0,0,0));\n  btn.setBorderPainted(false);\n  btn.setIcon(ImageResource.get(\"down_arrow.png\"));\n  btn.setName(\"Spinner.previousButton\");\n  installPreviousButtonListeners(btn);\n  return btn;\n}\n', '1', '1', '1');
INSERT INTO `case_study` VALUES ('4205', 'addCustomEntriesToTable(UIDefaults)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMTheme.java', 'xdm', '55', '54', '0', '-1000', '2', '0.3527', '0.6499', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', 'public void addCustomEntriesToTable(UIDefaults table){\n  super.addCustomEntriesToTable(table);\n  table.put(\"Menu.foreground\",ColorResource.getDeepFontColor());\n  table.put(\"PopupMenu.border\",new LineBorder(ColorResource.getDarkBgColor()));\n  table.put(\"PopupMenu.background\",ColorResource.getDarkerBgColor());\n  table.put(\"MenuItem.foreground\",ColorResource.getDeepFontColor());\n  table.put(\"MenuItem.selectionForeground\",Color.WHITE);\n  table.put(\"Menu.selectionForeground\",Color.WHITE);\n  table.put(\"ComboBox.selectionBackground\",ColorResource.getSelectionColor());\n  table.put(\"ComboBox.selectionForeground\",Color.WHITE);\n  table.put(\"ComboBox.disabledForeground\",Color.GRAY);\n  table.put(\"ComboBox.disabledBackground\",ColorResource.getDarkerBgColor());\n  table.put(\"ComboBox.foreground\",Color.WHITE);\n  table.put(\"ComboBox.background\",ColorResource.getDarkBgColor());\n  table.put(\"Label.foreground\",Color.WHITE);\n  table.put(\"Panel.background\",ColorResource.getDarkerBgColor());\n  table.put(\"ScrollBar.width\",new Integer(15));\n  table.put(\"Popup.background\",ColorResource.getDarkerBgColor());\n  table.put(\"TextArea.background\",ColorResource.getDarkerBgColor());\n  table.put(\"TextArea.foreground\",Color.WHITE);\n  table.put(\"TextArea.selectionBackground\",ColorResource.getSelectionColor());\n  table.put(\"TextArea.selectionForeground\",Color.WHITE);\n  table.put(\"TextArea.caretForeground\",ColorResource.getSelectionColor());\n  table.put(\"TextField.background\",ColorResource.getDarkerBgColor());\n  table.put(\"TextField.border\",new LineBorder(ColorResource.getDarkBgColor(),1));\n  table.put(\"TextField.foreground\",Color.WHITE);\n  table.put(\"TextField.selectionBackground\",ColorResource.getSelectionColor());\n  table.put(\"TextField.selectionForeground\",Color.WHITE);\n  table.put(\"TextField.caretForeground\",ColorResource.getSelectionColor());\n  table.put(\"PasswordField.background\",ColorResource.getDarkerBgColor());\n  table.put(\"PasswordField.border\",new LineBorder(ColorResource.getDarkBgColor(),1));\n  table.put(\"PasswordField.foreground\",Color.WHITE);\n  table.put(\"PasswordField.selectionBackground\",ColorResource.getSelectionColor());\n  table.put(\"PasswordField.selectionForeground\",Color.WHITE);\n  table.put(\"PasswordField.caretForeground\",ColorResource.getSelectionColor());\n  table.put(\"ComboBox.border\",new LineBorder(ColorResource.getDarkBgColor(),1));\n  table.put(\"List.selectionBackground\",ColorResource.getSelectionColor());\n  table.put(\"List.selectionForeground\",Color.WHITE);\n  table.put(\"List.focusCellHighlightBorder\",ColorResource.getSelectionColor());\n  table.put(\"List.border\",new LineBorder(Color.WHITE,1));\n  table.put(\"ScrollPane.border\",new LineBorder(ColorResource.getDarkBgColor(),1));\n  table.put(\"TableHeader.background\",ColorResource.getDarkerBgColor());\n  table.put(\"TableHeader.cellBorder\",new LineBorder(ColorResource.getDarkBgColor(),1));\n  table.put(\"TableHeader.foreground\",Color.WHITE);\n  table.put(\"OptionPane.messageForeground\",Color.WHITE);\n  table.put(\"OptionPane.background\",ColorResource.getDarkerBgColor());\n  table.put(\"Tree.textBackground\",ColorResource.getDarkestBgColor());\n  table.put(\"Tree.selectionBackground\",ColorResource.getSelectionColor());\n  table.put(\"Tree.selectionForeground\",Color.WHITE);\n  table.put(\"Tree.selectionBorderColor\",ColorResource.getSelectionColor());\n  table.put(\"Tree.textForeground\",Color.WHITE);\n  table.put(\"ToggleButton.background\",ColorResource.getDarkerBgColor());\n  table.put(\"ToggleButton.border\",new LineBorder(ColorResource.getDarkBgColor(),1));\n  table.put(\"ToggleButton.foreground\",Color.WHITE);\n  table.put(\"ToggleButton.select\",ColorResource.getSelectionColor());\n}\n', '0.2', '1', '1');
INSERT INTO `case_study` VALUES ('4209', 'paint(Graphics,JComponent)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\laf\\XDMToolBarButtonUI.java', 'xdm', '8', '18', '8', '-1000', '3', '0.3438', '0.1543', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'public void paint(Graphics g,JComponent c){\n  AbstractButton b=(AbstractButton)c;\n  ButtonModel bm=b.getModel();\n  if (bm.isRollover()) {\n    paintButtonRollOver(g,b);\n  }\n else {\n    paintButtonNormal(g,b);\n  }\n  super.paint(g,c);\n}\n', '0', '4', '2');
INSERT INTO `case_study` VALUES ('4232', 'loadNoto(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\res\\FontResource.java', 'xdm', '10', '32', '19', '-1000', '3', '0.2286', '0.1174', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private static Font loadNoto(String sfont){\n  try {\n    InputStream inStream=StringResource.class.getResourceAsStream(\"/fonts/\" + sfont);\n    if (inStream == null) {\n      inStream=new FileInputStream(\"fonts/\" + sfont);\n    }\n    Logger.log(\"Loading \" + sfont);\n    Font font=Font.createFont(Font.TRUETYPE_FONT,inStream);\n    Logger.log(\"Loaded \" + font);\n    return font;\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  return null;\n}\n', '1', '4', '3');
INSERT INTO `case_study` VALUES ('4233', 'loadNotoRegular()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\res\\FontResource.java', 'xdm', '6', '12', '9', '-1000', '4', '0.2778', '0.1429', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private static Font loadNotoRegular(){\n  if (notoNormal == null) {\n    notoNormal=loadNoto(\"NotoSansUI-Regular.ttf\");\n    if (notoNormal == null) {\n      Logger.log(\"Noto regular font could not be loaded\");\n      notoNormal=new Font(Font.DIALOG,Font.PLAIN,12);\n    }\n  }\n  return notoNormal;\n}\n', '1', '0', '3');
INSERT INTO `case_study` VALUES ('4234', 'loadNotoBold()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\res\\FontResource.java', 'xdm', '7', '18', '15', '-1000', '5', '0.2', '0.1', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'private static Font loadNotoBold(){\n  if (notoBold == null) {\n    notoBold=loadNoto(\"NotoSansUI-Bold.ttf\");\n    if (notoBold == null) {\n      Logger.log(\"Noto regular font could not be loaded\");\n      notoBold=new Font(Font.DIALOG,Font.BOLD,12);\n    }\n  }\n  return notoBold;\n}\n', '1', '0', '3');
INSERT INTO `case_study` VALUES ('4246', 'loadDefaultLanguage()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\ui\\res\\StringResource.java', 'xdm', '7', '14', '7', '-1000', '3', '0.2857', '0.1833', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', 'private static void loadDefaultLanguage() throws Exception {\n  strings=new Properties();\n  InputStream inStream=StringResource.class.getResourceAsStream(\"/lang/en.txt\");\n  if (inStream == null) {\n    inStream=new FileInputStream(\"lang/en.txt\");\n  }\n  strings.load(inStream);\n}\n', '0', '1', '2');
INSERT INTO `case_study` VALUES ('4250', 'parseDoc(Document,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '68', '2099', '1920', '-1000', '9', '0.0426', '0.033', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', 'private void parseDoc(Document doc,String surl) throws XPathExpressionException {\n  if (xpath == null) {\n    initXPath();\n  }\n  baseUrl=xpath.evaluate(\"/ns:manifest/ns:baseURL\",doc);\n  if (StringUtils.isNullOrEmptyOrBlank(baseUrl)) {\n    try {\n      URL url=new URL(surl);\n      StringBuilder sb=new StringBuilder();\n      sb.append(url.getProtocol());\n      sb.append(\"://\");\n      sb.append(url.getHost());\n      int port=url.getPort();\n      if (port < 1) {\n        port=url.getDefaultPort();\n      }\n      sb.append(port == 80 ? \"\" : port);\n      String path=url.getPath();\n      String[] arr=path.split(\"/\");\n      for (int i=0; i < arr.length - 1; i++) {\n        if (arr[i].length() > 0) {\n          sb.append(\"/\" + arr[i]);\n        }\n      }\n      baseUrl=sb.toString();\n      System.out.println(\"*** URL: \" + baseUrl);\n    }\n catch (    Exception e) {\n    }\n  }\n  pv=xpath.evaluate(\"/ns:manifest/ns:pv-2.0\",doc);\n  NodeList mediaNodeList=(NodeList)xpath.evaluate(\"/ns:manifest/ns:media\",doc,XPathConstants.NODESET);\n  F4MMedia media=null;\n  for (int i=0; i < mediaNodeList.getLength(); i++) {\n    Node mediaNode=mediaNodeList.item(i);\n    NamedNodeMap attrMap=mediaNode.getAttributes();\n    Node bitRateAttr=attrMap.getNamedItem(\"bitrate\");\n    long bitRate=0;\n    if (bitRateAttr != null) {\n      bitRate=Long.parseLong(bitRateAttr.getNodeValue());\n    }\n    boolean mediaFound=false;\n    if (this.selectedBitRate > 0) {\n      if (this.selectedBitRate == bitRate) {\n        mediaFound=true;\n      }\n    }\n else {\n      mediaFound=true;\n    }\n    if (mediaFound) {\n      media=new F4MMedia();\n      media.setBaseUrl(baseUrl);\n      media.setBitRate(bitRate);\n      media.setUrl(attrMap.getNamedItem(\"url\").getNodeValue());\n      Node bootstrapInfoIdNode=attrMap.getNamedItem(\"bootstrapInfoId\");\n      String bootstrapInfoStr=null;\n      if (bootstrapInfoIdNode != null) {\n        String bootstrapInfoId=bootstrapInfoIdNode.getNodeValue();\n        bootstrapInfoStr=xpath.evaluate(\"/ns:manifest/ns:bootstrapInfo[@id=\'\" + bootstrapInfoId + \"\']\",doc);\n      }\n else {\n        bootstrapInfoStr=xpath.evaluate(\"/ns:manifest/ns:bootstrapInfo\",doc);\n      }\n      media.setBootstrap(Base64.decode(bootstrapInfoStr));\n      break;\n    }\n  }\n  if (media == null) {\n    Logger.log(\"Could not find media\");\n    return;\n  }\n  int pos=0;\n  BufferPointer ptr=new BufferPointer();\n  ptr.setBuf(media.getBootstrap());\n  ptr.setPos(pos);\n  BoxInfo boxInfo=readBoxHeader(ptr);\n  pos=ptr.getPos();\n  long boxSize=boxInfo.getBoxSize();\n  String boxType=boxInfo.getBoxType();\n  if (boxType.equals(\"abst\"))   parseBootstrapBox(media.bootstrap,pos);\n  if (fragsPerSeg == 0)   fragsPerSeg=fragCount;\n  if (live) {\n    fromTimestamp=-1;\n    Logger.log(\"F4M Parser: [Live stream]\");\n  }\n else {\n    Logger.log(\"F4M Parser: [Not Live stream]\");\n  }\n  Logger.log(\"F4M Parser: Start- \" + start);\n  selectedMedia=media;\n}\n', '0.4', '27', '18');
INSERT INTO `case_study` VALUES ('4252', 'loadDoc(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '14', '79', '67', '-1000', '6', '0.1234', '0.0713', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', 'private Document loadDoc(String fileName){\n  FileReader r=null;\n  try {\n    r=new FileReader(fileName);\n    DocumentBuilderFactory domFactory=DocumentBuilderFactory.newInstance();\n    domFactory.setNamespaceAware(true);\n    DocumentBuilder builder=domFactory.newDocumentBuilder();\n    Document doc=builder.parse(new InputSource(r));\n    return doc;\n  }\n catch (  Exception e) {\n    Logger.log(e);\n  }\n finally {\n    if (r != null) {\n      try {\n        r.close();\n      }\n catch (      Exception ee) {\n      }\n    }\n  }\n  return null;\n}\n', '1', '7', '4');
INSERT INTO `case_study` VALUES ('4258', 'parseBootstrapBox(byte[],int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '59', '1300', '889', '-1000', '8', '0.0504', '0.0796', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', 'private void parseBootstrapBox(byte[] bootstrapInfo,int pos){\n  System.out.println(\"parsing abst\");\n  live=false;\n  isMetadata=true;\n  int version=readByte(bootstrapInfo,pos);\n  int flags=(int)readInt24(bootstrapInfo,pos + 1);\n  int bootstrapVersion=(int)readInt32(bootstrapInfo,pos + 4);\n  int b=readByte(bootstrapInfo,pos + 8);\n  int profile=(b & 0xC0) >> 6;\n  int update=(b & 0x10) >> 4;\n  if (((b & 0x20) >> 5) > 0) {\n    live=true;\n    isMetadata=false;\n  }\n  if (update == 0) {\n    segTable.clear();\n    fragTable.clear();\n  }\n  int timescale=(int)readInt32(bootstrapInfo,pos + 9);\n  long currentMediaTime=readInt64(bootstrapInfo,13);\n  long smpteTimeCodeOffset=readInt64(bootstrapInfo,21);\n  pos+=29;\n  BufferPointer bPtr=new BufferPointer();\n  bPtr.setBuf(bootstrapInfo);\n  bPtr.setPos(pos);\n  String movieIdentifier=readString(bPtr);\n  Logger.log(\"[F4M Parser- movieIdentifier: \" + movieIdentifier);\n  pos=bPtr.getPos();\n  int serverEntryCount=readByte(bootstrapInfo,pos++);\n  bPtr.setPos(pos);\n  for (int i=0; i < serverEntryCount; i++)   readString(bPtr);\n  int qualityEntryCount=readByte(bootstrapInfo,pos++);\n  bPtr.setPos(pos);\n  for (int i=0; i < qualityEntryCount; i++)   readString(bPtr);\n  String drmData=readString(bPtr);\n  String smetadata=readString(bPtr);\n  pos=bPtr.getPos();\n  int segRunTableCount=readByte(bootstrapInfo,pos++);\n  long boxSize=0;\n  BufferPointer ptr=new BufferPointer();\n  ptr.setBuf(bootstrapInfo);\n  for (int i=0; i < segRunTableCount; i++) {\n    ptr.setPos(pos);\n    String boxType=\"\";\n    BoxInfo boxInfo=readBoxHeader(ptr);\n    boxSize=boxInfo.getBoxSize();\n    boxType=boxInfo.getBoxType();\n    pos=ptr.getPos();\n    if (boxType.equals(\"asrt\"))     parseAsrtBox(bootstrapInfo,pos);\n    pos+=boxSize;\n  }\n  int fragRunTableCount=readByte(bootstrapInfo,pos++);\n  for (int i=0; i < fragRunTableCount; i++) {\n    ptr.setPos(pos);\n    BoxInfo boxInfo=readBoxHeader(ptr);\n    pos=ptr.getPos();\n    boxSize=boxInfo.getBoxSize();\n    String boxType=boxInfo.getBoxType();\n    Logger.log(\"555 \" + boxType + \" \"+ boxSize);\n    if (boxType.equals(\"afrt\"))     parseAfrtBox(bootstrapInfo,pos);\n    pos+=(int)boxSize;\n  }\n  parseSegAndFragTable();\n}\n', '0.42857142857142855', '29', '9');
INSERT INTO `case_study` VALUES ('4259', 'parseSegAndFragTable()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '33', '423', '318', '-1000', '5', '0.1212', '0.0695', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', 'private void parseSegAndFragTable(){\n  Logger.log(\"parseSegAndFragTable called\");\n  if ((segTable.size() == 0) || (fragTable.size() == 0)) {\n    System.out.println(\"return as zero \" + segTable.size() + \" \"+ fragTable.size());\n    return;\n  }\n  Segment firstSegment=segTable.get(0);\n  Segment lastSegment=segTable.get(segTable.size() - 1);\n  Fragment firstFragment=fragTable.get(0);\n  Fragment lastFragment=fragTable.get(fragTable.size() - 1);\n  if ((lastFragment.fragmentDuration == 0) && (lastFragment.discontinuityIndicator == 0)) {\n    live=false;\n    if (fragTable.size() > 0)     fragTable.remove(fragTable.size() - 1);\n    if (fragTable.size() > 0)     lastFragment=fragTable.get(fragTable.size() - 1);\n  }\n  boolean invalidFragCount=false;\n  Segment prev=segTable.get(0);\n  fragCount=prev.fragmentsPerSegment;\n  for (int i=0; i < segTable.size(); i++) {\n    Segment current=segTable.get(i);\n    fragCount+=(current.firstSegment - prev.firstSegment - 1) * prev.fragmentsPerSegment;\n    fragCount+=current.fragmentsPerSegment;\n    prev=current;\n  }\n  if ((fragCount & 0x80000000) == 0)   fragCount+=firstFragment.firstFragment - 1;\n  if ((fragCount & 0x80000000) != 0) {\n    fragCount=0;\n    invalidFragCount=true;\n  }\n  if (fragCount < lastFragment.firstFragment)   fragCount=lastFragment.firstFragment;\n  if (segStart < 0) {\n    if (live)     segStart=lastSegment.firstSegment;\n else     segStart=firstSegment.firstSegment;\n    if (segStart < 1)     segStart=1;\n  }\n  if (fragStart < 0) {\n    if (live && !invalidFragCount)     fragStart=fragCount - 2;\n else     fragStart=firstFragment.firstFragment - 1;\n    if (fragStart < 0)     fragStart=0;\n  }\n}\n', '1', '8', '18');
INSERT INTO `case_study` VALUES ('4260', 'parseAsrtBox(byte[],int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '23', '167', '81', '-1000', '2', '0.1304', '0.1298', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', 'private void parseAsrtBox(byte[] asrt,int pos){\n  System.out.println(\"parsing asrt\");\n  int version=readByte(asrt,(int)pos);\n  int flags=(int)readInt24(asrt,pos + 1);\n  int qualityEntryCount=readByte(asrt,pos + 4);\n  segTable.clear();\n  pos+=5;\n  BufferPointer bPtr=new BufferPointer();\n  for (int i=0; i < qualityEntryCount; i++) {\n    bPtr.setBuf(asrt);\n    bPtr.setPos(pos);\n    readString(bPtr);\n    pos=bPtr.getPos();\n  }\n  int segCount=(int)readInt32(asrt,pos);\n  pos+=4;\n  System.out.println(\"segcount: \" + segCount);\n  for (int i=0; i < segCount; i++) {\n    int firstSegment=(int)readInt32(asrt,pos);\n    Segment segEntry=new Segment();\n    segEntry.firstSegment=firstSegment;\n    segEntry.fragmentsPerSegment=(int)readInt32(asrt,pos + 4);\n    if ((segEntry.fragmentsPerSegment & 0x80000000) > 0)     segEntry.fragmentsPerSegment=0;\n    pos+=8;\n    segTable.add(segEntry);\n  }\n}\n', '0.4', '11', '4');
INSERT INTO `case_study` VALUES ('4261', 'parseAfrtBox(byte[],int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '28', '231', '84', '-1000', '3', '0.1037', '0.1373', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', 'private void parseAfrtBox(byte[] afrt,int pos){\n  System.out.println(\"Parse afrt\");\n  fragTable.clear();\n  int version=readByte(afrt,pos);\n  int flags=(int)readInt24(afrt,pos + 1);\n  int timescale=(int)readInt32(afrt,pos + 4);\n  int qualityEntryCount=readByte(afrt,pos + 8);\n  pos+=9;\n  BufferPointer args=new BufferPointer();\n  for (int i=0; i < qualityEntryCount; i++) {\n    args.setBuf(afrt);\n    args.setPos(pos);\n    readString(args);\n    pos=args.getPos();\n  }\n  int fragEntries=(int)readInt32(afrt,pos);\n  pos+=4;\n  for (int i=0; i < fragEntries; i++) {\n    int firstFragment=(int)readInt32(afrt,pos);\n    Fragment fragEntry=new Fragment();\n    fragEntry.firstFragment=firstFragment;\n    fragEntry.firstFragmentTimestamp=readInt64(afrt,pos + 4);\n    fragEntry.fragmentDuration=(int)readInt32(afrt,pos + 12);\n    duration+=fragEntry.fragmentDuration;\n    fragEntry.discontinuityIndicator=0;\n    pos+=16;\n    if (fragEntry.fragmentDuration == 0)     fragEntry.discontinuityIndicator=readByte(afrt,pos++);\n    fragTable.add(fragEntry);\n    if ((fromTimestamp > 0) && (fragEntry.firstFragmentTimestamp > 0) && (fragEntry.firstFragmentTimestamp < fromTimestamp))     start=fragEntry.firstFragment + 1;\n  }\n}\n', '0.4', '12', '7');
INSERT INTO `case_study` VALUES ('4262', 'readBoxHeader(BufferPointer)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '18', '104', '55', '-1000', '3', '0.2014', '0.1365', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private BoxInfo readBoxHeader(BufferPointer ptr){\n  int pos=ptr.getPos();\n  byte[] bytesData=ptr.getBuf();\n  StringBuilder boxType=new StringBuilder();\n  long boxSize=0;\n  boxSize=readInt32(bytesData,pos);\n  boxType.append(readStringBytes(bytesData,pos + 4,4));\n  if (boxSize == 1) {\n    boxSize=readInt64(bytesData,pos + 8) - 16;\n    pos+=16;\n  }\n else {\n    boxSize-=8;\n    pos+=8;\n  }\n  ptr.setPos(pos);\n  BoxInfo boxInfo=new BoxInfo();\n  boxInfo.setBoxSize(boxSize);\n  boxInfo.setBoxType(boxType.toString());\n  return boxInfo;\n}\n', '0.3333333333333333', '6', '2');
INSERT INTO `case_study` VALUES ('4263', 'readStringBytes(byte[],int,long)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '6', '11', '7', '-1000', '3', '0.2667', '0.1214', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private String readStringBytes(byte[] bytesData,int pos,long len){\n  StringBuilder resultValue=new StringBuilder();\n  for (int i=0; i < len; i++) {\n    resultValue.append((char)bytesData[pos + i]);\n  }\n  return resultValue.toString();\n}\n', '0.3333333333333333', '5', '3');
INSERT INTO `case_study` VALUES ('4266', 'readInt24(byte[],int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '6', '12', '9', '-1000', '3', '0.2667', '0.0619', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private long readInt24(byte[] data,int pos){\n  long iValLo=(data[pos + 2] & 0xFF + ((data[pos + 1] & 0xFF) * 256));\n  long iValHi=data[pos + 0] & 0xFF;\n  long iVal=iValLo + (iValHi * 65536);\n  return iVal;\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('4267', 'readInt32(byte[],int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '6', '12', '9', '-1000', '3', '0.3333', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private static long readInt32(byte[] data,int pos){\n  long iValLo=((long)(data[pos + 3] & 0xFF) + (long)(data[pos + 2] & 0xFF) * 256);\n  long iValHi=((long)(data[pos + 1] & 0xFF) + ((long)(data[pos + 0] & 0xFF) * 256));\n  long iVal=iValLo + (iValHi * 65536);\n  return iVal;\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('4268', 'readInt64(byte[],int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\F4MManifest.java', 'xdm', '6', '11', '7', '-1000', '3', '0.2857', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'private static long readInt64(byte[] data,int pos){\n  long iValLo=readInt32(data,pos + 4);\n  long iValHi=readInt32(data,pos + 0);\n  long iVal=iValLo + (iValHi * 4294967296L);\n  return iVal;\n}\n', '0', '5', '1');
INSERT INTO `case_study` VALUES ('4308', 'M3U8Manifest(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\M3U8Manifest.java', 'xdm', '7', '20', '19', '-1000', '6', '0.1667', '0.025', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public M3U8Manifest(String file,String playlistUrl) throws Exception {\n  this.playlistUrl=playlistUrl;\n  this.mediaUrls=new ArrayList<String>();\n  this.mediaProperties=new ArrayList<M3U8MediaInfo>();\n  ArrayList<String> urlList=parseManifest(file);\n  makeMediaUrls(urlList);\n}\n', '0', '6', '1');
INSERT INTO `case_study` VALUES ('4311', 'makeMediaUrls(ArrayList<String>)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\M3U8Manifest.java', 'xdm', '19', '117', '63', '-1000', '3', '0.1498', '0.1116', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', 'private void makeMediaUrls(ArrayList<String> list) throws Exception {\n  String base_url=\"\";\n  URI uri=null;\n  for (int i=0; i < list.size(); i++) {\n    String item=list.get(i);\n    String item_url=null;\n    if (item.startsWith(\"/\")) {\n      if (StringUtils.isNullOrEmpty(base_url)) {\n        if (uri == null) {\n          uri=new URI(this.playlistUrl);\n        }\n        base_url=uri.getScheme() + \"://\" + uri.getHost()+ \"\"+ (uri.getPort() > 0 ? \":\" + uri.getPort() : \"\");\n      }\n      item_url=base_url + item;\n    }\n else     if (item.startsWith(\"http://\") || item.startsWith(\"https://\")) {\n      item_url=item;\n    }\n else {\n      int index=this.playlistUrl.lastIndexOf(\'/\');\n      item_url=this.playlistUrl.substring(0,index) + \"/\";\n      item_url+=item;\n    }\n    mediaUrls.add(item_url);\n  }\n}\n', '1', '10', '8');
INSERT INTO `case_study` VALUES ('4312', 'parseManifest(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\downloaders\\metadata\\manifests\\M3U8Manifest.java', 'xdm', '37', '592', '518', '-1000', '9', '0.0662', '0.0878', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', 'private ArrayList<String> parseManifest(String file) throws IOException {\n  ArrayList<String> urlList=new ArrayList<String>();\n  BufferedReader r=null;\n  try {\n    r=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n    boolean expect=false;\n    while (true) {\n      String line=r.readLine();\n      if (line == null)       break;\n      String highline=line.toUpperCase().trim();\n      if (highline.length() < 1)       continue;\n      if (highline.startsWith(\"#EXT-X-KEY\")) {\n        encrypted=true;\n        break;\n      }\n      if (expect) {\n        urlList.add(line.trim());\n        expect=false;\n      }\n      if (highline.startsWith(\"#EXT-X-STREAM-INF\")) {\n        masterPlaylist=true;\n        expect=true;\n        String[] arr=highline.split(\":\");\n        if (arr.length > 1) {\n          mediaProperties.add(M3U8MediaInfo.parse(arr[1].trim()));\n        }\n      }\n      if (highline.startsWith(\"#EXTINF\")) {\n        masterPlaylist=false;\n        expect=true;\n        try {\n          String[] arr=highline.split(\":\");\n          if (arr.length > 1) {\n            mediaProperties.add(M3U8MediaInfo.parse(arr[1].trim()));\n            String str=arr[1].trim().split(\",\")[0];\n            duration+=Float.parseFloat(str);\n          }\n        }\n catch (        Exception e) {\n          Logger.log(e);\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.log(e);\n    throw new IOException(\"Unable to parse menifest\");\n  }\n finally {\n    try {\n      if (r != null)       r.close();\n    }\n catch (    Exception e) {\n    }\n  }\n  return urlList;\n}\n', '1', '12', '14');
INSERT INTO `case_study` VALUES ('4325', 'init(BrowserProxyInfo)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\AbstractAutoProxyHandler.java', 'xdm', '37', '432', '198', '-1000', '5', '0.1351', '0.2736', '0', '0', '0', '0', '0', '1', '1', '0', '1', '1', 'public void init(BrowserProxyInfo paramBrowserProxyInfo) throws Exception {\n  if (!isSupported(paramBrowserProxyInfo.getType())) {\n    throw new Exception(\"Unable to support proxy type: \" + paramBrowserProxyInfo.getType());\n  }\n  this.bpi=paramBrowserProxyInfo;\n  this.autoProxyScript=new StringBuffer();\n  this.autoProxyScript.append(\"var _mon = new Array(\'JAN\', \'FEB\', \'MAR\', \'APR\', \'MAY\', \'JUN\', \'JUL\', \'AUG\', \'SEP\', \'OCT\', \'NOV\', \'DEC\');\\nvar _day = new Array(\'SUN\', \'MON\', \'TUE\', \'WED\', \'THU\', \'FRI\', \'SAT\');\\nfunction _isGmt(i) {\\n return typeof i == \'string\' && i == \'GMT\'; }\");\n  this.autoProxyScript.append(\"function dnsDomainIs(host, domain) {\\nif (domain != null && domain.charAt(0) != \'.\')\\nreturn shExpMatch(host, domain);\\nreturn shExpMatch(host, \'*\' + domain); }\");\n  this.autoProxyScript.append(\"function isPlainHostName(host){\\nreturn (dnsDomainLevels(host) == 0); }\");\n  this.autoProxyScript.append(\"function convert_addr(ipchars) {\\n    var bytes = ipchars.split(\'.\');\\n    var result = ((bytes[0] & 0xff) << 24) |\\n                 ((bytes[1] & 0xff) << 16) |\\n                 ((bytes[2] & 0xff) <<  8) |\\n                  (bytes[3] & 0xff);\\n    return result;\\n}\\n\");\n  this.autoProxyScript.append(\"function isInNet(ipaddr, pattern, maskstr) {\\n    var ipPattern = /^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$/;\\n    var test = ipaddr.match(ipPattern);\\n    if (test == null) {\\n        ipaddr = dnsResolve(ipaddr);\\n        if (ipaddr == null)\\n            return false;\\n    } else if ((test[1] > 255) || (test[2] > 255) || \\n               (test[3] > 255) || (test[4] > 255) ) {\\n        return false;\\n    }\\n    var host = convert_addr(ipaddr);\\n    var pat  = convert_addr(pattern);\\n    var mask = convert_addr(maskstr);\\n    return ((host & mask) == (pat & mask));\\n    \\n}\\n\");\n  this.autoProxyScript.append(getBrowserSpecificAutoProxy());\n  this.autoProxyScript.append(\"function isResolvable(host){\\nreturn (dnsResolve(host) != \'\'); }\");\n  this.autoProxyScript.append(\"function localHostOrDomainIs(host, hostdom){\\nreturn shExpMatch(hostdom, host + \'*\'); }\");\n  this.autoProxyScript.append(\"function dnsDomainLevels(host){\\nvar s = host + \'\';\\nfor (var i=0, j=0; i < s.length; i++)\\nif (s.charAt(i) == \'.\')\\nj++;\\nreturn j; }\");\n  this.autoProxyScript.append(\"function myIpAddress(){\\nreturn \'\");\n  try {\n    InetAddress localInetAddress=InetAddress.getLocalHost();\n    this.autoProxyScript.append(localInetAddress.getHostAddress());\n  }\n catch (  Throwable localThrowable) {\n    localThrowable.printStackTrace();\n    this.autoProxyScript.append(\"127.0.0.1\");\n  }\n  this.autoProxyScript.append(\"\'; }\");\n  this.autoProxyScript.append(\"function shExpMatch(str, shexp){ \\n if (typeof str != \'string\' || typeof shexp != \'string\') return false; \\n if (shexp == \'*\') return true; \\n if (str == \'\' && shexp == \'\') return true; \\n str = str.toLowerCase();\\n shexp = shexp.toLowerCase();\\n var index = shexp.indexOf(\'*\');\\n if (index == -1) { return (str == shexp); } \\n else if (index == 0) { \\n for (var i=0; i <= str.length; i++) { \\n if (shExpMatch(str.substring(i), shexp.substring(1))) return true; \\n } return false; } \\nelse { \\nvar sub = null, sub2 = null; \\nsub = shexp.substring(0, index);\\nif (index <= str.length) sub2 = str.substring(0, index); \\nif (sub != \'\' && sub2 != \'\' && sub == sub2) { \\nreturn shExpMatch(str.substring(index), shexp.substring(index)); }\\nelse { return false; }\\n} }\");\n  this.autoProxyScript.append(\"function _dateRange(day1, month1, year1, day2, month2, year2, gmt){\\nif (typeof day1 != \'number\' || day1 <= 0 || typeof month1 != \'string\' || typeof year1 != \'number\' || year1 <= 0\\n || typeof day2 != \'number\' || day2 <= 0 || typeof month2 != \'string\' || typeof year2 != \'number\' || year2 <= 0\\n || typeof gmt != \'boolean\') return false; \\nvar m1 = -1, m2 = -1;\\nfor (var i=0; i < _mon.length; i++){\\nif (_mon[i] == month1)\\nm1 = i;\\nif (_mon[i] == month2)\\nm2 = i;\\n}\\nvar cur = new Date();\\nvar d1 = new Date(year1, m1, day1, 0, 0, 0);\\nvar d2 = new Date(year2, m2, day2, 23, 59, 59);\\nif (gmt == true)\\ncur = new Date(cur.getTime() - cur.getTimezoneOffset() * 60 * 1000);\\nreturn ((d1.getTime() <= cur.getTime()) && (cur.getTime() <= d2.getTime()));\\n}\\nfunction dateRange(p1, p2, p3, p4, p5, p6, p7){\\nvar cur = new Date();\\nif (typeof p1 == \'undefined\')\\nreturn false;\\nelse if (typeof p2 == \'undefined\' || _isGmt(p2))\\n{\\nif ((typeof p1) == \'string\')\\nreturn _dateRange(1, p1, cur.getFullYear(), 31, p1, cur.getFullYear(), _isGmt(p2));\\nelse if (typeof p1 == \'number\' && p1 > 31)\\nreturn _dateRange(1, \'JAN\', p1, 31, \'DEC\', p1, _isGmt(p2));\\nelse {\\nfor (var i=0; i < _mon.length; i++)\\nif (_dateRange(p1, _mon[i], cur.getFullYear(), p1, _mon[i], cur.getFullYear(), _isGmt(p2)))\\n return true;\\nreturn false;\\n}\\n}\\nelse if (typeof p3 == \'undefined\' || _isGmt(p3))\\n{\\nif ((typeof p1) == \'string\')\\nreturn _dateRange(1, p1, cur.getFullYear(), 31, p2, cur.getFullYear(), _isGmt(p3));\\nelse if (typeof p1 == \'number\' && typeof p2 == \'number\' && (p1 > 31 || p2 > 31))\\nreturn _dateRange(1, \'JAN\', p1, 31, \'DEC\', p2, _isGmt(p3));\\nelse \\n{\\nif ((typeof p2) == \'string\')\\n{\\nreturn _dateRange(p1, p2, cur.getFullYear(), p1, p2, cur.getFullYear(), _isGmt(p3));\\n}\\nelse \\n{\\nfor (var i=0; i < _mon.length; i++)\\nif (_dateRange(p1, _mon[i], cur.getFullYear(), p2, _mon[i], cur.getFullYear(), _isGmt(p3)))\\nreturn true;\\nreturn false;\\n}\\n}\\n}\\nelse if (typeof p4 == \'undefined\' || _isGmt(p4))\\nreturn _dateRange(p1, p2, p3, p1, p2, p3, _isGmt(p4));\\nelse if (typeof p5 == \'undefined\' || _isGmt(p5))\\n{\\nif (typeof p2 == \'number\')\\nreturn _dateRange(1, p1, p2, 31, p3, p4, _isGmt(p5));\\nelse \\nreturn _dateRange(p1, p2, cur.getFullYear(), p3, p4, cur.getFullYear(), _isGmt(p5))\\n}\\nelse if (typeof p6 == \'undefined\')\\nreturn false;\\nelse \\nreturn _dateRange(p1, p2, p3, p4, p5, p6, _isGmt(p7));\\n}\");\n  this.autoProxyScript.append(\"function timeRange(p1, p2, p3, p4, p5, p6, p7) {\\nif (typeof p1 == \'undefined\')\\nreturn false;\\nelse if (typeof p2 == \'undefined\' || _isGmt(p2))\\nreturn _timeRange(p1, 0, 0, p1, 59, 59, _isGmt(p2));\\nelse if (typeof p3 == \'undefined\' || _isGmt(p3))\\nreturn _timeRange(p1, 0, 0, p2, 0, 0, _isGmt(p3));\\nelse if (typeof p4 == \'undefined\')\\nreturn false;\\nelse if (typeof p5 == \'undefined\' || _isGmt(p5))\\nreturn _timeRange(p1, p2, 0, p3, p4, 0, _isGmt(p5));\\nelse if (typeof p6 == \'undefined\')\\nreturn false;\\nelse \\nreturn _timeRange(p1, p2, p3, p4, p5, p6, _isGmt(p7));\\n}\\nfunction _timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt) {\\nif (typeof hour1 != \'number\' || typeof min1 != \'number\' || typeof sec1 != \'number\' \\n|| hour1 < 0 || min1 < 0 || sec1 < 0 \\n|| typeof hour2 != \'number\' || typeof min2 != \'number\' || typeof sec2 != \'number\' \\n|| hour2 < 0 || min2 < 0 || sec2 < 0 \\n|| typeof gmt != \'boolean\')  return false; \\nvar cur = new Date();\\nvar d1 = new Date();\\nvar d2 = new Date();\\nd1.setHours(hour1);\\nd1.setMinutes(min1);\\nd1.setSeconds(sec1);\\nd2.setHours(hour2);\\nd2.setMinutes(min2);\\nd2.setSeconds(sec2);\\nif (gmt == true)\\ncur = new Date(cur.getTime() - cur.getTimezoneOffset() * 60 * 1000);\\nreturn ((d1.getTime() <= cur.getTime()) && (cur.getTime() <= d2.getTime()));\\n}\");\n  this.autoProxyScript.append(\"function weekdayRange(wd1, wd2, gmt){\\nif (typeof wd1 == \'undefined\') \\nreturn false;\\nelse if (typeof wd2 == \'undefined\' || _isGmt(wd2)) \\nreturn _weekdayRange(wd1, wd1, _isGmt(wd2)); \\nelse \\nreturn _weekdayRange(wd1, wd2, _isGmt(gmt)); }\\nfunction _weekdayRange(wd1, wd2, gmt) {\\nif (typeof wd1 != \'string\' || typeof wd2 != \'string\' || typeof gmt != \'boolean\') return false; \\nvar w1 = -1, w2 = -1;\\nfor (var i=0; i < _day.length; i++) {\\nif (_day[i] == wd1)\\nw1 = i;\\nif (_day[i] == wd2)\\nw2 = i; }\\nvar cur = new Date();\\nif (gmt == true)\\ncur = new Date(cur.getTime() - cur.getTimezoneOffset() * 60 * 1000);\\nvar w3 = cur.getDay();\\nif (w1 > w2)\\nw2 = w2 + 7;\\nif (w1 > w3)\\nw3 = w3 + 7;\\nreturn (w1 <= w3 && w3 <= w2); }\");\n  this.autoProxyScript.append(\" function alert() {} \");\n  URL localURL1=null;\n  try {\n    localURL1=new URL(this.bpi.getAutoConfigURL());\n  }\n catch (  MalformedURLException localMalformedURLException) {\n    throw new Exception(\"Auto config URL is malformed\");\n  }\n  URLConnection localURLConnection=getDirectURLConnection(localURL1);\n  if (localURLConnection != null) {\n    if (isSupportedINSFile(localURLConnection) == true) {\n      URL localURL2=getAutoConfigURLFromINS(localURLConnection);\n      localURLConnection=getDirectURLConnection(localURL2);\n    }\n    this.jsPacScript=getJSFileFromURL(localURLConnection);\n    this.autoProxyScript.append(this.jsPacScript);\n  }\n}\n', '0.5', '31', '54');
INSERT INTO `case_study` VALUES ('4326', 'isSupportedINSFile(URLConnection)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\AbstractAutoProxyHandler.java', 'xdm', '10', '33', '21', '-1000', '3', '0.3', '0.1705', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', 'private static boolean isSupportedINSFile(URLConnection paramURLConnection){\n  boolean bool=false;\n  String str1=paramURLConnection.getURL().getFile();\n  if ((str1 != null) && (str1.toLowerCase().endsWith(\".ins\") == true)) {\n    bool=true;\n  }\n else   if (paramURLConnection != null) {\n    String str2=paramURLConnection.getContentType();\n    bool=\"application/x-internet-signup\".equalsIgnoreCase(str2);\n  }\n  return bool;\n}\n', '0', '4', '4');
INSERT INTO `case_study` VALUES ('4331', 'extractAutoProxySetting(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\AbstractAutoProxyHandler.java', 'xdm', '19', '132', '93', '-1000', '5', '0.1675', '0.0833', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', 'protected final ProxyInfo[] extractAutoProxySetting(String paramString){\n  if (paramString != null) {\n    StringTokenizer localStringTokenizer=new StringTokenizer(paramString,\";\",false);\n    ProxyInfo[] arrayOfProxyInfo=new ProxyInfo[localStringTokenizer.countTokens()];\n    int i=0;\n    while (localStringTokenizer.hasMoreTokens()) {\n      String str=localStringTokenizer.nextToken();\n      int j=str.indexOf(\"PROXY\");\n      if (j != -1) {\n        arrayOfProxyInfo[(i++)]=new ProxyInfo(str.substring(j + 6));\n      }\n else {\n        j=str.indexOf(\"SOCKS\");\n        if (j != -1) {\n          arrayOfProxyInfo[(i++)]=new ProxyInfo(null,str.substring(j + 6));\n        }\n else {\n          arrayOfProxyInfo[(i++)]=new ProxyInfo(null,-1);\n        }\n      }\n    }\n    return arrayOfProxyInfo;\n  }\n  return new ProxyInfo[]{new ProxyInfo(null)};\n}\n', '1', '6', '5');
INSERT INTO `case_study` VALUES ('4334', 'init(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\AutoProxyResolver.java', 'xdm', '6', '8', '1', '-1000', '2', '0.3333', '0.2444', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', 'private static void init(String pacURL) throws Exception {\n  BrowserProxyInfo b=new BrowserProxyInfo();\n  b.setType(2);\n  b.setAutoConfigURL(pacURL);\n  handler=new XDMAutoProxyHandler();\n  handler.init(b);\n}\n', '0.6', '2', '1');
INSERT INTO `case_study` VALUES ('4373', 'ProxyInfo(String,String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\ProxyInfo.java', 'xdm', '26', '206', '87', '-1000', '9', '0.1615', '0.1788', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', 'public ProxyInfo(String paramString1,int paramInt1,String paramString2,int paramInt2){\n  this.proxy=paramString1;\n  this.port=paramInt1;\n  this.socksProxy=paramString2;\n  this.socksPort=paramInt2;\n}\n', '0', '8', '1');
INSERT INTO `case_study` VALUES ('4382', 'toString()', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\ProxyInfo.java', 'xdm', '6', '13', '11', '-1000', '4', '0.25', '0.0714', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public String toString(){\n  if (this.proxy != null) {\n    return this.proxy + \":\" + this.port;\n  }\n  if (this.socksProxy != null) {\n    return this.socksProxy + \":\" + this.socksPort;\n  }\n  return \"DIRECT\";\n}\n', '0', '6', '3');
INSERT INTO `case_study` VALUES ('4383', 'dnsResolve(String)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\XDMAutoProxyHandler.java', 'xdm', '6', '12', '9', '-1000', '4', '0.2778', '0.1389', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', 'public String dnsResolve(String paramString){\n  String str=\"\";\n  try {\n    str=InetAddress.getByName(paramString).getHostAddress();\n  }\n catch (  UnknownHostException localUnknownHostException) {\n    localUnknownHostException.printStackTrace();\n  }\n  return str;\n}\n', '0', '3', '2');
INSERT INTO `case_study` VALUES ('4387', 'positiveMin(int,int)', 'D:\\temp\\case study\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman-code-191a918b3ffef3cf9a4b0ea8599ea7ccffe9323a\\xdman\\network\\http\\proxy\\XDMAutoProxyHandler.java', 'xdm', '9', '24', '12', '-1000', '3', '0.4444', '0.2571', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', 'private int positiveMin(int paramInt1,int paramInt2){\n  if (paramInt1 < 0) {\n    return paramInt2;\n  }\n  if (paramInt2 < 0) {\n    return paramInt1;\n  }\n  if (paramInt1 > paramInt2) {\n    return paramInt2;\n  }\n  return paramInt1;\n}\n', '0', '2', '4');
